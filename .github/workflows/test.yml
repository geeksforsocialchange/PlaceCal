name: Build, Test and Optionally Deploy

on: [push, pull_request, workflow_dispatch]

# According to: https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
# Both Node and Yarn should be installed already
# This would ideally be split up into dependent jobs maybe, but this is a direct conversion of the travis script for now

jobs:
  test:
    runs-on: ubuntu-20.04
    env:
      NODE_ENV: test
      CC_TEST_REPORTER_ID: "7e0e573cd74e3418226d922174406b38d5692b01d6464701fa57ce51e75eb72a"
    services:
      postgres:
        image: postgres:13.4 # Same version as on the server
        env:
          POSTGRES_DB: placecal_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: foobar
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        # Health options to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with: # ruby version specified in .ruby-version
          bundler-cache: true # Automagically runs bundle install
      - name: Debug
        run: |
          bundle binstubs railties
          bundle doctor
      - name: Setup Yarn
        uses: mskelton/setup-yarn@v1
        with:
          node-version: 10.17.0
      - name: Do Tests
        run: |
          bundle exec rails webpacker:compile
          bundle exec rake
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          PGPASSWORD: foobar
      # No idea if these work D:
      - name: Deploy To Staging
        if: ${{ github.ref == 'refs/heads/main' && github.event.pull_request.merged == true }}
        run: |
          ./scripts/staging.sh
      - name: Deploy To Production
        if: ${{ github.ref == 'refs/heads/production' && github.event.pull_request.merged == true }}
        run: |
          ./scripts/production.sh
      - name: Report test status to CodeClimate
        uses: aktions/codeclimate-test-reporter@v1
        with:
          codeclimate-test-reporter-id: ${{ env.CC_TEST_REPORTER_ID }}
          command: after-build --exit-code ${{ job.status }}
      - name: Precompile Assets
        run: |
          bundle exec rails assets:precompile
