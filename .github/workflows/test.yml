on:
  - push
  - workflow_dispatch

# According to: https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
# Both Node and Yarn should be installed already
# This would ideally be split up into dependent jobs maybe, but this is a direct conversion of the travis script for now

jobs:
  test:
    runs-on: ubuntu-20.04
    env:
      NODE_ENV: test
    services:
      postgres:
        image: postgres:13.4 # Same version as on the server
        env:
          POSTGRES_DB: placecal_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: foobar
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >- # Health options to wait until postgres has started
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Download Chrome driver
        uses: nanasess/setup-chromedriver@master

      - name: Unzip and install chrome driver
        run: |
          export DISPLAY=:99
          sudo Xvfb -ac ${DISPLAY} -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
          chromedriver --url-base=/wd/hub &

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with: # ruby version specified in .ruby-version
          bundler-cache: true # Automagically runs bundle install
          cache-version: 3 # Invalidate originally used corrupted cache
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
          # cache: yarn
        env:
          NODE_ENV: test
      - name: Setup Yarn Dependencies
        run: |
          yarn install --immutable
        env:
          NODE_ENV: test
      - name: Run unit tests
        run: |
          bin/test --unit --no-fix
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          PGPASSWORD: foobar
      - name: Run system tests
        run: |
          bin/test --system --no-lint
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          PGPASSWORD: foobar
      - name: Upload test screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-screenshots
          path: tmp/screenshots/
          if-no-files-found: ignore
