---
http_interactions:
  - request:
      method: get
      uri: https://calendar.google.com/calendar/ical/alliscalm.net_u2ktkhtig0b7u9bd9j8re3af2k@group.calendar.google.com/public/basic.ics
      body:
        encoding: US-ASCII
        string: ""
      headers:
        Accept-Encoding:
          - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
        Accept:
          - "*/*"
        User-Agent:
          - Ruby
    response:
      status:
        code: 200
        message: OK
      headers:
        Strict-Transport-Security:
          - max-age=31536000; includeSubDomains
        Content-Type:
          - text/calendar; charset=UTF-8
        Cache-Control:
          - no-cache, no-store, max-age=0, must-revalidate
        Pragma:
          - no-cache
        Expires:
          - Mon, 01 Jan 1990 00:00:00 GMT
        Date:
          - Wed, 04 Jul 2018 11:13:30 GMT
        X-Content-Type-Options:
          - nosniff
        X-Frame-Options:
          - SAMEORIGIN
        X-Xss-Protection:
          - 1; mode=block
        Server:
          - GSE
        Alt-Svc:
          - quic=":443"; ma=2592000; v="43,42,41,39,35"
        Transfer-Encoding:
          - chunked
      body:
        encoding: ASCII-8BIT
        string: !binary |-
          BEGIN:VCALENDAR
PRODID:-//Google Inc//Google Calendar 70.9054//EN
VERSION:2.0
CALSCALE:GREGORIAN
METHOD:PUBLISH
X-WR-CALNAME:PlaceCal: Hulme & Moss Side
X-WR-TIMEZONE:Europe/London
X-WR-CALDESC:Events managed by the PlaceCal team. Questions: support@placec
 al.org.
BEGIN:VTIMEZONE
TZID:Europe/Dublin
X-LIC-LOCATION:Europe/Dublin
BEGIN:STANDARD
TZOFFSETFROM:+0000
TZOFFSETTO:+0100
TZNAME:IST
DTSTART:19700329T010000
RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU
END:STANDARD
BEGIN:DAYLIGHT
TZOFFSETFROM:+0100
TZOFFSETTO:+0000
TZNAME:GMT
DTSTART:19701025T020000
RRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU
END:DAYLIGHT
END:VTIMEZONE
BEGIN:VTIMEZONE
TZID:America/New_York
X-LIC-LOCATION:America/New_York
BEGIN:DAYLIGHT
TZOFFSETFROM:-0500
TZOFFSETTO:-0400
TZNAME:EDT
DTSTART:19700308T020000
RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU
END:DAYLIGHT
BEGIN:STANDARD
TZOFFSETFROM:-0400
TZOFFSETTO:-0500
TZNAME:EST
DTSTART:19701101T020000
RRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU
END:STANDARD
END:VTIMEZONE
BEGIN:VTIMEZONE
TZID:Europe/London
X-LIC-LOCATION:Europe/London
BEGIN:DAYLIGHT
TZOFFSETFROM:+0000
TZOFFSETTO:+0100
TZNAME:BST
DTSTART:19700329T010000
RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU
END:DAYLIGHT
BEGIN:STANDARD
TZOFFSETFROM:+0100
TZOFFSETTO:+0000
TZNAME:GMT
DTSTART:19701025T020000
RRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU
END:STANDARD
END:VTIMEZONE
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20180620T160000
DTEND;TZID=Europe/Dublin:20180620T180000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111329Z
UID:o4mrhdph04bsuv2b54rib6etns@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Session run by Together Dementia Support call Sally on: 0161 28
 39970
LAST-MODIFIED:20180621T102519Z
LOCATION:Alexandra Park\, 180 Russell St\, Manchester M16 7JL\, United King
 dom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Dementia Friends Walk and Talk Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160309T110000
DTEND;TZID=Europe/Dublin:20160309T130000
RRULE:FREQ=WEEKLY;UNTIL=20180619T225959Z;BYDAY=WE
DTSTAMP:20180704T111329Z
UID:g8rj73669j0bfmqtsoh7eu977c@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Session run by Together Dementia Support call Sally on: 0161 28
 39970
LAST-MODIFIED:20180621T102519Z
LOCATION:Alexandra Park\, 180 Russell St\, Manchester M16 7JL\, United King
 dom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Dementia Friends Walk and Talk Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=America/New_York:20160307T100000
DTEND;TZID=America/New_York:20160307T170000
RRULE:FREQ=WEEKLY;BYDAY=MO
DTSTAMP:20180704T111329Z
UID:iq0tt2vpgh4hsceqnr4sfq8qt4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Age Friendly group for chat and helping with IT issues. Good fo
 od and good company. Call 0161 226 4335 for more information
LAST-MODIFIED:20180611T110316Z
LOCATION:Cardinal Court\, 344-346 Moss Ln E\, Manchester M14 4LZ\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:MTTC A Byte to Eat
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20180516T150000Z
DTEND:20180516T170000Z
DTSTAMP:20180704T111329Z
UID:6elpa2d5n6u311tqa7hpl2idbi@google.com
CREATED:20180516T120641Z
DESCRIPTION:
LAST-MODIFIED:20180516T120716Z
LOCATION:
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Dementia Walk - Alexandra Park Manchester 
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20180503T160000
DTEND;TZID=Europe/Dublin:20180503T213000
DTSTAMP:20180704T111329Z
UID:m49bh1kfp1lad70icrh0egqotg@google.com
RECURRENCE-ID;TZID=Europe/Dublin:20180503T113000
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:\n 11.30am at the Windrush Millennium Centre\nSupport\, trips\,
  short breaks\, information/advice\, respite alternative treatments\, pract
 ical help.\nTel: 0161 226-9562\nFax: 0161 226-7947\nEmail: admin@acmhs-blac
 kmentalhealth.org.uk\nWeb: www.acmhs-blackmentalhealth.org.uk\n\n
LAST-MODIFIED:20180503T121852Z
LOCATION:Windrush Drive\, Windrush Dr\, Manchester\, Manchester M9 5QR\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Carers Support drop in (1st Thursday of the month)
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160407T113000
DTEND;TZID=Europe/Dublin:20160407T170000
RRULE:FREQ=MONTHLY;BYDAY=1TH
DTSTAMP:20180704T111329Z
UID:m49bh1kfp1lad70icrh0egqotg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:\n 11.30am at the Windrush Millennium Centre\nSupport\, trips\,
  short breaks\, information/advice\, respite alternative treatments\, pract
 ical help.\nTel: 0161 226-9562\nFax: 0161 226-7947\nEmail: admin@acmhs-blac
 kmentalhealth.org.uk\nWeb: www.acmhs-blackmentalhealth.org.uk\n\n
LAST-MODIFIED:20180503T121852Z
LOCATION:Windrush Drive\, Windrush Dr\, Manchester\, Manchester M9 5QR\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Carers Support drop in (1st Thursday of the month)
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20180503T153000
DTEND;TZID=Europe/Dublin:20180503T183000
DTSTAMP:20180704T111329Z
UID:isbg5oeqfhrrq22k7nn48363ak@google.com
RECURRENCE-ID;TZID=Europe/Dublin:20180503T090000
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Hulme had the very first branch library of Manchester’s free li
 brary – which was itself the country’s first free library!\n\nAssistance Av
 ailable:\n\n * Mondays: 1–5pm\n * Tuesdays: 9am–1pm\n * Wednesdays: 1–8pm\n
  * Thursdays: 9am-1pm\n * Fridays: 1–5pm\n * Saturdays: 9am-1pm & 2–5pm\n\n
 Bank holidays we are closed.\n\nThere is underground car parking. The libra
 ry is open the same hours as the leisure centre and you will be able to bro
 wse & borrow a selection of popular books\, return & renew books\, log on t
 o internet-ready PCs\, and collect reservations.\n\nContact: 0161 227 3739 
 or hulmelibrary@manchester.gov.uk
LAST-MODIFIED:20180503T121715Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, United Kingdom
SEQUENCE:3
STATUS:CONFIRMED
SUMMARY:Hulme Library Assistance
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160419T090000
DTEND;TZID=Europe/Dublin:20160419T130000
RRULE:FREQ=WEEKLY;BYDAY=TU,TH,SA
EXDATE;TZID=Europe/Dublin:20180315T090000
EXDATE;TZID=Europe/Dublin:20180313T090000
DTSTAMP:20180704T111329Z
UID:isbg5oeqfhrrq22k7nn48363ak@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Hulme had the very first branch library of Manchester’s free li
 brary – which was itself the country’s first free library!\n\nAssistance Av
 ailable:\n\n * Mondays: 1–5pm\n * Tuesdays: 9am–1pm\n * Wednesdays: 1–8pm\n
  * Thursdays: 9am-1pm\n * Fridays: 1–5pm\n * Saturdays: 9am-1pm & 2–5pm\n\n
 Bank holidays we are closed.\n\nThere is underground car parking. The libra
 ry is open the same hours as the leisure centre and you will be able to bro
 wse & borrow a selection of popular books\, return & renew books\, log on t
 o internet-ready PCs\, and collect reservations.\n\nContact: 0161 227 3739 
 or hulmelibrary@manchester.gov.uk
LAST-MODIFIED:20180503T121628Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme Library Assistance
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20180313T140000
DTEND;TZID=Europe/Dublin:20180313T160000
DTSTAMP:20180704T111329Z
UID:830tjus3mgbrd673412lus6pvg@google.com
RECURRENCE-ID;TZID=Europe/Dublin:20180313T100000
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The So Sew group is run by Linda Puttick and takes place on a T
 uesday morning from 10-12.\nIt runs on a 3 term x 10 week basis and is at p
 resent looking for new members.\nThere is a fee to cover costs.\n\nContact:
  lindajputtick@gmail.com\n
LAST-MODIFIED:20180424T114038Z
LOCATION:Amani Centre\, Quinney Crescent\, Moss Side\, Manchester\, M167DG
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:So Sew Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T100000
DTEND;TZID=Europe/Dublin:20160308T120000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111329Z
UID:830tjus3mgbrd673412lus6pvg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The So Sew group is run by Linda Puttick and takes place on a T
 uesday morning from 10-12.\nIt runs on a 3 term x 10 week basis and is at p
 resent looking for new members.\nThere is a fee to cover costs.\n\nContact:
  lindajputtick@gmail.com\n
LAST-MODIFIED:20180424T114038Z
LOCATION:Amani Centre\, Quinney Crescent\, Moss Side\, Manchester\, M167DG
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:So Sew Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20180521T130000Z
DTEND:20180521T150000Z
DTSTAMP:20180704T111329Z
UID:2hb63b0go2bldrivu2vlcap8s2@google.com
CLASS:PUBLIC
CREATED:20180424T083151Z
DESCRIPTION:£2.50 for people living in the local community.<br><br>Spaces a
 re limited so please do contact us to confirm your attendance ASAP. <br><br
 >Email: <a href="mailto:info@claystudio.co.uk">info@claystudio.co.uk</a><br
 ><br>Mobile: 07445 920244
LAST-MODIFIED:20180424T100941Z
LOCATION:Community Clay Studio Manchester CIC\, 61 Old Birley St\, Manchest
 er M15 5RF\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Clay Studio: Introduction to Art Therapy Workshop
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160309T110000
DTEND;TZID=Europe/Dublin:20160309T150000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111329Z
UID:ukacgtjt3lj1hb6q6siijmvlg4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Call 0161 2261291 for more details
LAST-MODIFIED:20171110T155920Z
LOCATION:St Edmund's Church\, Alexandra Road South\, Whalley Range\, Manche
 ster\, M16 8EZ
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Foodbank
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171204T120000Z
DTEND:20171204T140000Z
DTSTAMP:20180704T111329Z
UID:5fgmn21mpae9cuoujtgofch5hq@google.com
CREATED:20171110T151029Z
DESCRIPTION:This event has a Google Hangouts video call.\nJoin: https://plu
 s.google.com/hangouts/_/alliscalm.net/aquarius-over?hceid=YWxsaXNjYWxtLm5ld
 F91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.5fg
 mn21mpae9cuoujtgofch5hq&hs=121
LAST-MODIFIED:20171110T154632Z
LOCATION:Emmanuel Pentecostal Church\, Brennan Cl\, Manchester M15 6NN\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Aquarius Over 50s Christmas Party and keep fit session
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20171219T160000Z
DTEND:20171219T190000Z
DTSTAMP:20180704T111329Z
UID:66g7vpsecais2ffvmcv82c5fgc@google.com
CREATED:20171110T153651Z
DESCRIPTION:Christmas party for older people at the Ibrahim Maine Centre in
  association with Mosscare Housing. \n\n\nThis event has a Google Hangouts 
 video call.\nJoin: https://plus.google.com/hangouts/_/alliscalm.net/ibrahim
 -maine?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm91cC
 5jYWxlbmRhci5nb29nbGUuY29t.66g7vpsecais2ffvmcv82c5fgc&hs=121
LAST-MODIFIED:20171110T153651Z
LOCATION:M14 4ET\, Maine Rd\, Manchester M14 4ET\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Ibrahim Maine Centre Christmas Party
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171218T130000Z
DTEND:20171218T150000Z
DTSTAMP:20180704T111329Z
UID:0v7p86b5ofjor75d771andnpo6@google.com
CREATED:20171110T153337Z
DESCRIPTION:£3.50\, open to all.\n\n\nThis event has a Google Hangouts vide
 o call.\nJoin: https://plus.google.com/hangouts/_/alliscalm.net/mission-to-
 the?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm91cC5jY
 WxlbmRhci5nb29nbGUuY29t.0v7p86b5ofjor75d771andnpo6&hs=121
LAST-MODIFIED:20171110T153337Z
LOCATION:Moss Side Millennium Powerhouse\, 140 Raby St\, Manchester M14 4SL
 \, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Mission To The City Christmas Lunch
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171216T150000Z
DTEND:20171216T190000Z
DTSTAMP:20180704T111329Z
UID:4khv586f3likive4k9hvqqn7vh@google.com
CREATED:20171110T153241Z
DESCRIPTION:Open to all aged 14-25. \n\n\nThis event has a Google Hangouts 
 video call.\nJoin: https://plus.google.com/hangouts/_/alliscalm.net/lgbt-yo
 uth?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm91cC5jY
 WxlbmRhci5nb29nbGUuY29t.4khv586f3likive4k9hvqqn7vh&hs=121
LAST-MODIFIED:20171110T153241Z
LOCATION:LGBT+ Centre\, 49-51 Sidney Street\, M1 7HB
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:LGBT+ Youth Group Festive Feast Xmas Party
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171215T130000Z
DTEND:20171215T160000Z
DTSTAMP:20180704T111329Z
UID:69gku8e455dbcagco25a79r8u9@google.com
CREATED:20171110T153154Z
DESCRIPTION:Bus leaving Trinity House at noon. Lunch £16\, bus £2\, contact
  [Trinity House](https://placecal.org/places/7) for bookings.\n\n\nThis eve
 nt has a Google Hangouts video call.\nJoin: https://plus.google.com/hangout
 s/_/alliscalm.net/link-good?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkO
 Wo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.69gku8e455dbcagco25a79r8u9&
 hs=121
LAST-MODIFIED:20171110T153154Z
LOCATION:St Kentigern’s Irish Club\, 36 Wilbraham Road\, M14 7DW
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Link Good Neighbours Christmas Lunch
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171214T180000Z
DTEND:20171214T223000Z
DTSTAMP:20180704T111329Z
UID:2ce8ftaccgali3m43f5pbos9ik@google.com
CREATED:20171110T153043Z
DESCRIPTION:Don’t sit alone at home! Come and enjoy a lovely evening with a
  bar\, DJ\, and tasty food. £20 per person\, call Anne on 0782 6637754 to r
 eserve. \n\n\nThis event has a Google Hangouts video call.\nJoin: https://p
 lus.google.com/hangouts/_/alliscalm.net/aquarius-over?hceid=YWxsaXNjYWxtLm5
 ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.2
 ce8ftaccgali3m43f5pbos9ik&hs=121
LAST-MODIFIED:20171110T153043Z
LOCATION:Whalley Range 11-18 High School\, Wilbraham Road\, Manchester M16 
 8GW\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Aquarius Over 50s Christmas Bash
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171214T140000Z
DTEND:20171214T170000Z
DTSTAMP:20180704T111329Z
UID:02ki90e6vspsh7jcm7f9pkpm7e@google.com
CREATED:20171110T152753Z
DESCRIPTION:A free\, creative space for LGBT+ people to make\, do and chat.
  Join us for some festive crafting\, all materials provided.\n\nThis event 
 has a Google Hangouts video call.\nJoin: https://plus.google.com/hangouts/_
 /alliscalm.net/lgbt-creative?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJk
 OWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.02ki90e6vspsh7jcm7f9pkpm7e
 &hs=121
LAST-MODIFIED:20171110T152753Z
LOCATION:LGBT+ Centre\, 49-51 Sidney Street\, M1 7HB
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:LGBT+ Creative Cafe
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171213T130000Z
DTEND:20171213T150000Z
DTSTAMP:20180704T111329Z
UID:1v5h3mu63n77b5qmm0e9ck0l87@google.com
CREATED:20171110T152704Z
DESCRIPTION:Food from 1pm. £7.50 (price and menu tbc)\, supports Manchester
  Mind\, open to all. Booking required\, check [our website](http://goodmood
 food.org/) for contact information or pop in for more details.\n\nThis even
 t has a Google Hangouts video call.\nJoin: https://plus.google.com/hangouts
 /_/alliscalm.net/good-mood-food?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1O
 WJkOWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.1v5h3mu63n77b5qmm0e9ck0
 l87&hs=121
LAST-MODIFIED:20171110T152704Z
LOCATION:Zion Community Resource Centre Cafe\, 339 Stretford Road\, M15 4ZY
 .
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Good Mood Food Christmas Meal
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171208T140000Z
DTEND:20171208T180000Z
DTSTAMP:20180704T111329Z
UID:7u3vc0oi2ap3tgll63inovilni@google.com
CREATED:20171110T151640Z
DESCRIPTION:Come give us some feedback or get involved in the centre. \n\nA
 ctivities for all the family\, open to all. \n\n\nThis event has a Google H
 angouts video call.\nJoin: https://plus.google.com/hangouts/_/alliscalm.net
 /aquarius?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm9
 1cC5jYWxlbmRhci5nb29nbGUuY29t.7u3vc0oi2ap3tgll63inovilni&hs=121
LAST-MODIFIED:20171110T151749Z
LOCATION:Eden Close\, Eden Cl\, Manchester M15 6AX\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Aquarius Community Centre Open Day
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171208T190000Z
DTEND:20171208T210000Z
DTSTAMP:20180704T111329Z
UID:0951jr6t8p7boct2vkhi4dtas5@google.com
CREATED:20171110T151737Z
DESCRIPTION:Have a go at speaking a different language by chatting with peo
 ple from lots of different nationalities\, open to all. \n\n\nThis event ha
 s a Google Hangouts video call.\nJoin: https://plus.google.com/hangouts/_/a
 lliscalm.net/christmas?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cm
 UzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.0951jr6t8p7boct2vkhi4dtas5&hs=12
 1
LAST-MODIFIED:20171110T151737Z
LOCATION:New Hope Fellowship Church\, Tatton St\, Manchester M15 4EQ\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Christmas Evening Meal & Language Exchange
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171207T110000Z
DTEND:20171207T140000Z
DTSTAMP:20180704T111329Z
UID:4muvftbietvr0idkpr5tfpahl5@google.com
CREATED:20171110T151514Z
DESCRIPTION:Open to all over 50s residents of Hulme and Moss Side. RSVP to 
 Matt Youngson: M.Youngson@mmu.ac.uk or 0161 247 5960. \n\n\nThis event has 
 a Google Hangouts video call.\nJoin: https://plus.google.com/hangouts/_/all
 iscalm.net/mmu-age?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYW
 Yya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.4muvftbietvr0idkpr5tfpahl5&hs=121
LAST-MODIFIED:20171110T151514Z
LOCATION:MMU Brooks Building\, 53 Bonsall St\, Manchester M15 6GX Bonsall S
 t\, Manchester M15 6GX\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:MMU Age Friendly Winter Meal
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171206T120000Z
DTEND:20171206T140000Z
DTSTAMP:20180704T111329Z
UID:563kk887jorbrpvurk0i7ss7vp@google.com
CREATED:20171110T151218Z
DESCRIPTION:Food bank and computer access available\, all welcome\n\nThis e
 vent has a Google Hangouts video call.\nJoin: https://plus.google.com/hango
 uts/_/alliscalm.net/new-hope?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJk
 OWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.563kk887jorbrpvurk0i7ss7vp
 &hs=121
LAST-MODIFIED:20171110T151303Z
LOCATION:New Hope Fellowship Church\, Tatton St\, Manchester M15 4EQ\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:New Hope Fellowship Church Christmas Lunch
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171205T143000Z
DTEND:20171205T163000Z
DTSTAMP:20180704T111329Z
UID:6dv25c3ogp3l1co41aofl25mts@google.com
CREATED:20171110T151153Z
DESCRIPTION:Open to all older residents and project volunteers\n\nThis even
 t has a Google Hangouts video call.\nJoin: https://plus.google.com/hangouts
 /_/alliscalm.net/people-first?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJ
 kOWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.6dv25c3ogp3l1co41aofl25mt
 s&hs=121
LAST-MODIFIED:20171110T151153Z
LOCATION:The Wesley Centre\, Royce Road\, Manchester\, M15 5BP
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:People First Befriending Project Party
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160306T103000
DTEND;TZID=Europe/Dublin:20160306T120000
RRULE:FREQ=WEEKLY;BYDAY=SU
DTSTAMP:20180704T111329Z
UID:i78dcpt96ccnephj8jj5tpihhs@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20171027T094125Z
LOCATION:Amani Centre\, Quinney Crescent\, Moss Side Manchester\, United Ki
 ngdom M16 7DG
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Age Friendly Worship
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160311T110000
DTEND;TZID=Europe/Dublin:20160311T130000
RRULE:FREQ=WEEKLY;BYDAY=FR
DTSTAMP:20180704T111329Z
UID:0o4out0c7ep1vrdui0bpas75fk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Call 0161 2262702 for more details
LAST-MODIFIED:20171027T094000Z
LOCATION:Wesley Centre\, Royce Road\, Manchester M15 5BP
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Foodbank 
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T110000
DTEND;TZID=Europe/Dublin:20160308T130000
RRULE:FREQ=WEEKLY;BYDAY=TU,FR
DTSTAMP:20180704T111329Z
UID:l5u6s4dnluh7ff8ms9r1uju4v4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Call 0161 2269012
LAST-MODIFIED:20171027T093746Z
LOCATION:Church of God of Prophecy Christian Centre\, 140 Raby St\, Manches
 ter M14 4SL
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Tuesday and Friday Lunch
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160304T093000
DTEND;TZID=Europe/Dublin:20160304T123000
RRULE:FREQ=WEEKLY;BYDAY=FR
DTSTAMP:20180704T111329Z
UID:rrdioupeip6f4go2i0np3g6p90@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Tea and cake for all to enjoy.\nCall: 07734414449
LAST-MODIFIED:20171019T101742Z
LOCATION:Fallowfield Methodist Church\, Platt Lane\, M14 7BU
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Cafe on the Corner
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160728T123000
DTEND;TZID=Europe/London:20160728T140000
RRULE:FREQ=WEEKLY;BYDAY=TH
DTSTAMP:20180704T111329Z
UID:36niiq2fvmilgeo87a0ims6qrg@google.com
CREATED:20170908T132839Z
DESCRIPTION:Dementia Café\nEvery Thursday from 12.30-2pm\nCome along the Af
 rican Caribbean Care Group's Dementia Café at the Claremont Resource Centre
 \,\noffering:\n\nAdvice and Support\nUnderstanding dementia and what to exp
 ect\nMeet an Outreach Worker\nMeet new friends\nFree Refreshments\n\nWe wil
 l be running FREE drop-in cafés every Thursday from 12.30-2pm.
LAST-MODIFIED:20170928T113500Z
LOCATION:Claremont Resource Centre\, Rolls Cres\, Manchester M15 5FS\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Dementia Café
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160211T120000
DTEND;TZID=Europe/Dublin:20160211T130000
RRULE:FREQ=WEEKLY;UNTIL=20170927T225959Z;BYDAY=TH
DTSTAMP:20180704T111329Z
UID:c8shegdd6aqv95lfnp955opkpg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:A low impact circuits based class suitable for older people or 
 people new to exercise. Exercises can be adapted for chair based exercise. 
 \nEveryone welcome!\n£1 per session\nFor more info please contact: 0161 219
  2569 or email info@mcrgames.com 
LAST-MODIFIED:20170927T143207Z
LOCATION:Moss Side Millennium Powerhouse\, 140 Raby St\, Manchester M14 4SL
 \, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Easy Rhythms Circuits Class
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160309T103000
DTEND;TZID=Europe/Dublin:20160309T120000
RRULE:FREQ=WEEKLY;UNTIL=20170926T225959Z;BYDAY=WE
DTSTAMP:20180704T111329Z
UID:6tdpus8n0els7bqsj42r1m4cqo@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Coffee Morning\, for more details please contact Anysie on: any
 sie.kankindi@citysouthmanchester.co.uk\nTelephone: 0161 2265045  \nMobile: 
 07579965667  
LAST-MODIFIED:20170927T143109Z
LOCATION:Frank Hatton Court\, Whickham Cl\, Manchester M14 4HW\, United Kin
 gdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Coffee Morning
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160210T130000
DTEND;TZID=Europe/Dublin:20160210T150000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111329Z
UID:g8be1mc0qgg2p7ogrhg5v05m14@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:For more information please contact Imogen on:\nTelephone: 0161
  2251064   \nEmail: Imogen imogen@trinityhousecrc.org.uk\n
LAST-MODIFIED:20170927T143040Z
LOCATION:New Hope Fellowship Church\, Tatton St\, Manchester M15 4EQ\, UK
SEQUENCE:2
STATUS:CONFIRMED
SUMMARY:Computer Class
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160310T100000
DTEND;TZID=Europe/Dublin:20160310T110000
RRULE:FREQ=WEEKLY;UNTIL=20160804T085959Z;BYDAY=TH
DTSTAMP:20180704T111329Z
UID:q3o04umeujrq63qpmm01aj8obg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Zumba Gold\n(for active older people)\n10:00am  11.00am\nPrice:
  £3\nKath Locke Centre\n123 Moss Lane East\nManchester M15 5DD\nTel: 0161 4
 55 0211\nwww.kathlockecentre.co.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, 123 Moss Ln E\, Manchester M15 5DD\, United Ki
 ngdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Zumba Gold (for active older people)
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160601T131500
DTEND;TZID=Europe/Dublin:20160601T151500
RRULE:FREQ=MONTHLY;BYDAY=1WE
DTSTAMP:20180704T111329Z
UID:jmbsmjit50j5jjb64iukr1dek4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Women only Wednesdays Cancer Support\nAre you a woman? Have you
  or anyone else close to you been affected by cancer? Would you like to mee
 t other women in a similar position?\n\nWhat do we offer?\n- regular meetin
 gs where you can chat with others and share experiences.\n- Health and well
 -being therapies (relaxation\, massage\, reflexology)\n- Structured cancer 
 related workshops\, i.e. managing fatigue\, stress and anxiety.\n- Advice a
 nd tips on how to manage both practical and emotional issues.\nWe meet on t
 he first Wednesday of every month at Kath Locke Centre from 1.15 - 3.15pm.\
 n\nThis project is targeted at\, but not exclusive to BME and marginilised 
 women living in Hulme\, Moss Side\, Old Trafford\, Levenshulme\, Chorlton a
 nd surrounding areas.\n\nAll activities and workshops are delivered by qual
 ified and experienced individuals. Activities are free and refreshments are
  provided. We welcome women who are carers\, family and friends (over 18 ye
 ars) of people with cancer.\n\nFor more information contact Marcella: 07496
  089310\, email: info@can-survive.org.uk \nhttp://www.can-survive.org.uk/
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, 123 Moss Ln E\, Manchester\, Manchester M15 5D
 D\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:WoW - Cancer Support Group
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160612
DTEND;VALUE=DATE:20160613
DTSTAMP:20180704T111329Z
UID:rdibmc8jc9k33iu03iat93bb14@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:On Sunday 12th June\, we will be hosting a community picnic at 
 Birley as part of the national Big Lunch\, an annual event aimed at bringin
 g people together and celebrating community.\nThe event will be linked to M
 anchester’s status as European City of Science 2016 and will have avery spe
 cial science theme.\nIn partnership with the Faculty of Science and Enginee
 ring\, MetMUnch\, the University’s Environment Team\, and local community p
 artners we’ll be showcasing fermented foods made out of microbes and invite
  you to take part and bring your own picnic. There’ll be plenty of family-f
 riendly activities and you can find out more about the Birley Community Orc
 hard and herb garden.  \nFor more information on how to get involved contac
 t: engagement@mmu.ac.uk or 0161 247 3393
LAST-MODIFIED:20170908T133001Z
LOCATION:Birley Fields\, Bonsall St\, Manchester M15\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:World Family Picnic European City of Science 
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T130000
DTEND;TZID=Europe/Dublin:20160308T150000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111329Z
UID:ajmngp86a2h662ifdsgqa19g1o@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Advice\, information\, discussion\, support\nTel: 0161 226-9562
 \nFax: 0161 226-7947\nEmail: admin@acmhs-blackmentalhealth.org.uk\nWeb: www
 .acmhs-blackmentalhealth.org.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Windrush Millennium Centre\, Alexandra Rd\, Manchester\, Mancheste
 r M16 7WD\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Women's Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160629T123000
DTEND;TZID=Europe/London:20160629T133000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111329Z
UID:5fv1n8mjfsdi4r90g4kn8qv68s@google.com
CREATED:20170908T132839Z
DESCRIPTION:Walking is great for your well-being and puts a spring in your 
 step. With this event you can take part in free short art walks at Whitwort
 h Park to help you get active at a pace that works for you.\n\nIt's an exce
 llent way to stretch your legs\, explore what's on your door-step\, and mak
 e new friends.\n\nJoin us every Wednesday lunchtime 12.30pm - 1.30pm for a 
 walk in the park. We meet at the park entrance reception of the gallery.\n\
 nFor more info pleas econtact whitworth@manchester.ac.uk or call 0161 275 7
 450
LAST-MODIFIED:20170908T133001Z
LOCATION:Whitworth Art Gallery\, Oxford Rd\, Manchester M15 6ER\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Walking for Health
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160831T110000
DTEND;TZID=Europe/London:20160831T120000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111329Z
UID:joasmfnajdqsem4ui6d734hvik@google.com
CREATED:20170908T132839Z
DESCRIPTION:A slower version of the beautiful game. You're never too old to
  get involved and no matter what your age\, we're giving you the chance to 
 play football!\n\nWalking Football is targeted at over 50s specifically\, b
 ut it doesn't matter if you are younger than this\, everyone can attend the
  sessions. There are some differences though:\nNo running allowed - anyone 
 found running will concede a free-kick. Running is defined as neither foot 
 being planted. In order for someone to be 'walking' at least one foot must 
 be planted at all times.\nNon-contact - you cannot tackle another player\, 
 but you can intercept and block.\n\nContact Name: Andy Hilton\nContact Emai
 l: Andy.Hilton@traffordleisure.co.uk\nContact Number: 07912280894
LAST-MODIFIED:20170908T133001Z
LOCATION:Old Trafford Sports Barn\, Carver Street\, Manchester\, M16 9QP
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Walking Football
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160603T110000Z
DTEND:20160603T140000Z
DTSTAMP:20180704T111329Z
UID:fe1bpddo56210crdqjcbeebmqo@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Event to celebrate the re-opening of Trinity House!\nMore detai
 ls to come!\n\nContact: Lydia on 0161 225 1064 or email info@trinityhousecr
 c.org.uk 
LAST-MODIFIED:20170908T133001Z
LOCATION:Trinity House Community Resource Centr\, Grove Close\, off Platt L
 ane Rusholme Manchester M14 5AA
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Trinity House Opening Party!
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160813T140000Z
DTEND:20160813T150000Z
DTSTAMP:20180704T111329Z
UID:r5q1733g2bvresv3mhq6prsii4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160709T140000Z
DTEND:20160709T160000Z
DTSTAMP:20180704T111329Z
UID:qug0u0p9mao9b5r1bjhb7p2i0g@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160514T140000Z
DTEND:20160514T160000Z
DTSTAMP:20180704T111329Z
UID:bbsr0u24i384jp5uuk7j3gdijg@google.com
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160611T140000Z
DTEND:20160611T160000Z
DTSTAMP:20180704T111329Z
UID:8l5fr4vv5to10t0toggs1om3bk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20161015T140000Z
DTEND:20161015T160000Z
DTSTAMP:20180704T111329Z
UID:20i9p5qdohcfn6crsptu9nf33g@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160917T140000Z
DTEND:20160917T160000Z
DTSTAMP:20180704T111329Z
UID:17b0apo0hj3ruoih6t1r6ngo04@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160215T130000
DTEND;TZID=Europe/London:20160215T134500
RRULE:FREQ=WEEKLY;UNTIL=20160523T120000Z;BYDAY=MO
DTSTAMP:20180704T111329Z
UID:fro63veov8mqgv5cimhgeenfac@google.com
CREATED:20170908T132839Z
DESCRIPTION:Contact Anne for more information:\n0161 226 8254\nanne389@btin
 ternet.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Aqarius Centre\, 21 Eden Close\, M15 6AX
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Tea Break Club
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160213T100000
DTEND;TZID=Europe/Dublin:20160213T120000
RRULE:FREQ=WEEKLY;BYDAY=SA
DTSTAMP:20180704T111329Z
UID:a4alfmno6rglodpcifge9nk20k@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:In the multi-purpose hall\n0161 247 2646
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Birley\, MMU\, 53 Bonsall St\, Manchester M15 6G
 X
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Table Tennis
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160902T043000Z
DTEND:20160902T053000Z
DTSTAMP:20180704T111329Z
UID:sq3aljklpqvue2b1cro280t8d0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Hosted by One Manchester as part of their Community Impact Week
LAST-MODIFIED:20170908T133001Z
LOCATION:St Georges Court\, Angela Street\, Hulme
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Summer Party at St Georges Court
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160723
DTEND;VALUE=DATE:20160821
DTSTAMP:20180704T111329Z
UID:90p7ccilqtvco3akf0kkkmtaj4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks\, Birley\, 53 Bonsall Street Manchester M15 6GX
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Summer Community Games
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160211T103000
DTEND;TZID=Europe/London:20160211T113000
RRULE:FREQ=WEEKLY;UNTIL=20160427T225959Z;BYDAY=TH
DTSTAMP:20180704T111329Z
UID:5cr001f3kjbhbuf0qvq9ak63mcr20160211T103000@google.com
CREATED:20170908T132839Z
DESCRIPTION:Drinks and Toast - everyone welcome!
LAST-MODIFIED:20170908T133001Z
LOCATION:Amani Centre Quinney Cresent Shoreham Close\, Manchester M16 7DG
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Social Morning
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160428T103000
DTEND;TZID=Europe/London:20160428T120000
RRULE:FREQ=WEEKLY;UNTIL=20160505T093000Z;BYDAY=TH
DTSTAMP:20180704T111329Z
UID:3asg00tcgps8jke94eeqlcg28s@google.com
CREATED:20170908T132839Z
DESCRIPTION:Drinks and Toast - everyone welcome!
LAST-MODIFIED:20170908T133001Z
LOCATION:Amani Centre Quinney Cresent Shoreham Close\, Manchester M16 7DG
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Social Morning
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160603T084500Z
DTEND:20160603T110000Z
DTSTAMP:20180704T111329Z
UID:3bsivkij8er2fu0ldvbso6fefg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:We will be arriving at 9.45am and sing at 10.30am\nWe are singi
 ng Put a Little Love In Your Heart voices only \nDress code blue and white\
 n\nContact Sally Ferris\,  Together Dementia Support\n07854 335890\n
LAST-MODIFIED:20170908T133001Z
LOCATION:EPPING WALK BRIDGE located at MMU Bonsall St Hulme Manchester M15 
 6GX
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Sing Along BBC MUSIC DAY
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160302T120000
DTEND;TZID=Europe/Dublin:20160302T130000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111329Z
UID:r5l6c80are2taqivse57jbd4f8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:A gentle all-over body workout designed to improve mobility\, s
 trength\, stamina and all-round fitness. This class is suitable for older a
 dults\, and complete beginners.\n\nCost £1\n\nRegistration\nhttp://www.manc
 hester.gov.uk/activelifestyles \n\n0161 234 5454
LAST-MODIFIED:20170908T133001Z
LOCATION:Active Lifestyles Centre\, Denmark Rd\, Manchester M15 6FG\, Unite
 d Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Simply Circuits
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160304T130000
DTEND;TZID=Europe/Dublin:20160304T140000
RRULE:FREQ=WEEKLY;BYDAY=FR
DTSTAMP:20180704T111329Z
UID:gdv37123s1t96ps2ofi1rpg0i4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:A gentle all-over body workout designed to improve mobility\, s
 trength\, stamina and all-round fitness. This class is suitable for older a
 dults\, and complete beginners.\n\nCost\n£1\n\nRegistration\nhttp://www.man
 chester.gov.uk/activelifestyles\n0161 234 5454\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Active Lifestyles Centre\, Denmark Rd\, Manchester M15 6FG\, Unite
 d Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Simply Circuits
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160229T133000
DTEND;TZID=Europe/Dublin:20160229T143000
RRULE:FREQ=WEEKLY;BYDAY=MO
DTSTAMP:20180704T111329Z
UID:8hepbt7egl0aj85qhpmijck2d8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:A gentle all-over body workout designed to improve mobility\, s
 trength\, stamina and all-round fitness. This class is suitable for older a
 dults\, and complete beginners.\n\nCost\n£1\n\nRegistration\nhttp://www.man
 chester.gov.uk/activelifestyles\n0161 234 5454\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Active Lifestyles Centre\, Denmark Rd\, Manchester M15 6FG\, Unite
 d Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Simply Circuits
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160507T130000Z
DTEND:20160507T150000Z
DTSTAMP:20180704T111329Z
UID:e88e148ts9v4rum5iib27jvhhk@google.com
CREATED:20170908T132839Z
DESCRIPTION:Exhibition of artwork created at a workshop held at two worksho
 ps in March and April.\n\nEvent will be held in the stunningly renovated Ch
 orlton Lodge in Alexandra Park (Entrance on the corner of Smalldale Avenue 
 and Claremount Road\, M16 7JL)  as part of the final Pankhurst in the Park’
  2016 event on 7 May 2016\, 2-4pm. \n\nTo attend\, please contact:\nEmail: 
 hello@alexandra-arts.org.uk \nText or call: 07816683171\nCall: 01618813744 
 (In care of Chris at JNR8 Community Centre).\n\n\nhttp://www.alexandra-arts
 .org.uk/events/2016/2/26/rebels-and-rollers
LAST-MODIFIED:20170908T133001Z
LOCATION:Chorlton Lodge\, Alexandra Park - enter on the corner of Smalldale
  Avenue and Claremount Road\, M16 7JL
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Rebels and Rollers Exhibition
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160306T120000
DTEND;TZID=Europe/London:20160306T140000
RRULE:FREQ=WEEKLY;UNTIL=20160403T110000Z;INTERVAL=4;BYDAY=SU
DTSTAMP:20180704T111329Z
UID:nbgu5dcs8jbjs6gbfn6b6s0k8g@google.com
CREATED:20170908T132839Z
DESCRIPTION:Rebels & Rollers is a free workshop\, taking place as part of A
 lexandra Arts’\nPankhurst in the Park programme. In an accessible\, welcomi
 ng and age-friendly environment\, this is your opportunity to learn new art
  skills and take part in ‘Pankhurst in the Park’ 2016\, which celebrates Al
 exandra Park’s rich historical connection to the Iconic Suffragette\, Emmel
 ine Pankhurst.\n\nAt these two workshops you will have the opportunity to l
 earn how to screen print and develop an artwork\, whilst socialising with l
 ike-minded people in your community.\n\nYour artwork will then be exhibited
  in the stunningly renovated Chorlton Lodge in Alexandra Park (Entrance on 
 the corner of Smalldale Avenue and Claremount Road\, M16 7JL)  as part of t
 he final Pankhurst in the Park’ 2016 event on 7 May 2016\, 2-4pm. \n\nFree 
 transport and refreshments provided.\n\nTo attend\, please contact:\nEmail:
  hello@alexandra-arts.org.uk \nText or call: 07816683171\nCall: 01618813744
  (In care of Chris at JNR8 Community Centre).\n\nhttp://www.alexandra-arts.
 org.uk/events/2016/2/26/rebels-and-rollers
LAST-MODIFIED:20170908T133001Z
LOCATION: Chorlton Lodge in Alexandra Park (Entrance on the corner of Small
 dale Avenue and Claremount Road\, M16 7JL) 
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Rebels & Rollers Workshop
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160610T170000Z
DTEND:20160610T200000Z
DTSTAMP:20180704T111329Z
UID:ujbcmaotadn0e6impbkb0us0fo@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Community Social Event at St James\, quiz\, food and music from
  40s and 50s - Invite your friends and neighbours!
LAST-MODIFIED:20170908T133001Z
LOCATION:St James\, 95a Princess Road/ Great Western Street\, M14 4TH
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Queens Birthday Community Social
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160514T120000
DTEND;TZID=Europe/London:20160514T170000
RRULE:FREQ=WEEKLY;COUNT=1;INTERVAL=1;BYDAY=SA
DTSTAMP:20180704T111329Z
UID:o4h6rnctnhes5sh4f27kmrruvsr20160514T110000@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Monday: 11am-2pm \nTuesday: 11am-2pm\nWednesday: 11am-2pm\nThur
 sday: 11am -2pm\nFriday: Closed\nSaturday: 12noon-5pm\nSunday: Closed\n\nCa
 ll: 0161 227 3758\nEmail: powerhouselibrary@manchester.gov.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Powerhouse Library\, 140 Raby St\, Manchester M14 4SQ\, 
 United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Powerhouse Library
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160312T120000
DTEND;TZID=Europe/Dublin:20160312T170000
RRULE:FREQ=WEEKLY;UNTIL=20160514T105959Z;INTERVAL=1;BYDAY=SA
DTSTAMP:20180704T111329Z
UID:o4h6rnctnhes5sh4f27kmrruvs@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Monday: 11am-2pm\; 3-7pm\nTuesday: 11am-2pm\; 3-7pm\nWednesday:
  11am-2pm\; 3-7pm\nThursday: 11am -2pm\; 3-7pm\nFriday: closed\nSaturday: 1
 2-5pm\n\nCall: 0161 227 3758\nEmail: powerhouselibrary@manchester.gov.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Powerhouse Library\, 140 Raby St\, Manchester M14 4SQ\, 
 United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Powerhouse Library
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160307T110000
DTEND;TZID=Europe/London:20160307T140000
RRULE:FREQ=WEEKLY;UNTIL=20160420T225959Z;BYDAY=MO,TU,WE,TH,FR
DTSTAMP:20180704T111329Z
UID:545po409sj4csr736q6i7rc1q4@google.com
CREATED:20170908T132839Z
DESCRIPTION:Monday: 11am-2pm\; 3-7pm\nTuesday: 11am-2pm\; 3-7pm\nWednesday:
  11am-2pm\; 3-7pm\nThursday: 11am -2pm\; 3-7pm\nFriday: closed\nSaturday: 1
 2-5pm\n\nCall: 0161 227 3758\nEmail: powerhouselibrary@manchester.gov.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Powerhouse Library\, 140 Raby St\, Manchester M14 4SQ\, 
 United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Powerhouse Library
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160307T110000
DTEND;TZID=Europe/London:20160307T140000
RRULE:FREQ=WEEKLY;UNTIL=20160420T225959Z;BYDAY=MO,TU,WE,TH,SA
DTSTAMP:20180704T111329Z
UID:3b8kpamiap7kb9pkt4mfmfigv4@google.com
CREATED:20170908T132839Z
DESCRIPTION:Monday: 11am-2pm \nTuesday: 11am-2pm\nWednesday: 11am-2pm\nThur
 sday: 11am -2pm\nFriday: closed\nSaturday: 12-5pm\nSunday: Closed\n\nCall: 
 0161 227 3758\nEmail: powerhouselibrary@manchester.gov.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Powerhouse Library\, 140 Raby St\, Manchester M14 4SQ\, 
 United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Powerhouse Library
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160209T110000
DTEND;TZID=Europe/Dublin:20160209T130000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111329Z
UID:172i90f6f0itk25m9ng76do3vk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Computer club and other activities based in the Powerhouse Libr
 ary\nContact: 0161 227 3758\nEmail: powerhouselibrary@manchester.gov.uk\n\n
 Library general opening times:\nMonday: 11am-2pm\; 3-7pm\nTuesday: 11am-2pm
 \; 3-7pm\nWednesday: 11am-2pm\; 3-7pm\nThursday: 11am -2pm\; 3-7pm\nFriday:
  closed\nSaturday: 12-5pm\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Millennium Powerhouse\, 140 Raby St\, Manchester M14 4SL
 \, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Power rangers
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160404T093000Z
DTEND:20160404T120000Z
DTSTAMP:20180704T111329Z
UID:svbh3dhsvcn1drr56flocpnuio@google.com
CREATED:20170908T132839Z
DESCRIPTION:Manchester Children’s Book Festival FREE Trailblazer Event\n\nJ
 oin us on Monday 4th April for a ‘Poetry Together’ event.\n\n‘Poetry Togeth
 er’ is a brand new competition inviting children and young people to pair u
 p with a parent\, grandparent\, carer\, older sibling or friend\, to share 
 their ideas and create brand new poetry. \n\nWhat’s On?\nOn the day\, you w
 ill have the opportunity to enjoy performances from local poets and take pa
 rt in a range of creative workshops aimed at sparking your own inner poet! 
 \nThese will include sessions led by our talented EdLab students who will h
 elp you explore poetic responses to the things that affect you. You will ha
 ve the chance to share some of your favourite non-English poetry\, and staf
 f from Manchester Children’s Book Festival will be on hand to deliver lots 
 of fun activities aimed at getting you writing together. You can also find 
 out more about this year’s programme of exciting events.\nThis is a FREE ev
 ent. No experience needed and all ages welcome! \n\nWhat is Poetry Together
 ?\nPoetry Together is a cross-generational competition aimed at bringing pe
 ople together to share ideas and create brand new poetry. It has been devel
 oped under the direction of Poet Laureate Carol Ann Duffy and is being deli
 vered by the Manchester Children’s Book Festival at Manchester Metropolitan
  University in collaboration with the  \nCo-operative. \n\nTo book Contact 
 Amy Barber:  \nEmail: engagement@mmu.ac.uk  \nTel: 0161 247 3393\n\nFor fur
 ther details visit: \nwww.mmu.ac.uk/birley/community-events 
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Birley Campus\, MMU\, 53 Bonsall Street\, M15 6G
 X
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Poetry Together! Intergenerational Event
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20160310T123000Z
DTEND:20160310T150000Z
DTSTAMP:20180704T111329Z
UID:j6v8ng4mepk89pt5fp1htsm6mg@google.com
CREATED:20170908T132839Z
DESCRIPTION:World Cafe\, with food.
LAST-MODIFIED:20170908T133001Z
LOCATION:
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Peace Foundation - Women's Event
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20170103T110000Z
DTEND:20170103T143000Z
DTSTAMP:20180704T111329Z
UID:lo11cnnrkpror6fpo0luss49bs@google.com
CREATED:20170908T132839Z
DESCRIPTION:Over 50's luncheon club runs on a Tuesday from 11.00 to 2.30pm.
 \n\nQuizzes\, bingo\, outings\, parish functions\, fund raising dances\, ch
 air aerobics and luncheon club.\n\nCosts: £2 for yearly membership and £3.0
 0 for lunch.\nAge Range: 50 +\nContact: Father Patrick Deegan\, 0161 226 17
 30\, ourladys@btinternet.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Our Lady's Church\, Raby Street\, Moss Side\, M16 7JQ
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Our Lady's Over 50s Luncheon
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160817T173000Z
DTEND:20160817T193000Z
DTSTAMP:20180704T111329Z
UID:v3eq0s4l0ht61a55k7vg2h94t0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Come and hear the pitches for funding in your area and have a s
 ay on what should be funded! The Community Soup events will take place at t
 he following times and venues and members of the public are invited to come
  along to help decide on what should be funded:\n\nSouth Central MCR: Hulme
 \, St Georges\, Shawgreen\, Loretto\,\nBentley\, Loxford\, Aquarius\, Monto
 n St\, Moss Side\, Whalley Range
LAST-MODIFIED:20170908T133001Z
LOCATION:Z-arts\, 335 Stretford Road\, Hulme\, Manchester M15 5ZA
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:ONE Manchester: Community Soup
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20160820T110000Z
DTEND:20160820T140000Z
DTSTAMP:20180704T111329Z
UID:l2dtmp7nof852u4b44kf75qj9s@google.com
CREATED:20170908T132839Z
DESCRIPTION:Event to celebrate the four-week programme of sporting activity
  which has included over 100 free events for all ages\n\nThis will take pla
 ce at the Brooks Building on Saturday 20th August and will be a celebration
  of the summer of sport for all that have been involved. It will feature an
  athletics track\, street bmx and entertainment. Check back for further upd
 ates. \n\nMore Event details: http://www2.mmu.ac.uk/birley/community-events
 /olympic-summer-of-sport/\nOr contact Amy Barber at MMU on engagement@mmu.a
 c.uk or phone 0161 247 3393.  
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building (Birley)\, 53 Bonsall Street\, M15 6GX
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Olympics Summer Closing Event!
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20170513T110000Z
DTEND:20170513T150000Z
DTSTAMP:20180704T111329Z
UID:2897j0ae2m93hcj6c823kn7438@google.com
CREATED:20170908T132839Z
DESCRIPTION:A group of young people from the Moss Side Pride Fellowship are
  planning to deliver a youth-led food festival\, celebrating the diversity 
 of an often stigmatised and overlooked area of Manchester - Moss Side. The 
 girls aim to connect residents with city-central businesses and build the e
 nterprise skills of young people from the community. \nThough Moss Side is 
 just over a mile from the city centre\, it has not experienced the cultural
  and economic explosion of central Manchester: it still feels a long way fr
 om the ‘Northern Powerhouse’. Young people are refusing to accept that this
  is their destiny. \n\nThis youth-led event will allow a different\, positi
 ve story to be told about Moss Side. It will bring people from outside the 
 area (who may hold longstanding stereotypes about Moss Side) to meet commun
 ity members as equals. The festival will enable minority ethnic communities
  to come together and share skills/talents\, and demonstrate that Moss Side
  is a strong and proud community. By being led by young residents in partne
 rship with other community groups\, we will demonstrate that there is innov
 ation\, creativity and brilliance in the next generation.\n\n“In our commun
 ity we respect each other. I just hope we can change people’s perspectives 
 and make them want to come to Moss Side\, walk through it. I hope it change
 s what they think about it.” Lateefa\, aged 13 from Moss Side\n\nStart: 13t
 h May\, 2017 at 12:00pm\n\nContact RECLAIM for more:\nTel: 0161 234 2950 \n
 Email: info@reclaimproject.org.uk\n\nhttps://www.reclaim.org.uk/Event/moss-
 side-food-festival
LAST-MODIFIED:20170908T133001Z
LOCATION:Alexandra Park\, 180 Russell St\, Moss Side Manchester M16 7JL
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Moss Side Food Festival by RECLAIM 
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T173000
DTEND;TZID=Europe/Dublin:20160308T183000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111329Z
UID:opm2teom22fqpne2mb17fur2c8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:cllr.e.rowles@manchester.gov.uk 07852 306 957\ncllr.a.cox@manch
 ester.gov.uk 0161 226 3258\ncllr.s.ali@manchester.gov.uk 07960 514 188\n\nE
 very Tuesday 5.30pm to 6.30pm (Excluding the month of August)\nGreenheys Ad
 ult Education Centre\nGreat Western Street\nMoss Side\nMANCHESTER\nM14 4HZ
LAST-MODIFIED:20170908T133001Z
LOCATION:Greenheys Adult Learning Centre\, Upper Lloyd Street\, Manchester 
 Area\, Manchester M14 4\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Moss Side Councillors Surgery
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160815T120000
DTEND;TZID=Europe/London:20160815T130000
RRULE:FREQ=WEEKLY;BYDAY=MO
DTSTAMP:20180704T111329Z
UID:l0hu2aet9ts69haqbtpsisdge8@google.com
CREATED:20170908T132839Z
DESCRIPTION:The session costs £3. contact the church or drop in on the day 
 for more details \n0161 226 6531
LAST-MODIFIED:20170908T133001Z
LOCATION:Emmanuel Pentecostal Church\, Brennan Cl\, Manchester M15 6NN\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Mobility Class and tea club
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160920
DTEND;VALUE=DATE:20160921
DTSTAMP:20180704T111329Z
UID:2o283bfsugkngh3m4et5eioi18@google.com
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:MMU Welcome Week "Meet the Neighbours"
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160710
DTEND;VALUE=DATE:20160711
DTSTAMP:20180704T111329Z
UID:h56pf4ai304oq33gv1o24bmnlg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Contact Manchester and District Orienteering Club for more deta
 ils: http://www.mdoc.org.uk/ \n\ntwinpeak2016@mdoc.org.uk \n\nVenue\nSouthe
 rn and Central Manchester\n\nTravel\nPublic Transport: 2km from Piccadilly 
 to Assembly. Frequent bus services with walk of about 200m from nearest sto
 ps.\n\nAssembly\nManchester Metropolitan University\, MMU Birley Campus\, n
 ear A5103 Princess Road\, Hulme. Postcode M15 6GX. GR SJ836965.\n\nParking\
 nWithin 200m of Assembly.\n\nDogs\nDogs will not be welcome on the Campus. 
 Nearby public parking is available\n\nFacilities\nToilets\, showers\, locke
 rs\, snack bar. Traders (possibly)\n\nEntry\nEnter online via SI Entries - 
 open from April 14th. Enter by course letter\, A to G.\n\nSelect Edit entri
 es to amend your entry\, or Entry list to view current entries.\n\nAll pre-
 entered competitors will use SI Air Cards\, with contactless punching.\nFor
  those entering Day 2 only\, cards will be available for collection at Asse
 mbly at MMU\n\nClosing Date\nJune 26th. Possible late entry until July 3rd.
  Limited EOD available.\n\nFees\nStandard fee: Seniors £10\, Juniors and fu
 ll time students £5\nLate fee and EOD: Seniors £12\, Juniors and full time 
 students £5\n\nAn automatic discount will be applied through the SI Entries
  system for competitors who have their own SIAC.\n\nEOD Entry\nRegister fro
 m 10:00 to 11:30\, while maps and start slots available.\nA limited number 
 of SI Air Cards will be available for EOD competitors.\nEOD competitors wil
 l be able to use standard SI Cards for conventional punching if all availab
 le SI Air Cards have been issued.\n\nStarts\n10:30 to 12:30. Starts within 
 400m of Assembly.\n\nCourses\nStandard urban courses. Longest course will b
 e about 8Km.\n \nUKOL points\nYou only get UKOL points if you run the corre
 ct course for your age class.\n\nUK Urban League\nYou get points in the cat
 egory you have chosen to run\, as long as it is valid for your age class\n\
 nTwin Peak Competition\nPrizes for the winners of all age classes.\nTo be c
 ompetitive\, enter the same age class each day (e.g. a W50 will enter Cours
 e 6 on Saturday and C on Sunday)\, You can choose to run “up”.\nYou will no
 t be competitive if you choose to run “down”\, but you can\, of course\, do
  so.\n\nBoth times on Saturday and time on Sunday will be added together to
  give final Twin Peak placing.\n(For M/W 10 to 14\, add together the single
  time on Saturday and the time on Sunday) 
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks\, MMU Birley Bonsall Street
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Manchester & District Orienteering Club event
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160930T090000Z
DTEND:20160930T110000Z
DTSTAMP:20180704T111329Z
UID:hb02bl4b9u729c00jejmopemv8@google.com
CREATED:20170908T132839Z
DESCRIPTION:Join us to help raise money for Macmillan!
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, Moss Lane East M15 5DD
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Macmillan Coffee Morning
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160619T120000Z
DTEND:20160619T150000Z
DTSTAMP:20180704T111329Z
UID:hgusihru1oqcceot64llt3ldao@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The course Includes discussion\, practical remedy making\, hand
 outs and freebies\; the course will help you to assess your health and diet
  and to make positive changes and healthier food choices for you and your f
 amily. \nAll sessions assume no prior knowledge and are open to anyone who 
 is interested in improving their health choices and knowledge of traditiona
 l plant medicine and nutrition. \n\nThis course will be held on every third
  Sunday of the month\, June to October from 1-4pm. \n\nfor more Info contac
 t Jane Placca 07944 916196 themanchesterherbalist@yahoo.com \nFacebook: Liv
 ing Medicine Manchester 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Living Medicine- Self Care With Food & Herbs: Self Care
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160821T120000Z
DTEND:20160821T150000Z
DTSTAMP:20180704T111329Z
UID:5b711gari6f4ta74phatg9q6b0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The course Includes discussion\, practical remedy making\, hand
 outs and freebies\; the course will help you to assess your health and diet
  and to make positive changes and healthier food choices for you and your f
 amily. \nAll sessions assume no prior knowledge and are open to anyone who 
 is interested in improving their health choices and knowledge of traditiona
 l plant medicine and nutrition. \n\nThis course will be held on every third
  Sunday of the month\, June to October from 1-4pm. \n\nfor more Info contac
 t Jane Placca 07944 916196 themanchesterherbalist@yahoo.com \nFacebook: Liv
 ing Medicine Manchester 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Living Medicine - Self Care With Food & Herbs: Sleep\, Anxiety & Fa
 tigue
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160918T120000Z
DTEND:20160918T150000Z
DTSTAMP:20180704T111329Z
UID:ngd2fv2lnasrj41e7vg17nc6ts@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The course Includes discussion\, practical remedy making\, hand
 outs and freebies\; the course will help you to assess your health and diet
  and to make positive changes and healthier food choices for you and your f
 amily. \nAll sessions assume no prior knowledge and are open to anyone who 
 is interested in improving their health choices and knowledge of traditiona
 l plant medicine and nutrition. \n\nThis course will be held on every third
  Sunday of the month\, June to October from 1-4pm. \n\nfor more Info contac
 t Jane Placca 07944 916196 themanchesterherbalist@yahoo.com \nFacebook: Liv
 ing Medicine Manchester 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Living Medicine - Self Care With Food & Herbs: Skin & First Aid
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160717T120000Z
DTEND:20160717T150000Z
DTSTAMP:20180704T111329Z
UID:c829tkand8je0mjv4euthm3pqk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The course Includes discussion\, practical remedy making\, hand
 outs and freebies\; the course will help you to assess your health and diet
  and to make positive changes and healthier food choices for you and your f
 amily. \nAll sessions assume no prior knowledge and are open to anyone who 
 is interested in improving their health choices and knowledge of traditiona
 l plant medicine and nutrition. \n\nThis course will be held on every third
  Sunday of the month\, June to October from 1-4pm. \n\nfor more Info contac
 t Jane Placca 07944 916196 themanchesterherbalist@yahoo.com \nFacebook: Liv
 ing Medicine Manchester 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Living Medicine - Self Care With Food & Herbs: Digestion Discomfort
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20161016T120000Z
DTEND:20161016T150000Z
DTSTAMP:20180704T111329Z
UID:h29b18095v4c463gok5kphmin4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The course Includes discussion\, practical remedy making\, hand
 outs and freebies\; the course will help you to assess your health and diet
  and to make positive changes and healthier food choices for you and your f
 amily. \nAll sessions assume no prior knowledge and are open to anyone who 
 is interested in improving their health choices and knowledge of traditiona
 l plant medicine and nutrition. \n\nThis course will be held on every third
  Sunday of the month\, June to October from 1-4pm. \n\nfor more Info contac
 t Jane Placca 07944 916196 themanchesterherbalist@yahoo.com \nFacebook: Liv
 ing Medicine Manchester 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Living Medicine - Self Care With Food & Herbs: Coughs\, Colds & All
 ergies
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20170518T163000Z
DTEND:20170518T183000Z
DTSTAMP:20180704T111329Z
UID:btta3tv6vhh6r22esst3j752v0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Caring for someone who is living with dementia?\nHelp us make t
 his a more dementia-friendly place to live. \nShare your experiences\, ques
 tions and ideas on what can be done.\n\nCome along on \nMONDAY 15th MAY\, 3
 .15-5pm OR THURSDAY 18th MAY\, 5.30-7.30pm \nAt Kath Locke Centre\,  \n123 
 Moss Lane East\, M15 5DD Refreshments provided\n\nFor more information phon
 e: 07854 335890 or e-mail: sally@togetherdementiasupport.org\n\nWhen you li
 ve with dementia or care for someone who does\, it’s easy to stop getting o
 ut and about\, doing fun things\, meeting up and having a chat - for life t
 o get smaller.\nWith Big Life’s support\, Together Dementia Support and the
  Hulme & Moss Side Age Friendly Partnership we want to do something about i
 t.\n\nBy sharing experiences\, questions and ideas\, together we can start 
 to make the place we live more dementia-friendly – helping people get out m
 ore\, enjoy life more\, support families and communities.\n\nSo join us at 
 the Kath Locke Centre and turn small changes into a big difference!\nFor mo
 re information phone: 07854 335890 or \ne-mail: sally@togetherdementiasuppo
 rt.org\nwww.togetherdementiasupport.org\nwww.agefriendlyhulmeandmossside.wo
 rdpress.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, Moss Lane East\, Manchester M15 5DD
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Let's talk... Dementia
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20170515T141500Z
DTEND:20170515T160000Z
DTSTAMP:20180704T111329Z
UID:32rut5uhegu1qtkf5le3e67hjs@google.com
CREATED:20170908T132839Z
DESCRIPTION:Caring for someone who is living with dementia?\nHelp us make t
 his a more dementia-friendly place to live. \nShare your experiences\, ques
 tions and ideas on what can be done.\n\nCome along on \nMONDAY 15th MAY\, 3
 .15-5pm OR THURSDAY 18th MAY\, 5.30-7.30pm \nAt Kath Locke Centre\,  \n123 
 Moss Lane East\, M15 5DD Refreshments provided\n\nFor more information phon
 e: 07854 335890 or e-mail: sally@togetherdementiasupport.org\n\nWhen you li
 ve with dementia or care for someone who does\, it’s easy to stop getting o
 ut and about\, doing fun things\, meeting up and having a chat - for life t
 o get smaller.\nWith Big Life’s support\, Together Dementia Support and the
  Hulme & Moss Side Age Friendly Partnership we want to do something about i
 t.\n\nBy sharing experiences\, questions and ideas\, together we can start 
 to make the place we live more dementia-friendly – helping people get out m
 ore\, enjoy life more\, support families and communities.\n\nSo join us at 
 the Kath Locke Centre and turn small changes into a big difference!\nFor mo
 re information phone: 07854 335890 or \ne-mail: sally@togetherdementiasuppo
 rt.org\nwww.togetherdementiasupport.org\nwww.agefriendlyhulmeandmossside.wo
 rdpress.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, Moss Lane East\, M15 5DD
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Let's talk... Dementia
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160309T100000
DTEND;TZID=Europe/Dublin:20160309T120000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111329Z
UID:tprhp383sghvn470pcl8ergae8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:For more information please contact: 0161 8737335
LAST-MODIFIED:20170908T133001Z
LOCATION:Old Trafford Sports Barn\, Seymour Park\, Carver St\, Manchester M
 16 9PQ\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Keep Fit and Walking Football
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20170214T180000
DTEND;TZID=Europe/London:20170214T210000
RRULE:FREQ=WEEKLY;COUNT=6;BYDAY=TU
DTSTAMP:20180704T111329Z
UID:085f55bpp0c1m362ss0ms1vfoo@google.com
CREATED:20170908T132839Z
DESCRIPTION:Are you a current or former Hulme resident? Do you have stories
  to tell and an interest in poetry? The 'Hulme Sweet Hulme' project is look
 ing for residents of all ages to take part in a project celebrating life in
  Hulme! \n\nNo past experience of poetry is needed! The workshop will be le
 ad by award-winning poet\, Tony Walsh AKA 'Longfella'.\n\nDate 14 February 
 2017 \nTime 6pm - 9pm \n\nRunning for 6 weeks to book 07981 234 890 or emai
 l info@reelmcr.co.uk 
LAST-MODIFIED:20170908T133001Z
LOCATION:Brookes Building\, MMU\, 47 Bonsall St\,  Hulme\, M15 6DP
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Hulme Sweet Hulme Poetry Project
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20161202T160000Z
DTEND:20161202T163000Z
DTSTAMP:20180704T111329Z
UID:inknmuisie6r876mmrqgsk34hs@google.com
CREATED:20170908T132839Z
DESCRIPTION:Christmas Lights Switch On for all the family\n\nZarts will be 
 hosting four Bear Hunts exclusively free for M15 residents at 3pm\,3.40pm\,
  5pm and 5.40pm. Please call 0161 2326089 for booking. \n\nAfterwards meet 
 Father Xmas in the Zion from 4.30 - 6pm
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Park
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Hulme Park Christmas Lights Switch On
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160422T130000
DTEND;TZID=Europe/Dublin:20160422T170000
RRULE:FREQ=WEEKLY;BYDAY=MO,FR
DTSTAMP:20180704T111329Z
UID:v551f81seite6h1hsdn5k9i8j8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Hulme had the very first branch library of Manchester’s free li
 brary – which was itself the country’s first free library!\n\nAssistance Av
 ailable:\nMondays: 1–5pm\nTuesdays: 9am–1pm\nWednesdays: 1–8pm\nThursdays: 
 9am-1pm\nFridays: 1–5pm\nSaturdays: 9am-1pm & 2–5pm\nBank holidays we are c
 losed.\n\nThere is underground car parking\n\nThe library will be open the 
 same hours as the leisure centre and you will be able to:\nbrowse & borrow 
 a selection of popular books\;\nreturn & renew books\;\nlog on to internet-
 ready PCs\; and \ncollect reservations.\nContact: 0161 227 3739 or hulmelib
 rary@manchester.gov.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme Library
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160420T130000
DTEND;TZID=Europe/Dublin:20160420T200000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111329Z
UID:uvj7ciu79208kssph3rfap6qv4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Hulme had the very first branch library of Manchester’s free li
 brary – which was itself the country’s first free library!\n\nAssistance Av
 ailable:\nMondays: 1–5pm\nTuesdays: 9am–1pm\nWednesdays: 1–8pm\nThursdays: 
 9am-1pm\nFridays: 1–5pm\nSaturdays: 9am-1pm & 2–5pm\nBank holidays we are c
 losed.\n\nThere is underground car parking\n\nThe library will be open the 
 same hours as the leisure centre and you will be able to:\nbrowse & borrow 
 a selection of popular books\;\nreturn & renew books\;\nlog on to internet-
 ready PCs\; and \ncollect reservations.\nContact: 0161 227 3739 or hulmelib
 rary@manchester.gov.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme Library
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160423T140000
DTEND;TZID=Europe/Dublin:20160423T170000
RRULE:FREQ=WEEKLY;BYDAY=SA
DTSTAMP:20180704T111329Z
UID:dful56j9cu09kdnofscgs7ffeg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Hulme had the very first branch library of Manchester’s free li
 brary – which was itself the country’s first free library!\n\nAssistance Av
 ailable:\nMondays: 1–5pm\nTuesdays: 9am–1pm\nWednesdays: 1–8pm\nThursdays: 
 9am-1pm\nFridays: 1–5pm\nSaturdays: 9am-1pm & 2–5pm\nBank holidays we are c
 losed.\n\nThere is underground car parking\n\nThe library will be open the 
 same hours as the leisure centre and you will be able to:\nbrowse & borrow 
 a selection of popular books\;\nreturn & renew books\;\nlog on to internet-
 ready PCs\; and \ncollect reservations.\nContact: 0161 227 3739 or hulmelib
 rary@manchester.gov.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme Library
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160211T190000
DTEND;TZID=Europe/London:20160211T210000
RRULE:FREQ=MONTHLY;COUNT=1;INTERVAL=1;BYDAY=2TH
DTSTAMP:20180704T111330Z
UID:37orv3fgcb6h2p7bj8gsipcc6or20160211T190000@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:tel:01612261912\nhttp://www.z-arts.org/about-us/contact-us/
LAST-MODIFIED:20170908T133001Z
LOCATION:Z-arts\, 335 Stretford Rd\, Manchester M15 5ZA\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme History Group Meet up
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160211T190000
DTEND;TZID=Europe/Dublin:20160211T210000
RRULE:FREQ=MONTHLY;UNTIL=20160211T185959Z;INTERVAL=1;BYDAY=2TH
DTSTAMP:20180704T111330Z
UID:37orv3fgcb6h2p7bj8gsipcc6o@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:tel:01612261912\nhttp://www.z-arts.org/about-us/contact-us/
LAST-MODIFIED:20170908T133001Z
LOCATION:Z-arts\, 335 Stretford Rd\, Manchester M15 5ZA\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme History Group Meet up
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160307T180000
DTEND;TZID=Europe/Dublin:20160307T190000
RRULE:FREQ=WEEKLY;BYDAY=MO
DTSTAMP:20180704T111330Z
UID:k2hr9ugtjva43f8ik1i9vqcokk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:cllr.l.igbon@manchester.gov.uk 07908 759 042\ncllr.a.lone@manch
 ester.gov.uk 07947 383 514\ncllr.n.murphy@manchester.gov.uk 0161 234 3217 (
 Town Hall)\n\nEvery Monday from 6pm (except Bank Holidays and the month of 
 August) **new location from Monday 16th March 2015**\nBirley Building \nMan
 chester Metropolitan University \nBonsall Street  \nHulme \nMANCHESTER \nM1
 5 6GX
LAST-MODIFIED:20170908T133001Z
LOCATION:Birley Fields\, Bonsall St\, Manchester M15\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Hulme Councillors Surgery
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160121T110000Z
DTEND:20160121T130000Z
DTSTAMP:20180704T111330Z
UID:pesdbkf7iqs44t1f491u9ic47s@google.com
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:Turing House\, Manchester\, Manchester M15 5RL\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Hulme & Moss Side Pre-Launch Event
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160225T113000Z
DTEND:20160225T140000Z
DTSTAMP:20180704T111330Z
UID:ska0op0avcpt7qq58onecrvki4@google.com
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Millennium Powerhouse\, 140 Raby St\, Manchester M14 4SL
 \, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme & Moss Side Locality Launch Event
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160911T140000Z
DTEND:20160911T180000Z
DTSTAMP:20180704T111330Z
UID:vils6rpd0d1ea9m1ah9dj8ro08@google.com
CREATED:20170908T132839Z
DESCRIPTION:We invite you to join us in Honouring The Elders at our event o
 n Sunday 11th September 2016 at 3pm–7pm\, WISSC\, Westwood Street\, Moss Si
 de.  \n\nWe had the privilege to capture some of The Elders Archives\, a se
 ries of interviews with Tony Morris from ITV’s Granada Reports and various 
 elders of our community\, including Roy Walters\, Julie Asumu\, Douggie Law
 ton\, Basil Gumbs and Linford Wedderburn.  We were also able to film Father
  Weekes and Pa David before they passed on to the higher abode and this eve
 nt will be held in their honour and memory.  \n\nWe will be showing some of
  The Elders Archives and we will be hearing from guest speakers\, young and
  elder\, including Roy Walters\, Tony Morris\, Makisa Gilkes and Akeim Mund
 ell.  There will be entertainment from The Exhibit Band\, Trevor Roots and 
 the young dance group Jet Black.  Food will be provided by The Drop. \n\nEv
 eryone is welcome!  Please join us in honouring the elders.  
LAST-MODIFIED:20170908T133001Z
LOCATION:West Indian Sports & Social Club\, Westwood Street\, Moss Side
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Honouring The Elders
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160630T083000Z
DTEND:20160630T150000Z
DTSTAMP:20180704T111330Z
UID:qf5fc9dg568av72idmsde44ki0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Thursday 30th June 2016 9.30 - 4.00pm\nHome Business Workshop\n
 Venue: St Wilfred's Enterprise Centre\n(FirmStart) Royce Road Hulme M15 4BJ
 \n\nFor further details contact: Richard at ABS (Amazin Business Solutions)
  on 07590425644 or 079271 43531\nemail: info@amazinbusinesssolutions.com\n
LAST-MODIFIED:20170908T133001Z
LOCATION:St Wilfred's Enterprose Centre
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Home Business Workshop
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160517
DTEND;VALUE=DATE:20160518
DTSTAMP:20180704T111330Z
UID:jd6k81ms9e591tca3c72nq3rdo@google.com
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:MMU Brooks
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Healthy Relationships
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160212T140000
DTEND;TZID=Europe/Dublin:20160212T160000
EXDATE;TZID=Europe/Dublin:20160219T140000
EXDATE;TZID=Europe/Dublin:20160325T140000
RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=FR
DTSTAMP:20180704T111330Z
UID:d5om4b985oat5i2st9oqthnsg8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Enjoy a cup of tea and a chat\, and try your hand at a range of
  traditional skills including woodblock carving\, sculpture\, printing\, wa
 tercolour painting and many others. Each month\, an artist will introduce a
  different technique. Every Friday our Clore Learning Studio is open as an 
 Age Friendly art studio\, in partnership with Age Friendly Manchester.\n\nc
 laire.cowell@manchester.ac.uk\n07776 170 688\n\nhttp://www.whitworth.manche
 ster.ac.uk/learn/adults/coursesandworkshops/handmade/ 
LAST-MODIFIED:20170908T133001Z
LOCATION:Whitworth Art Gallery\, The University of Manchester\, Oxford Rd\,
  Manchester\, Lancashire M15 6ER\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Handmade
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20170211T133000Z
DTEND:20170211T170000Z
DTSTAMP:20180704T111330Z
UID:d5d2h1evu12mp55qj9cmv56pl4@google.com
CREATED:20170908T132839Z
DESCRIPTION:Official Opening of the Greater Manchester Law Centre.\nFightin
 g Together for free access to justice.\n\nA Public Celebration with food\, 
 entertainments and activities for children.\n\nwith: Holy Name RC Primary S
 chool Steel Band\nSpoken Word Artists\nDJ Kemoy Walker\n\nFree Event\nPhone
 : 0161 769 2244 \nEmail: reception@gmlaw.org.uk\n\nReg Charity no.: 1170317
 \nReg Company no.: 09698401
LAST-MODIFIED:20170908T133001Z
LOCATION:West Indian Sports & Social Club\, Westwood Street\, Moss Side M14
  4SW
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Greater Manchester Law Centre Opening Party
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160312T100000
DTEND;TZID=Europe/Dublin:20160312T113000
RRULE:FREQ=WEEKLY;UNTIL=20160805T225959Z;BYDAY=SA
DTSTAMP:20180704T111330Z
UID:oimq0had02u6imhl59a7b9jqak@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Flex it @ 50\n10.15am – 11.15pm\n£3.00\nZion Centre\n339 Stretf
 ord Road\nManchester M15 4ZY\nTel: 0161 226 5412\nwww.zioncentre.co.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Zion Community Resource Centre\, 339 Stratford\, Manchester\, Manc
 hester M15 4ZY\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Flex it at 50
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160526T160000Z
DTEND:20160526T180000Z
DTSTAMP:20180704T111330Z
UID:m4hvmbbopmrod014pvf89fq9q4@google.com
CREATED:20170908T132839Z
DESCRIPTION:On Thursday 26th May\, from 5-7pm\, Manchester Met’s Environmen
 t Team are hosting a film screening of Just Eat It and a talk about food wa
 ste. \nJust Eat It is a documentary exploring the subject of food waste\, a
 n issue becoming increasingly important in the UK\, as well as in other nat
 ions. \nAfter the screening\, there will be a short talk by Haleh Moravej\,
  Nutritional Scientist & MetMUnch founder\, and discussion about the issues
  raised. \n\n"We all love food. As a society\, we devour countless cooking 
 shows\, culinary magazines and foodie blogs. So how could we possibly be th
 rowing nearly 50% of it in the trash?" - Just Eat It. \n\nAll are welcome t
 o attend. \nTo sign up\, please click here: https://justeatitmmu.eventbrite
 .co.uk \n
LAST-MODIFIED:20170908T133001Z
LOCATION: Lecture Theatre 6\, Manchester Met Business School 
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Film Screening: Just Eat It
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T140000
DTEND;TZID=Europe/Dublin:20160308T160000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111330Z
UID:fb7gf208q5gc4amcchn093a63c@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Different speakers each week.\nCall 0161 2241123
LAST-MODIFIED:20170908T133001Z
LOCATION:Holy Trinity Platt Church\, Platt Ln\, Manchester M14 5NF\, United
  Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Elderly Christian Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20170109T123000
DTEND;TZID=Europe/London:20170109T150000
RRULE:FREQ=WEEKLY;UNTIL=20170329T113000Z;BYDAY=MO,WE
DTSTAMP:20180704T111330Z
UID:oo0epa5bs4a8h3d3puh6le7jrk@google.com
CREATED:20170908T132839Z
DESCRIPTION:Who is this course for? Adults who want to build on some basic 
 computer knowledge and skills.\n\nEntry requirements: This course is for le
 arners who have some basic computer skills and want to learn more. You must
  be able to speak\, read\, and write English fairly confidently to attend.\
 n\nWhat will I learn on this course? You will use computers and the Interne
 t for everyday situations\, building on skills you already have.\n\nHow wil
 l I learn? Classes are twice a week for 12 weeks. There is a mixture of gro
 up work and individual work on the PC. You will be taught by a tutor who wi
 ll encourage you to learn independently and share your skills with other le
 arners.\n\nWhat qualifications will I gain? None\, but you will receive a M
 anchester Adult Education Service certificate.\n\nWhat could this course le
 ad to? Another ICT course\, or another type of course\, in MAES or another 
 provider.\n\nCan I join anytime? This course runs twice a year\, starting i
 n September and January. You can join after a course has started if there i
 s space.\n\nHow much will it cost? Many of our courses are free (all Englis
 h\, Maths\, Everyday English\, Family Learning\, volunteer programmes and b
 eginner computer courses. Other courses (such as Childcare\, Community Inte
 rpreting\, higher level computer courses\, Health and Social Care and ESOL)
  are free for unemployed people actively seeking work and cost from 3.00 pe
 r hour for those in work. However\, if you are on a low income\, we can hel
 p you with the fees\; contact one of our centres for information.\n\nFor mo
 re info Contact Greenheys:  0161 254 7314
LAST-MODIFIED:20170908T133001Z
LOCATION:Greenheys Adult Learning Centre\, Upper Lloyd Street
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Digital Skills for Beginners
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160919T123000
DTEND;TZID=Europe/London:20160919T150000
RRULE:FREQ=WEEKLY;UNTIL=20161214T123000Z;BYDAY=MO,WE
DTSTAMP:20180704T111330Z
UID:2fdhconi5ohroi3b3r1e59ovgk@google.com
CREATED:20170908T132839Z
DESCRIPTION:Who is this course for? Adults who want to build on some basic 
 computer knowledge and skills.\n\nEntry requirements This course is for lea
 rners who have some basic computer skills and want to learn more. You must 
 be able to speak\, read\, and write English fairly confidently to attend.\n
 \nWhat will I learn on this course? You will use computers and the Internet
  for everyday situations\, building on skills you already have.\n\nHow will
  I learn? Classes are twice a week for 12 weeks. There is a mixture of grou
 p work and individual work on the PC. You will be taught by a tutor who wil
 l encourage you to learn independently and share your skills with other lea
 rners.\n\nWhat qualifications will I gain? None\, but you will receive a Ma
 nchester Adult Education Service certificate.\n\nWhat could this course lea
 d to? Another ICT course\, or another type of course\, in MAES or another p
 rovider.\n\nCan I join anytime? The course runs twice a year in main centre
 s\, starting in September and January. You can join after a course has star
 ted if there is space.\n\nHow much will it cost? Many of our courses are fr
 ee (all English\, Maths\, Everyday English\, Family Learning\, volunteer pr
 ogrammes and beginner computer courses. Other courses (such as Childcare\, 
 Community Interpreting\, higher level computer courses\, Health and Social 
 Care and ESOL) are free for unemployed people actively seeking work and cos
 t from 3.00 per hour for those in work. However\, if you are on a low incom
 e\, we can help you with the fees\; contact one of our centres for informat
 ion.\n\nFor more info contact Greenheys:  0161 254 7314
LAST-MODIFIED:20170908T133001Z
LOCATION:Greenheys Adult Educations Centre\, Upper Lloyd Street
SEQUENCE:2
STATUS:CONFIRMED
SUMMARY:Digital Skills for Beginners
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160920T130000
DTEND;TZID=Europe/London:20160920T153000
RRULE:FREQ=WEEKLY;UNTIL=20170725T120000Z;BYDAY=TU
DTSTAMP:20180704T111330Z
UID:c0ld18mrdigeugmrb7in31d7bo@google.com
CREATED:20170908T132839Z
DESCRIPTION:Who is this course for? A drop-in workshop for adults to learn 
 how to use a range of digital devices. Suitable for beginners or those who 
 want some help improving their skills.\n\nEntry requirements: You do not ne
 ed to have any computer skills to attend this workshop but you must be able
  to speak\, read\, and write English fairly confidently.\n\nWhat will I lea
 rn on this course? You will learn how to use computers and digital devices 
 in your everyday life. You can learn how to get on-line\, send emails\, sho
 p\, pay bills\, book tickets\, use Facebook and Twitter\, store your photos
  and stay safe online.\n\nHow will I learn? You will learn how to use compu
 ters and digital devices in your everyday life. You can learn how to get on
 -line\, send emails\, shop\, pay bills\, book tickets\, use Facebook and Tw
 itter\, store your photos and stay safe online.\n\nWhat qualifications will
  I gain? None\, but you will receive a Manchester Adult Education Service c
 ertificate.\n\nWhat could this course lead to? Another ICT course\, or anot
 her type of course\, in MAES or another provider.\n\nCan I join anytime?  Y
 es.\n\nHow much will it cost? Many of our courses are free (all English\, M
 aths\, Everyday English\, Family Learning\, volunteer programmes and beginn
 er computer courses. Other courses (such as Childcare\, Community Interpret
 ing\, higher level computer courses\, Health and Social Care and ESOL) are 
 free for unemployed people actively seeking work and cost from 3.00 per hou
 r for those in work. However\, if you are on a low income\, we can help you
  with the fees\; contact one of our centres for information.\n\nCall Greenh
 eys for more info:  0161 254 7314
LAST-MODIFIED:20170908T133001Z
LOCATION:Greenheys Adult Educations Centre\, Upper Lloyd Street
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Digital Drop-In
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160208T140000
DTEND;TZID=Europe/London:20160208T160000
RRULE:FREQ=WEEKLY;COUNT=1;INTERVAL=1;BYDAY=MO
DTSTAMP:20180704T111330Z
UID:73pc4cvq0spsk29dvhaam83m04r20160208T140000@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Run by Together Dementia Support. For people living with dement
 ia\, their family\, carers and friends. Physical games (indoor bowling\, qu
 oits\, pool)\, table games such as dominoes\, cards\, draughts\, Jenga etc\
 , art and craft\, baking\, singing\, poetry reading\, quizzes\, reminiscenc
 e and many more.\nTel. 07854 335890\nwww.togetherdementiasupport.org\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Amani Centre Quinney Cresent Shoreham Close\, Manchester M16 7DG
SEQUENCE:2
STATUS:CONFIRMED
SUMMARY:Dementia Friends and Activities Group
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160608T130000
DTEND;TZID=Europe/London:20160608T140000
RRULE:FREQ=WEEKLY;COUNT=1;INTERVAL=1;BYDAY=WE
DTSTAMP:20180704T111330Z
UID:4m4spa75ds0loljkd8lfig1eo0r20160608T120000@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia Friendly Swimming session for people affected by demen
 tia - either as a carer or someone living with the condition.\n\nThe sessio
 n is £1 for anyone under 60 or from outside of the City of Manchester bound
 aries – otherwise the session is free (thanks to the free swimming for Over
  60s offer and the centre’s Carers Scheme) - please bring proof of age and 
 address.\n\nThe group offer support with Transport in partnership with Manc
 hester Community Transport. So please do get in touch if you require transp
 ort in order to get to the session.\n\nContact Catriona Sudlow for queries/
  to arrange transport: 07583 134810
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Dementia Friendly Swimming
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160601T130000
DTEND;TZID=Europe/Dublin:20160601T140000
RRULE:FREQ=WEEKLY;UNTIL=20160608T115959Z;INTERVAL=1;BYDAY=WE
DTSTAMP:20180704T111330Z
UID:4m4spa75ds0loljkd8lfig1eo0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia Friendly Swimming session for people with dementia and
  carers.
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Dementia Friendly Swimming
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160330T150000
DTEND;TZID=Europe/London:20160330T160000
RRULE:FREQ=WEEKLY;COUNT=8;BYDAY=WE
DTSTAMP:20180704T111330Z
UID:hivrll9n03ktc9vrk22ker1fc8@google.com
CREATED:20170908T132839Z
DESCRIPTION:For families living with dementia\, starting for 8 weeks on the
  30th of March\, contact Rob Stapley 0161 9624788
LAST-MODIFIED:20170908T133001Z
LOCATION:Armani Centre Quinney Crescent\, Shoreham Close
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Dementia Friendly Communities
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160208T140000
DTEND;TZID=Europe/Dublin:20160208T160000
RRULE:FREQ=WEEKLY;UNTIL=20160208T135959Z;INTERVAL=1;BYDAY=MO
DTSTAMP:20180704T111330Z
UID:73pc4cvq0spsk29dvhaam83m04@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Run by Together Dementia Support. For people living with dement
 ia\, their family\, carers and friends. Physical games (indoor bowling\, qu
 oits\, pool)\, table games such as dominoes\, cards\, draughts\, Jenga etc\
 , art and craft\, baking\, singing\, poetry reading\, quizzes\, reminiscenc
 e and many more.\nTel. 07854 335890\nwww.togetherdementiasupport.org\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Amani Centre Quinney Cresent Shoreham Close\, Manchester M16 7DG
SEQUENCE:2
STATUS:CONFIRMED
SUMMARY:Dementia Cafe
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160515
DTEND;VALUE=DATE:20160522
DTSTAMP:20180704T111330Z
UID:9q961po2br8fjqgm6um164437g@google.com
CREATED:20170908T132839Z
DESCRIPTION:This year's Dementia Awareness Week\, 15 – 21 May\, will encour
 age people who are worried about dementia to confront their worries by addr
 essing dementia directly and coming to Alzheimer's Society for information 
 and support. Dementia can be scary and many people don't know where to turn
 \, but Alzheimer's Society is here for anyone affected and there are lots o
 f ways we can help. Because we believe that life doesn't end when dementia 
 begins.\n\nIf you\, or someone you know\, is worried about dementia\, Call 
 The Alzheimer's Society's National Dementia Helpline on 0300 222 1122 or em
 ail helpline@alzheimers.org.uk\n\nFor more infor on Dementia Awareness Week
  see here:\nhttps://www.alzheimers.org.uk/remembertheperson
LAST-MODIFIED:20170908T133001Z
LOCATION:
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Dementia Awareness Week
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20160704T130000Z
DTEND:20160704T150000Z
DTSTAMP:20180704T111330Z
UID:ov3rhu6qnntb69p8hrf78lhu50@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Are you over 50? \nDo you cycle in Hulme & Moss Side?\nOr do yo
 u want to cycle more? \nWe want to talk to you! \nWe would like to find out
  what it’s like to cycle in your neighbourhood\, and to talk about ways to 
 encourage more older people to cycle!\n\nCome along to the workshop to find
  out more:\nMonday 4th July\, 2pm - 4pm\nCity South HQ\, Turing House\nArch
 way 5\, Hulme\, Manchester M15 5RL\n\nRefresments wil be available\n\nEvery
 one welcome\, but please RSVP:\nEmily Crompton\, Manchester Age Friendly Ne
 ighbourhoods (MAFN)\n0161 247 5960 or 07973 973184\ne.crompton@mmu.ac.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:City South HQ\, Turing House\,Archway 5\, Hulme\, Manchester M15 5
 RL
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Cycling in an Age Friendly Hulme & Moss Side?
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20170505T093000Z
DTEND:20170505T140000Z
DTSTAMP:20180704T111330Z
UID:7o7cu0sjflonc479qt9lu6kgao@google.com
CREATED:20170908T132839Z
DESCRIPTION:Roving Chef Maggie Lister from the Charity Vegetarian for Life\
 , invites you for a day of cookery demos and information on easy organic ga
 rdening at Hulme Community Garden Centre. Maggie is a vegan chef who works 
 to help improve the lives of older vegetarians and vegans\, whilst showing 
 the public and catering staff how to create well balanced\, nutritional pla
 nt-based dishes.\n\n If you're struggling to find inspiration for healthy\,
  cheap but nutricious meals then book a place on one of two workshops held 
 on Friday 28th May and 5th April.\n\n The day will include a hands-on group
  cookery session where you'll learn basics and more of plant-based food\; C
 ooking for One\, Cooking on a Budget and Ethical Buys. You'll also have a c
 hance to create and maintain your own windowsill herb garden and a tour of 
 the centre.\n\n The sessions are open to those aged 50+\, and will run from
  10:30am-3pm with light refreshments and group meal prepared by Maggie and 
 attendees. The event is open to all cooking abilities\, so if you're intere
 sted please tell us if you have any dietary requirements or allergies. A su
 ggested donation of £4per person is requested to cover costs for the day. B
 OOKING ESSENTIAL email rachel@hulmegardencentre.org.uk to book.\n\nFacebook
  event: https://www.facebook.com/events/803976576423499/?acontext=%7B%22sou
 rce%22%3A5%2C%22page_id_source%22%3A349311125097538%2C%22action_history%22%
 3A[%7B%22surface%22%3A%22page%22%2C%22mechanism%22%3A%22main_list%22%2C%22e
 xtra_data%22%3A%22%7B%5C%22page_id%5C%22%3A349311125097538%2C%5C%22tour_id%
 5C%22%3Anull%7D%22%7D]%2C%22has_source%22%3Atrue%7D 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Cooking on a Budget and Ethical Buys
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160921T123000
DTEND;TZID=Europe/London:20160921T150000
RRULE:FREQ=WEEKLY;UNTIL=20161214T123000Z;BYDAY=WE
DTSTAMP:20180704T111330Z
UID:q8ethns8juq2rmvpp8q8nlvjs0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Who is this course for? Adults with learning difficulties and d
 isabilities who want to learn or extend computer skills and develop persona
 l skills & confidence.\n\nEntry requirements You do not need any computer s
 kills to join this course. You must be able to understand and follow spoken
  instructions. You will be interviewed by a tutor to assess your learning a
 nd support needs before joining a class.\n\nWhat will I learn on this cours
 e? You will learn how to use a computer. At the same time you will improve 
 your communication skills and confidence.\n\nHow will I learn? Classes run 
 once a week and the course length varies. There is a mixture of group work 
 and individual work on the PC. You will be taught by a tutor who will encou
 rage you to learn independently and share your skills with other learners.\
 n\nWhat qualifications will I gain? None\, but you will receive a Mancheste
 r Adult Education Service certificate.\n\nWhat could this course lead to? A
 nother ICT course\, or another type of course\, in MAES or another provider
 .\n\nCan I join anytime? The course runs at least 3 times a year. You can j
 oin after a course has started if there is space.\n\nHow much will it cost?
  Many of our courses are free (all English\, Maths\, Everyday English\, Fam
 ily Learning\, volunteer programmes and beginner computer courses. Other co
 urses (such as Childcare\, Community Interpreting\, higher level computer c
 ourses\, Health and Social Care and ESOL) are free for unemployed people ac
 tively seeking work and cost from 3.00 per hour for those in work. However\
 , if you are on a low income\, we can help you with the fees\; contact one 
 of our centres for information.\n\nContact Greenheys for more info: 0161 25
 4 7314 
LAST-MODIFIED:20170908T133001Z
LOCATION:Greenheys Adult Learning Centre\, Upper Lloyd Street
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Computers and Personal Development for Adults with Learning Difficu
 lties and Disabilities
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20170704T110000Z
DTEND:20170704T130000Z
DTSTAMP:20180704T111330Z
UID:1497867020980@google.com
CREATED:20170908T132839Z
DESCRIPTION:Are you retired\, soon to retire  or do you know people who are
  retired?\n\nLINK Good neighbours is holding a free Community Lunch for ret
 irees from Rusholme\, Fallowfield and Moss Side.\n\nFind out about activiti
 es\, groups and trips\nSee what volunteering opportunities we have\nHelp gu
 ide our future work\n\nThere will also be a chance to meet and chat to othe
 r retirees over free lunch. There might even be cake!\n\nTuesday 4th July 1
 2-2pm\n\nPlease let us know you are coming: call 0161 225 1064 or email lin
 k@trinityhousecrc.co.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Trinity House\, Grove Close off Platt Lane\, M14 5AA
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Community Lunch for Retirees
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160726
DTEND;VALUE=DATE:20160727
DTSTAMP:20180704T111330Z
UID:tnu98on6c865jp309g4ir5spto@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:This Community Learning Festival consists of four days of works
 hops\, speakers and events to inspire and support many types of learning. I
 t will also provide a space to build connections between people\, and betwe
 en the University and our local community.\n\nTuesday: Theme - Politics and
  Democracy\n12 noon Drumming workshop and Spoken Word event led by Emeka\nE
 lendu and Joy Jikiemi\n1.00pm - 2.30pm Community Philosophy: Peaceful Citie
 s? Peaceful World?\nChildren and young people’s workshop led by Graeme Tiff
 any with\nHideaway\n1.00pm - 2.30pm People’s History of Hulme and Moss Side
 : All age walk with\nDominique Tessier\n2.45pm - 3.45pm Community Philosoph
 y: Peaceful Neighbourhoods? Peaceful\nWorld? All age workshop led by Graeme
  Tiffany\n2.45pm - 3.45pm People’s History walk: Children and young people’
 s walk with\nDominique Tessier\n4.00pm - 5.00pm Young people interview loca
 l Councillors (facilitated by Hideaway)\n5.00pm Public Lecture with Dr Patr
 ick Williams: The same as it ever was!\nThe Policing of ‘suspected’ communi
 ties: a focus on the continuities of\nStop and Search.\n6.00pm - 7.00pm Dru
 mming Workshop and Spoken Word performance\n\nTo keep up to date with the f
 estival please subscribe to our email list here.\nhttp://eepurl.com/bOjsCn\
 n\nThe festival will run from 26th-29th July\, to get involved in the plann
 ing of the event please email edlab@mmu.ac.uk letting us know how you or yo
 ur group would want to contribute.
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Birley\, Bonsall St\, Manchester M15
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Community Learning Festival
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160727
DTEND;VALUE=DATE:20160728
DTSTAMP:20180704T111330Z
UID:qnf08lj9b00flficarv8d3ruek@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:This Community Learning Festival consists of four days of works
 hops\, speakers and events to inspire and support many types of learning. I
 t will also provide a space to build connections between people\, and betwe
 en the University and our local community.\n\nWednesday: Theme - Care and C
 reativity\nAll afternoon Community Games Tepee and Parachute\n12 noon Hidde
 n Voices of Hulme - workshop performance\n1.00pm - 2.30pm Looking After Our
 selves? Discussion on sex and healthy relationships led\nby Jayne Mugglesto
 ne and Jayshree Henry (Age 14+)\n1.00pm - 4.00pm Women’s Comedy workshops r
 un by Natalie Diddams - Royal Exchange\n(Age 18+)\n1.00pm - 4.00pm Promotin
 g Positive Sexual Health: Focus on testicular cancer and young\nmen (Age 14
 +)\n1.00pm - 4.00pm Storytelling workshops:\n• Petrus Homelessness Project 
 and Digital Arts North West (all ages)\n• LGBT storytelling workshop led by
  The Proud Trust\n• Mobile Phone story telling led by Imran (young people f
 ocus)\n• Under 8’s and Under 12’s sessions led by Libraries\n1.00pm - 4.00p
 m Exploring Boys Work: Voluntary Youth Manchester Boys Work Network\n2.00pm
  - 5:00pm Showing of the films Paddington and Inside Out followed by discus
 sions\n3.00pm - 4.00pm All age workshop on the Citizen App with Kevin Jones
  and Caleb Jackson\n4.00pm - 5.00pm Hideaway films on harassment of Muslim 
 girls and women\, plus\ndiscussion (young people focus)\n4.00pm - 5.00pm Be
 ing young and being a part of the whole world: Workshop led by\nHebe\n5.00p
 m - 6.00pm Public Lecture with Gabrielle Ivinson: Poverty\, Community and\n
 Education\, lecture and discussioin\n6.00pm - 7.00pm Hidden Voices of Hulme
  performance\n\nTo keep up to date with the festival please subscribe to ou
 r email list here.\nhttp://eepurl.com/bOjsCn\n\nThe festival will run from 
 26th-29th July\, to get involved in the planning of the event please email 
 edlab@mmu.ac.uk letting us know how you or your group would want to contrib
 ute.
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Birley\, Bonsall St\, Manchester M15
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Community Learning Festival
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20170725
DTEND;VALUE=DATE:20170728
DTSTAMP:20180704T111330Z
UID:67dl5bes8trrq7buj0dknefrog@google.com
CREATED:20170908T132839Z
DESCRIPTION:MMU 3 day Community Learning Festival\n\nThemes include: Democr
 acy and Resistance\, Health and Wellbeing\, Creeativity and Sustainability.
 \n\nPlease contact Carol Packham if you would like to attend\, run a sessio
 n or just for more info: 0161 247 2134 or c.packham@mmu.ac.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks\, MMU Birley Campus\, Bonsall Street\, M15 6DP
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Community Learning Festival
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160728
DTEND;VALUE=DATE:20160729
DTSTAMP:20180704T111330Z
UID:1m6sqc6pd793fm81jpstg02qgk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:This Community Learning Festival consists of four days of works
 hops\, speakers and events to inspire and support many types of learning. I
 t will also provide a space to build connections between people\, and betwe
 en the University and our local community.\n\nThursday: Theme - Environment
  and Sustainability\nAll afternoon Stalls and Bike Bonanza\n12.00pm - 1.30p
 m Tony Curry writing workshops: RAP on the theme of environment and\nsustai
 nability\n12.00pm - 1.30pm Hulme Community Garden Centre workshop: Pond dip
 ping\, herbs and\nmuch more\n2.00pm - 3.30pm Asset based working workshop: 
 sustainable community development\nled by Eve Davidson\n2.00pm - 3.30pm Ton
 y Curry writing workshops: RAP on the theme of environment and\nsustainabil
 ity\n2.00pm - 3.30pm Carbon literacy course introduction\n2.00pm - 3.30pm H
 ulme Community Garden Centre: permaculture\n2.00pm - 3.30pm Site tours: lea
 rn about the Birley Campus as a ‘green campus\n4.00pm - 5.00pm Geoff Bright
  Presentation: ‘The Lady’s not for Burning? May she Rust\nin Peace: Ghostly
  Presences and Social Hauntings from the Miner’s Strike\n1984-5 in South Yo
 rkshire.’\n4.00pm - 5.30pm Just eat it? (film)\n6.00pm - 7.00pm Public lect
 ure: ‘Tale of Two Cities’ talk - issues of sustainability in\nManchester\n6
 .00pm - 7.00pm Transport in Hulme: Talks and discussion with Transport for 
 Greater\nManchester\, Manchester City Council and Manchester Metropolitan\n
 University\n\nTo keep up to date with the festival please subscribe to our 
 email list here.\nhttp://eepurl.com/bOjsCn\n\nThe festival will run from 26
 th-29th July\, to get involved in the planning of the event please email ed
 lab@mmu.ac.uk letting us know how you or your group would want to contribut
 e.
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Birley\, Bonsall St\, Manchester M15
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Community Learning Festival
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160326T100000Z
DTEND:20160326T160000Z
DTSTAMP:20180704T111330Z
UID:ifeetj2bjl27070mucp9eljc5s@google.com
CREATED:20170908T132839Z
DESCRIPTION:Manchester Community Games Day \nSaturday 26th March at the Act
 ive Lifestyles Centre.\n\nCome along to our Age Friendly Hub to enjoy a fun
 filled day of activities for all to take part in. Activities on this day wi
 ll include: \n10am - 12noon\nBadminton\n\n12.30pm - 16.30pm\nEasy Circuits\
 nZumba Gold\nTea Dance & Games*\n\n*Light refreshment provided: Tea\, Coffe
 e\, Sandwiches and Cake.\n\nProvided by MCRGames Central - contact: \n Rich
 ard Harcourt\n 07510443727 \n r.harcourt@manchester.gov.uk\n\nActive Lifest
 yles Centre \nDenmark Road\nManchester\nM156FG\n\nFull details here: http:/
 /www.mcrgames.com/session/2FCBFD31-210A-495F-A6BF-A1FE5931E4F3/998 
LAST-MODIFIED:20170908T133001Z
LOCATION:Active Lifestyles Centre\, Denmark Rd\, Manchester M15 6FG\, Unite
 d Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Community Games Day - Age Friendly Hub
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160821T100000Z
DTEND:20160821T120000Z
DTSTAMP:20180704T111330Z
UID:8ddluv7l3po06urqonbf0hme4c@google.com
CREATED:20170908T132839Z
DESCRIPTION:Sign Up Today! Registration forms are available at Moss Side Le
 isure Centre.\nContact Mr D on 07939430500 or for more info email r.harcour
 t@manchester.gov.uk 
LAST-MODIFIED:20170908T133001Z
LOCATION:Alexandra Park\, Manchester M16\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Community Fun Run (5km)
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160314T100000
DTEND;TZID=Europe/Dublin:20160314T120000
RRULE:FREQ=WEEKLY;UNTIL=20160801T085959Z;BYDAY=MO,FR
DTSTAMP:20180704T111330Z
UID:d96plvr7dk2t3vf1svv5beasq0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Coffee Morning (Food\nvoucher service)\n10:00am  12:00pm\nZion 
 Centre\n339 Stretford Road\nManchester M15 4ZY\nTel: 0161 226 5412\nwww.zio
 ncentre.co.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Zion Community Resource Centre\, 339 Stretford Rd\, Manchester M15
  4ZY\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Coffee Morning
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160211T103000
DTEND;TZID=Europe/London:20160211T113000
RRULE:FREQ=WEEKLY;UNTIL=20160211T102959Z;BYDAY=TH
DTSTAMP:20180704T111330Z
UID:5cr001f3kjbhbuf0qvq9ak63mc@google.com
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:Amani Centre\, 
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Coffee Morning
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160210T140000
DTEND;TZID=Europe/Dublin:20160210T153000
RRULE:FREQ=MONTHLY;BYDAY=2WE
DTSTAMP:20180704T111330Z
UID:aoe2bdp07nh3kph77vqiouhj9c@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:‘Coffee\, Cake and Culture’ is designed to support those at ris
 k of social isolation by providing stimulating and creative learning opport
 unities through meaningful activities crafted for individuals with dementia
 . For people living with dementia\, their family\, carer's and friends.
LAST-MODIFIED:20170908T133001Z
LOCATION:Whitworth Art Gallery\, Oxford Rd\, Manchester\, Manchester M15 6E
 R\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Coffee Cake and Culture
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160630T140000
DTEND;TZID=Europe/London:20160630T160000
RRULE:FREQ=MONTHLY;COUNT=6;BYDAY=-1TH
DTSTAMP:20180704T111330Z
UID:cgg9mhh047lsqggd78llp4jac8@google.com
CREATED:20170908T132839Z
DESCRIPTION:We offer fully supported museum visits for people living with d
 ementia and their family member or carer. \n\nThis is a free session on the
  last Thursday of the month from 2pm - 4pm.\n\nFor further info plrase cont
 act Wendy Gallagher:\nwendy.gallagher@manchester.ac.uk or call 07920 595772
LAST-MODIFIED:20170908T133001Z
LOCATION:Whitworth Art Gallery\, Oxford Rd\, Manchester M15 6ER\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Coffee Cake & Culture
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160610T140000
DTEND;TZID=Europe/Dublin:20160610T160000
RRULE:FREQ=WEEKLY;UNTIL=20170203T135959Z;BYDAY=FR
DTSTAMP:20180704T111330Z
UID:kkc52m5afs9jsdpb9kgfsf5kc4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Coffee and Computing sessions run to help local people get onli
 ne and understand how to use the internet. Sessions are open to people of a
 ll abilities\, whether you’ve used a computer before or not. If you know so
 meone who’s like to get online for the first time\, why not pass the messag
 e on. We have volunteers ready and willing to talk you through simple activ
 ities in basic computer use\, email and social networking. All sessions are
  free of charge and there is no need to book\, although the number of compu
 ters available is limited.\n\nIf you would like more information about thes
 e sessions please contact Brian or call 0161 225 1064 or check the website:
  http://www.trinityhousecrc.org.uk/ 
LAST-MODIFIED:20170908T133001Z
LOCATION:Trinity House Community Resource Centre\, Grove Close\, Manchester
  M14 5AA\, 
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Coffee and Computing
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160215T120000
DTEND;TZID=Europe/London:20160215T130000
RRULE:FREQ=WEEKLY;UNTIL=20160509T110000Z;BYDAY=MO
DTSTAMP:20180704T111330Z
UID:9o4ds033al43jt3nvt4iups3f0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Contact Anne for more information:\nCall: 0161 226 8254\nEmail:
  anne389@btinternet.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Aqarius Centre\, 21 Eden Close\, M15 6AX
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Chair Assisted Exercise
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160813
DTEND;VALUE=DATE:20160815
DTSTAMP:20180704T111330Z
UID:h79fli6juqj386rqdn1roc73n8@google.com
CREATED:20170908T132839Z
DESCRIPTION:The Carnival takes place at Alexandra Park\, Moss Side.\nSaturd
 ay 13th August 12noon till 8pm.\nSunday 14th August 1pm till 8pm.\n\nThe Ca
 rnival Parade will be on Saturday at 12:30pm. (expects to return at 3:30pm.
 )\nThe J'ouvert Parade will take place on Sunday at 9am.\n\nManchester carn
 ival has brought Caribbean culture to the forefront annually for over 40 ye
 ars and is the north west’s largest celebration of Caribbean music and carn
 ival arts. The carnival is a vibrant celebration of Caribbean music\, dance
 \, theatre and costume.\n\nThe Caribbean Carnival of Manchester in 2016 wil
 l be a free event for everyone. The carnival will still be welcoming donati
 ons to help keep the carnival alive.\n\nSee here for more info: http://them
 anchestercarnival.com/
LAST-MODIFIED:20170908T133001Z
LOCATION:Alexandra Park\, Manchester M16\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Caribbean Carnival of Manchester
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T193000
DTEND;TZID=Europe/Dublin:20160308T213000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111330Z
UID:pusscdh821n8fq8jlatd6vnkt0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Run by Together Dementia Support a group primarily for carers o
 f people with dementia\, contact: 0161 2859970
LAST-MODIFIED:20170908T133001Z
LOCATION:Chorlton Central Church\, Barlow Moor Rd\, Manchester M21 8BF\, Un
 ited Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Carers Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160419T140000
DTEND;TZID=Europe/London:20160419T160000
RRULE:FREQ=WEEKLY;COUNT=6;BYDAY=TU
DTSTAMP:20180704T111330Z
UID:4ggifho7fb6qu90khrahpckprs@google.com
CREATED:20170908T132839Z
DESCRIPTION:Are you interested in learning new life skills to help you age 
 better and make the most of your retirement years? Have you recently retire
 d and are finding the change in circumstances tricky? Is retirement less re
 warding than you would like it to be? Why not enrol on our FREE 6 week ment
 al wellbeing course? It’s open to anyone who’s retired (or who’s about to) 
 who’d like to improve their mood\, meet new people & share experiences\, im
 prove their wellbeing\, grow in confidence\, make positive future plans\, l
 earn to handle worries and fears\, and acquire new life skills. \n\nManches
 ter Mind's first two pilot courses start in April 2016. \n1. 19 April 2 - 4
 pm 2016 Kath Locke Centre\, 123 Moss Lane East\, Hulme\, M15 5DD \n\n2.20th
  April 10 – 12noon Northmoor Community Centre\, 95-97 Northmoor Rd\, Manche
 ster M12 5RT\n\nContact Ruth Rosselson on bahf@manchestermind.org or call R
 uth on 07527 127 786 for further information or to register.\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, 123 Moss Ln E\, Manchester M15 5DD\, United Ki
 ngdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Building a Healthy Future in Retirement 
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160809T110000
DTEND;TZID=Europe/London:20160809T130000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111330Z
UID:mq3nq700t2ccrshpt1lprpnqbc@google.com
CREATED:20170908T132839Z
DESCRIPTION:Art class costs £4 for more information contact the church or d
 rop in on the day.\n0161 226 6531
LAST-MODIFIED:20170908T133001Z
LOCATION:Emmanuel Pentecostal Church\, Brennan Cl\, Manchester M15 6NN\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Art Class
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160209T110000
DTEND;TZID=Europe/London:20160209T130000
RRULE:FREQ=WEEKLY;UNTIL=20160524T100000Z;BYDAY=TU
DTSTAMP:20180704T111330Z
UID:4tnq09db23i8vgim0uf3vfqjo4@google.com
CREATED:20170908T132839Z
DESCRIPTION:Contact Anne for more information:\n0161 226 8254\nanne389@btin
 ternet.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Aqarius Centre\, 21 Eden Close\, M15 6AX
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Art Class
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160210T120000
DTEND;TZID=Europe/London:20160210T130000
RRULE:FREQ=WEEKLY;UNTIL=20160525T110000Z;BYDAY=WE
DTSTAMP:20180704T111330Z
UID:iacqc0jlgl5nppp9gpa2s6e6j4@google.com
CREATED:20170908T132839Z
DESCRIPTION:Contact Anne for more information:\nCall: 0161 226 8254\nEmail:
  anne389@btinternet.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Aquarius
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Aquarius 50+ Allotment Group
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160729T100000Z
DTEND:20160729T140000Z
DTSTAMP:20180704T111330Z
UID:dokc27b6phcjnkko1ca4aekbvc@google.com
CREATED:20170908T132839Z
DESCRIPTION:Age Friendly Hulme & Moss Side are hosting a Big Day out at Bro
 oks to celebrate all things Age Friendly in Hulme & Moss Side.\n\nCome and 
 join us for this event - Everyone welcome!\n\n• Entertainments Room with fi
 lms of Hulme and Moss Side\n• Active Zone with taster sessions and dancing\
 n• Information Stalls from Age Friendly organisations\n• Quiet Room for som
 e calm\n• Refreshments\n\nWe will also give an update about the activities 
 carried out so far and members of the Age\nFriendly Hulme & Moss Side Partn
 ership and Board will be around on the day to talk with you about the proje
 ct.\n\nThe venue is fully accessible. If you fancy doing a fitness class pl
 ease bring comfy\nclothing and trainers as there will be taster sessions av
 ailable.\n\nFor more information please contactEmily Crompton\nEmail: e.cro
 mpton@mmu.ac.uk\nTel.: 07973 973 184  or   0161 247 5960\n\nIf you need hel
 p with transport to get to the venue please contact:\nMoira at Moira.Maher@
 mosscare.org.uk or call 0161 232 5662
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Manchester Metropolitan University\, 53 Bonsall 
 Street\, M15 6GX
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:An Age Friendly Big Day Out!
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160810T163000Z
DTEND:20160810T173000Z
DTSTAMP:20180704T111330Z
UID:7ngh93s9g7t12csn23a037pi7o@google.com
CREATED:20170908T132839Z
DESCRIPTION:We would like to invite you to come and meet other members of t
 he community and discuss any ideas for the area. Please contact Anysie Kank
 indi on 0161 226 5045\n\nAlex Park Residents & Tenants Group\nFor further i
 nformation contact Lesley Brereton 0161 230 1076 or email lesley.brereton@e
 astlandshomes.co.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Will Griffiths Court\, Elwick Road\, Moss Side M16 7LN
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Alex Park Residents Meeting
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160526T110000
DTEND;TZID=Europe/London:20160526T130000
RRULE:FREQ=WEEKLY;UNTIL=20170309T110000Z;BYDAY=TH
DTSTAMP:20180704T111330Z
UID:h49di6vhm0mda6noddhm3240q8@google.com
CREATED:20170908T132839Z
DESCRIPTION:Come and chat with members of the Age Friendly Hulme & Moss Sid
 e board and Manchester Age Friendly Neighbourhood team. 
LAST-MODIFIED:20170908T133001Z
LOCATION:Millennium Powerhouse Library
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Age Friendly Hulme & Moss Side Drop In
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160713
DTEND;VALUE=DATE:20160714
DTSTAMP:20180704T111330Z
UID:0r86qjcd190176gve9mp7sga8s@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:11am - 2pm\n\nContact Emily Crompton if you want to host a stal
 l\, attend or get involved\n0161 247 5960 / 07973973814
LAST-MODIFIED:20170908T133001Z
LOCATION:
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:AGE FRIENDLY COMMUNITY FORUM
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160304T140000
DTEND;TZID=Europe/Dublin:20160304T160000
RRULE:FREQ=WEEKLY;BYDAY=FR
DTSTAMP:20180704T111330Z
UID:f3gajlu0ckm4dqkmnskdg7cfn0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:People First activity session contact 0161 8737335
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Activity Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160820T080000Z
DTEND:20160820T160000Z
DTSTAMP:20180704T111330Z
UID:2jfsq0i7qtr4f75rbl2flidlro@google.com
CREATED:20170908T132839Z
DESCRIPTION:BOOKING ESSENTIAL\n\nExperience the beauty of Wales with the Af
 rican Caribbean Care Group\nSaturday\, 20th August 2016\nTime: 9am to 5pm\n
 \nBook today!\nClaremont Resource Centre\nRolls Crescent\, Hulme\, Manchest
 er M15 5FS\nTelephone: 0161 226 6334\nCost *Members £15\, non-members £20
LAST-MODIFIED:20170908T133001Z
LOCATION:Claremont Resource Centre\, Rolls Cres\, Manchester M15 5FS\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:ACCG - Llandudno Family Fun Day out!
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20170523T163000Z
DTEND:20170523T180000Z
DTSTAMP:20180704T111330Z
UID:suj13085u6b2mu84lu368koer0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Address:\nTheatres A and B\n University Place\n Manchester\n\nC
 ontact\nJo Garsden : 0161-275-1298\nmicra@manchester.ac.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:The University of Manchester\, Oxford Rd\, Manchester M13 9PL\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:2017 MICRA Annual Public Lecture – Ready for Ageing Now?
TRANSP:OPAQUE
END:VEVENT
END:VCALENDAR

      http_version:
    recorded_at: Wed, 04 Jul 2018 11:13:30 GMT
  - request:
      method: get
      uri: https://calendar.google.com/calendar/ical/alliscalm.net_u2ktkhtig0b7u9bd9j8re3af2k@group.calendar.google.com/public/basic.ics
      body:
        encoding: US-ASCII
        string: ""
      headers:
        Accept-Encoding:
          - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
        Accept:
          - "*/*"
        User-Agent:
          - Ruby
    response:
      status:
        code: 200
        message: OK
      headers:
        Strict-Transport-Security:
          - max-age=31536000; includeSubDomains
        Content-Type:
          - text/calendar; charset=UTF-8
        Cache-Control:
          - no-cache, no-store, max-age=0, must-revalidate
        Pragma:
          - no-cache
        Expires:
          - Mon, 01 Jan 1990 00:00:00 GMT
        Date:
          - Wed, 04 Jul 2018 11:13:31 GMT
        X-Content-Type-Options:
          - nosniff
        X-Frame-Options:
          - SAMEORIGIN
        X-Xss-Protection:
          - 1; mode=block
        Server:
          - GSE
        Alt-Svc:
          - quic=":443"; ma=2592000; v="43,42,41,39,35"
        Transfer-Encoding:
          - chunked
      body:
        encoding: ASCII-8BIT
        string: !binary |-
          BEGIN:VCALENDAR
PRODID:-//Google Inc//Google Calendar 70.9054//EN
VERSION:2.0
CALSCALE:GREGORIAN
METHOD:PUBLISH
X-WR-CALNAME:PlaceCal: Hulme & Moss Side
X-WR-TIMEZONE:Europe/London
X-WR-CALDESC:Events managed by the PlaceCal team. Questions: support@placec
 al.org.
BEGIN:VTIMEZONE
TZID:Europe/Dublin
X-LIC-LOCATION:Europe/Dublin
BEGIN:STANDARD
TZOFFSETFROM:+0000
TZOFFSETTO:+0100
TZNAME:IST
DTSTART:19700329T010000
RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU
END:STANDARD
BEGIN:DAYLIGHT
TZOFFSETFROM:+0100
TZOFFSETTO:+0000
TZNAME:GMT
DTSTART:19701025T020000
RRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU
END:DAYLIGHT
END:VTIMEZONE
BEGIN:VTIMEZONE
TZID:America/New_York
X-LIC-LOCATION:America/New_York
BEGIN:DAYLIGHT
TZOFFSETFROM:-0500
TZOFFSETTO:-0400
TZNAME:EDT
DTSTART:19700308T020000
RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU
END:DAYLIGHT
BEGIN:STANDARD
TZOFFSETFROM:-0400
TZOFFSETTO:-0500
TZNAME:EST
DTSTART:19701101T020000
RRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU
END:STANDARD
END:VTIMEZONE
BEGIN:VTIMEZONE
TZID:Europe/London
X-LIC-LOCATION:Europe/London
BEGIN:DAYLIGHT
TZOFFSETFROM:+0000
TZOFFSETTO:+0100
TZNAME:BST
DTSTART:19700329T010000
RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU
END:DAYLIGHT
BEGIN:STANDARD
TZOFFSETFROM:+0100
TZOFFSETTO:+0000
TZNAME:GMT
DTSTART:19701025T020000
RRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU
END:STANDARD
END:VTIMEZONE
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20180620T160000
DTEND;TZID=Europe/Dublin:20180620T180000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111330Z
UID:o4mrhdph04bsuv2b54rib6etns@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Session run by Together Dementia Support call Sally on: 0161 28
 39970
LAST-MODIFIED:20180621T102519Z
LOCATION:Alexandra Park\, 180 Russell St\, Manchester M16 7JL\, United King
 dom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Dementia Friends Walk and Talk Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160309T110000
DTEND;TZID=Europe/Dublin:20160309T130000
RRULE:FREQ=WEEKLY;UNTIL=20180619T225959Z;BYDAY=WE
DTSTAMP:20180704T111330Z
UID:g8rj73669j0bfmqtsoh7eu977c@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Session run by Together Dementia Support call Sally on: 0161 28
 39970
LAST-MODIFIED:20180621T102519Z
LOCATION:Alexandra Park\, 180 Russell St\, Manchester M16 7JL\, United King
 dom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Dementia Friends Walk and Talk Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=America/New_York:20160307T100000
DTEND;TZID=America/New_York:20160307T170000
RRULE:FREQ=WEEKLY;BYDAY=MO
DTSTAMP:20180704T111330Z
UID:iq0tt2vpgh4hsceqnr4sfq8qt4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Age Friendly group for chat and helping with IT issues. Good fo
 od and good company. Call 0161 226 4335 for more information
LAST-MODIFIED:20180611T110316Z
LOCATION:Cardinal Court\, 344-346 Moss Ln E\, Manchester M14 4LZ\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:MTTC A Byte to Eat
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20180516T150000Z
DTEND:20180516T170000Z
DTSTAMP:20180704T111330Z
UID:6elpa2d5n6u311tqa7hpl2idbi@google.com
CREATED:20180516T120641Z
DESCRIPTION:
LAST-MODIFIED:20180516T120716Z
LOCATION:
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Dementia Walk - Alexandra Park Manchester 
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20180503T160000
DTEND;TZID=Europe/Dublin:20180503T213000
DTSTAMP:20180704T111330Z
UID:m49bh1kfp1lad70icrh0egqotg@google.com
RECURRENCE-ID;TZID=Europe/Dublin:20180503T113000
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:\n 11.30am at the Windrush Millennium Centre\nSupport\, trips\,
  short breaks\, information/advice\, respite alternative treatments\, pract
 ical help.\nTel: 0161 226-9562\nFax: 0161 226-7947\nEmail: admin@acmhs-blac
 kmentalhealth.org.uk\nWeb: www.acmhs-blackmentalhealth.org.uk\n\n
LAST-MODIFIED:20180503T121852Z
LOCATION:Windrush Drive\, Windrush Dr\, Manchester\, Manchester M9 5QR\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Carers Support drop in (1st Thursday of the month)
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160407T113000
DTEND;TZID=Europe/Dublin:20160407T170000
RRULE:FREQ=MONTHLY;BYDAY=1TH
DTSTAMP:20180704T111330Z
UID:m49bh1kfp1lad70icrh0egqotg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:\n 11.30am at the Windrush Millennium Centre\nSupport\, trips\,
  short breaks\, information/advice\, respite alternative treatments\, pract
 ical help.\nTel: 0161 226-9562\nFax: 0161 226-7947\nEmail: admin@acmhs-blac
 kmentalhealth.org.uk\nWeb: www.acmhs-blackmentalhealth.org.uk\n\n
LAST-MODIFIED:20180503T121852Z
LOCATION:Windrush Drive\, Windrush Dr\, Manchester\, Manchester M9 5QR\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Carers Support drop in (1st Thursday of the month)
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20180503T153000
DTEND;TZID=Europe/Dublin:20180503T183000
DTSTAMP:20180704T111330Z
UID:isbg5oeqfhrrq22k7nn48363ak@google.com
RECURRENCE-ID;TZID=Europe/Dublin:20180503T090000
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Hulme had the very first branch library of Manchester’s free li
 brary – which was itself the country’s first free library!\n\nAssistance Av
 ailable:\n\n * Mondays: 1–5pm\n * Tuesdays: 9am–1pm\n * Wednesdays: 1–8pm\n
  * Thursdays: 9am-1pm\n * Fridays: 1–5pm\n * Saturdays: 9am-1pm & 2–5pm\n\n
 Bank holidays we are closed.\n\nThere is underground car parking. The libra
 ry is open the same hours as the leisure centre and you will be able to bro
 wse & borrow a selection of popular books\, return & renew books\, log on t
 o internet-ready PCs\, and collect reservations.\n\nContact: 0161 227 3739 
 or hulmelibrary@manchester.gov.uk
LAST-MODIFIED:20180503T121715Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, United Kingdom
SEQUENCE:3
STATUS:CONFIRMED
SUMMARY:Hulme Library Assistance
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160419T090000
DTEND;TZID=Europe/Dublin:20160419T130000
RRULE:FREQ=WEEKLY;BYDAY=TU,TH,SA
EXDATE;TZID=Europe/Dublin:20180315T090000
EXDATE;TZID=Europe/Dublin:20180313T090000
DTSTAMP:20180704T111330Z
UID:isbg5oeqfhrrq22k7nn48363ak@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Hulme had the very first branch library of Manchester’s free li
 brary – which was itself the country’s first free library!\n\nAssistance Av
 ailable:\n\n * Mondays: 1–5pm\n * Tuesdays: 9am–1pm\n * Wednesdays: 1–8pm\n
  * Thursdays: 9am-1pm\n * Fridays: 1–5pm\n * Saturdays: 9am-1pm & 2–5pm\n\n
 Bank holidays we are closed.\n\nThere is underground car parking. The libra
 ry is open the same hours as the leisure centre and you will be able to bro
 wse & borrow a selection of popular books\, return & renew books\, log on t
 o internet-ready PCs\, and collect reservations.\n\nContact: 0161 227 3739 
 or hulmelibrary@manchester.gov.uk
LAST-MODIFIED:20180503T121628Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme Library Assistance
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20180313T140000
DTEND;TZID=Europe/Dublin:20180313T160000
DTSTAMP:20180704T111330Z
UID:830tjus3mgbrd673412lus6pvg@google.com
RECURRENCE-ID;TZID=Europe/Dublin:20180313T100000
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The So Sew group is run by Linda Puttick and takes place on a T
 uesday morning from 10-12.\nIt runs on a 3 term x 10 week basis and is at p
 resent looking for new members.\nThere is a fee to cover costs.\n\nContact:
  lindajputtick@gmail.com\n
LAST-MODIFIED:20180424T114038Z
LOCATION:Amani Centre\, Quinney Crescent\, Moss Side\, Manchester\, M167DG
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:So Sew Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T100000
DTEND;TZID=Europe/Dublin:20160308T120000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111330Z
UID:830tjus3mgbrd673412lus6pvg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The So Sew group is run by Linda Puttick and takes place on a T
 uesday morning from 10-12.\nIt runs on a 3 term x 10 week basis and is at p
 resent looking for new members.\nThere is a fee to cover costs.\n\nContact:
  lindajputtick@gmail.com\n
LAST-MODIFIED:20180424T114038Z
LOCATION:Amani Centre\, Quinney Crescent\, Moss Side\, Manchester\, M167DG
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:So Sew Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20180521T130000Z
DTEND:20180521T150000Z
DTSTAMP:20180704T111330Z
UID:2hb63b0go2bldrivu2vlcap8s2@google.com
CLASS:PUBLIC
CREATED:20180424T083151Z
DESCRIPTION:£2.50 for people living in the local community.<br><br>Spaces a
 re limited so please do contact us to confirm your attendance ASAP. <br><br
 >Email: <a href="mailto:info@claystudio.co.uk">info@claystudio.co.uk</a><br
 ><br>Mobile: 07445 920244
LAST-MODIFIED:20180424T100941Z
LOCATION:Community Clay Studio Manchester CIC\, 61 Old Birley St\, Manchest
 er M15 5RF\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Clay Studio: Introduction to Art Therapy Workshop
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160309T110000
DTEND;TZID=Europe/Dublin:20160309T150000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111330Z
UID:ukacgtjt3lj1hb6q6siijmvlg4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Call 0161 2261291 for more details
LAST-MODIFIED:20171110T155920Z
LOCATION:St Edmund's Church\, Alexandra Road South\, Whalley Range\, Manche
 ster\, M16 8EZ
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Foodbank
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171204T120000Z
DTEND:20171204T140000Z
DTSTAMP:20180704T111330Z
UID:5fgmn21mpae9cuoujtgofch5hq@google.com
CREATED:20171110T151029Z
DESCRIPTION:This event has a Google Hangouts video call.\nJoin: https://plu
 s.google.com/hangouts/_/alliscalm.net/aquarius-over?hceid=YWxsaXNjYWxtLm5ld
 F91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.5fg
 mn21mpae9cuoujtgofch5hq&hs=121
LAST-MODIFIED:20171110T154632Z
LOCATION:Emmanuel Pentecostal Church\, Brennan Cl\, Manchester M15 6NN\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Aquarius Over 50s Christmas Party and keep fit session
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20171219T160000Z
DTEND:20171219T190000Z
DTSTAMP:20180704T111330Z
UID:66g7vpsecais2ffvmcv82c5fgc@google.com
CREATED:20171110T153651Z
DESCRIPTION:Christmas party for older people at the Ibrahim Maine Centre in
  association with Mosscare Housing. \n\n\nThis event has a Google Hangouts 
 video call.\nJoin: https://plus.google.com/hangouts/_/alliscalm.net/ibrahim
 -maine?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm91cC
 5jYWxlbmRhci5nb29nbGUuY29t.66g7vpsecais2ffvmcv82c5fgc&hs=121
LAST-MODIFIED:20171110T153651Z
LOCATION:M14 4ET\, Maine Rd\, Manchester M14 4ET\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Ibrahim Maine Centre Christmas Party
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171218T130000Z
DTEND:20171218T150000Z
DTSTAMP:20180704T111330Z
UID:0v7p86b5ofjor75d771andnpo6@google.com
CREATED:20171110T153337Z
DESCRIPTION:£3.50\, open to all.\n\n\nThis event has a Google Hangouts vide
 o call.\nJoin: https://plus.google.com/hangouts/_/alliscalm.net/mission-to-
 the?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm91cC5jY
 WxlbmRhci5nb29nbGUuY29t.0v7p86b5ofjor75d771andnpo6&hs=121
LAST-MODIFIED:20171110T153337Z
LOCATION:Moss Side Millennium Powerhouse\, 140 Raby St\, Manchester M14 4SL
 \, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Mission To The City Christmas Lunch
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171216T150000Z
DTEND:20171216T190000Z
DTSTAMP:20180704T111330Z
UID:4khv586f3likive4k9hvqqn7vh@google.com
CREATED:20171110T153241Z
DESCRIPTION:Open to all aged 14-25. \n\n\nThis event has a Google Hangouts 
 video call.\nJoin: https://plus.google.com/hangouts/_/alliscalm.net/lgbt-yo
 uth?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm91cC5jY
 WxlbmRhci5nb29nbGUuY29t.4khv586f3likive4k9hvqqn7vh&hs=121
LAST-MODIFIED:20171110T153241Z
LOCATION:LGBT+ Centre\, 49-51 Sidney Street\, M1 7HB
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:LGBT+ Youth Group Festive Feast Xmas Party
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171215T130000Z
DTEND:20171215T160000Z
DTSTAMP:20180704T111330Z
UID:69gku8e455dbcagco25a79r8u9@google.com
CREATED:20171110T153154Z
DESCRIPTION:Bus leaving Trinity House at noon. Lunch £16\, bus £2\, contact
  [Trinity House](https://placecal.org/places/7) for bookings.\n\n\nThis eve
 nt has a Google Hangouts video call.\nJoin: https://plus.google.com/hangout
 s/_/alliscalm.net/link-good?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkO
 Wo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.69gku8e455dbcagco25a79r8u9&
 hs=121
LAST-MODIFIED:20171110T153154Z
LOCATION:St Kentigern’s Irish Club\, 36 Wilbraham Road\, M14 7DW
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Link Good Neighbours Christmas Lunch
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171214T180000Z
DTEND:20171214T223000Z
DTSTAMP:20180704T111330Z
UID:2ce8ftaccgali3m43f5pbos9ik@google.com
CREATED:20171110T153043Z
DESCRIPTION:Don’t sit alone at home! Come and enjoy a lovely evening with a
  bar\, DJ\, and tasty food. £20 per person\, call Anne on 0782 6637754 to r
 eserve. \n\n\nThis event has a Google Hangouts video call.\nJoin: https://p
 lus.google.com/hangouts/_/alliscalm.net/aquarius-over?hceid=YWxsaXNjYWxtLm5
 ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.2
 ce8ftaccgali3m43f5pbos9ik&hs=121
LAST-MODIFIED:20171110T153043Z
LOCATION:Whalley Range 11-18 High School\, Wilbraham Road\, Manchester M16 
 8GW\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Aquarius Over 50s Christmas Bash
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171214T140000Z
DTEND:20171214T170000Z
DTSTAMP:20180704T111330Z
UID:02ki90e6vspsh7jcm7f9pkpm7e@google.com
CREATED:20171110T152753Z
DESCRIPTION:A free\, creative space for LGBT+ people to make\, do and chat.
  Join us for some festive crafting\, all materials provided.\n\nThis event 
 has a Google Hangouts video call.\nJoin: https://plus.google.com/hangouts/_
 /alliscalm.net/lgbt-creative?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJk
 OWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.02ki90e6vspsh7jcm7f9pkpm7e
 &hs=121
LAST-MODIFIED:20171110T152753Z
LOCATION:LGBT+ Centre\, 49-51 Sidney Street\, M1 7HB
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:LGBT+ Creative Cafe
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171213T130000Z
DTEND:20171213T150000Z
DTSTAMP:20180704T111330Z
UID:1v5h3mu63n77b5qmm0e9ck0l87@google.com
CREATED:20171110T152704Z
DESCRIPTION:Food from 1pm. £7.50 (price and menu tbc)\, supports Manchester
  Mind\, open to all. Booking required\, check [our website](http://goodmood
 food.org/) for contact information or pop in for more details.\n\nThis even
 t has a Google Hangouts video call.\nJoin: https://plus.google.com/hangouts
 /_/alliscalm.net/good-mood-food?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1O
 WJkOWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.1v5h3mu63n77b5qmm0e9ck0
 l87&hs=121
LAST-MODIFIED:20171110T152704Z
LOCATION:Zion Community Resource Centre Cafe\, 339 Stretford Road\, M15 4ZY
 .
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Good Mood Food Christmas Meal
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171208T140000Z
DTEND:20171208T180000Z
DTSTAMP:20180704T111330Z
UID:7u3vc0oi2ap3tgll63inovilni@google.com
CREATED:20171110T151640Z
DESCRIPTION:Come give us some feedback or get involved in the centre. \n\nA
 ctivities for all the family\, open to all. \n\n\nThis event has a Google H
 angouts video call.\nJoin: https://plus.google.com/hangouts/_/alliscalm.net
 /aquarius?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYWYya0Bncm9
 1cC5jYWxlbmRhci5nb29nbGUuY29t.7u3vc0oi2ap3tgll63inovilni&hs=121
LAST-MODIFIED:20171110T151749Z
LOCATION:Eden Close\, Eden Cl\, Manchester M15 6AX\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Aquarius Community Centre Open Day
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171208T190000Z
DTEND:20171208T210000Z
DTSTAMP:20180704T111330Z
UID:0951jr6t8p7boct2vkhi4dtas5@google.com
CREATED:20171110T151737Z
DESCRIPTION:Have a go at speaking a different language by chatting with peo
 ple from lots of different nationalities\, open to all. \n\n\nThis event ha
 s a Google Hangouts video call.\nJoin: https://plus.google.com/hangouts/_/a
 lliscalm.net/christmas?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cm
 UzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.0951jr6t8p7boct2vkhi4dtas5&hs=12
 1
LAST-MODIFIED:20171110T151737Z
LOCATION:New Hope Fellowship Church\, Tatton St\, Manchester M15 4EQ\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Christmas Evening Meal & Language Exchange
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171207T110000Z
DTEND:20171207T140000Z
DTSTAMP:20180704T111330Z
UID:4muvftbietvr0idkpr5tfpahl5@google.com
CREATED:20171110T151514Z
DESCRIPTION:Open to all over 50s residents of Hulme and Moss Side. RSVP to 
 Matt Youngson: M.Youngson@mmu.ac.uk or 0161 247 5960. \n\n\nThis event has 
 a Google Hangouts video call.\nJoin: https://plus.google.com/hangouts/_/all
 iscalm.net/mmu-age?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJkOWo4cmUzYW
 Yya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.4muvftbietvr0idkpr5tfpahl5&hs=121
LAST-MODIFIED:20171110T151514Z
LOCATION:MMU Brooks Building\, 53 Bonsall St\, Manchester M15 6GX Bonsall S
 t\, Manchester M15 6GX\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:MMU Age Friendly Winter Meal
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171206T120000Z
DTEND:20171206T140000Z
DTSTAMP:20180704T111330Z
UID:563kk887jorbrpvurk0i7ss7vp@google.com
CREATED:20171110T151218Z
DESCRIPTION:Food bank and computer access available\, all welcome\n\nThis e
 vent has a Google Hangouts video call.\nJoin: https://plus.google.com/hango
 uts/_/alliscalm.net/new-hope?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJk
 OWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.563kk887jorbrpvurk0i7ss7vp
 &hs=121
LAST-MODIFIED:20171110T151303Z
LOCATION:New Hope Fellowship Church\, Tatton St\, Manchester M15 4EQ\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:New Hope Fellowship Church Christmas Lunch
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20171205T143000Z
DTEND:20171205T163000Z
DTSTAMP:20180704T111330Z
UID:6dv25c3ogp3l1co41aofl25mts@google.com
CREATED:20171110T151153Z
DESCRIPTION:Open to all older residents and project volunteers\n\nThis even
 t has a Google Hangouts video call.\nJoin: https://plus.google.com/hangouts
 /_/alliscalm.net/people-first?hceid=YWxsaXNjYWxtLm5ldF91Mmt0a2h0aWcwYjd1OWJ
 kOWo4cmUzYWYya0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t.6dv25c3ogp3l1co41aofl25mt
 s&hs=121
LAST-MODIFIED:20171110T151153Z
LOCATION:The Wesley Centre\, Royce Road\, Manchester\, M15 5BP
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:People First Befriending Project Party
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160306T103000
DTEND;TZID=Europe/Dublin:20160306T120000
RRULE:FREQ=WEEKLY;BYDAY=SU
DTSTAMP:20180704T111330Z
UID:i78dcpt96ccnephj8jj5tpihhs@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20171027T094125Z
LOCATION:Amani Centre\, Quinney Crescent\, Moss Side Manchester\, United Ki
 ngdom M16 7DG
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Age Friendly Worship
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160311T110000
DTEND;TZID=Europe/Dublin:20160311T130000
RRULE:FREQ=WEEKLY;BYDAY=FR
DTSTAMP:20180704T111330Z
UID:0o4out0c7ep1vrdui0bpas75fk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Call 0161 2262702 for more details
LAST-MODIFIED:20171027T094000Z
LOCATION:Wesley Centre\, Royce Road\, Manchester M15 5BP
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Foodbank 
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T110000
DTEND;TZID=Europe/Dublin:20160308T130000
RRULE:FREQ=WEEKLY;BYDAY=TU,FR
DTSTAMP:20180704T111330Z
UID:l5u6s4dnluh7ff8ms9r1uju4v4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Call 0161 2269012
LAST-MODIFIED:20171027T093746Z
LOCATION:Church of God of Prophecy Christian Centre\, 140 Raby St\, Manches
 ter M14 4SL
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Tuesday and Friday Lunch
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160304T093000
DTEND;TZID=Europe/Dublin:20160304T123000
RRULE:FREQ=WEEKLY;BYDAY=FR
DTSTAMP:20180704T111330Z
UID:rrdioupeip6f4go2i0np3g6p90@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Tea and cake for all to enjoy.\nCall: 07734414449
LAST-MODIFIED:20171019T101742Z
LOCATION:Fallowfield Methodist Church\, Platt Lane\, M14 7BU
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Cafe on the Corner
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160728T123000
DTEND;TZID=Europe/London:20160728T140000
RRULE:FREQ=WEEKLY;BYDAY=TH
DTSTAMP:20180704T111330Z
UID:36niiq2fvmilgeo87a0ims6qrg@google.com
CREATED:20170908T132839Z
DESCRIPTION:Dementia Café\nEvery Thursday from 12.30-2pm\nCome along the Af
 rican Caribbean Care Group's Dementia Café at the Claremont Resource Centre
 \,\noffering:\n\nAdvice and Support\nUnderstanding dementia and what to exp
 ect\nMeet an Outreach Worker\nMeet new friends\nFree Refreshments\n\nWe wil
 l be running FREE drop-in cafés every Thursday from 12.30-2pm.
LAST-MODIFIED:20170928T113500Z
LOCATION:Claremont Resource Centre\, Rolls Cres\, Manchester M15 5FS\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Dementia Café
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160211T120000
DTEND;TZID=Europe/Dublin:20160211T130000
RRULE:FREQ=WEEKLY;UNTIL=20170927T225959Z;BYDAY=TH
DTSTAMP:20180704T111331Z
UID:c8shegdd6aqv95lfnp955opkpg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:A low impact circuits based class suitable for older people or 
 people new to exercise. Exercises can be adapted for chair based exercise. 
 \nEveryone welcome!\n£1 per session\nFor more info please contact: 0161 219
  2569 or email info@mcrgames.com 
LAST-MODIFIED:20170927T143207Z
LOCATION:Moss Side Millennium Powerhouse\, 140 Raby St\, Manchester M14 4SL
 \, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Easy Rhythms Circuits Class
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160309T103000
DTEND;TZID=Europe/Dublin:20160309T120000
RRULE:FREQ=WEEKLY;UNTIL=20170926T225959Z;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:6tdpus8n0els7bqsj42r1m4cqo@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Coffee Morning\, for more details please contact Anysie on: any
 sie.kankindi@citysouthmanchester.co.uk\nTelephone: 0161 2265045  \nMobile: 
 07579965667  
LAST-MODIFIED:20170927T143109Z
LOCATION:Frank Hatton Court\, Whickham Cl\, Manchester M14 4HW\, United Kin
 gdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Coffee Morning
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160210T130000
DTEND;TZID=Europe/Dublin:20160210T150000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:g8be1mc0qgg2p7ogrhg5v05m14@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:For more information please contact Imogen on:\nTelephone: 0161
  2251064   \nEmail: Imogen imogen@trinityhousecrc.org.uk\n
LAST-MODIFIED:20170927T143040Z
LOCATION:New Hope Fellowship Church\, Tatton St\, Manchester M15 4EQ\, UK
SEQUENCE:2
STATUS:CONFIRMED
SUMMARY:Computer Class
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160310T100000
DTEND;TZID=Europe/Dublin:20160310T110000
RRULE:FREQ=WEEKLY;UNTIL=20160804T085959Z;BYDAY=TH
DTSTAMP:20180704T111331Z
UID:q3o04umeujrq63qpmm01aj8obg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Zumba Gold\n(for active older people)\n10:00am  11.00am\nPrice:
  £3\nKath Locke Centre\n123 Moss Lane East\nManchester M15 5DD\nTel: 0161 4
 55 0211\nwww.kathlockecentre.co.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, 123 Moss Ln E\, Manchester M15 5DD\, United Ki
 ngdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Zumba Gold (for active older people)
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160601T131500
DTEND;TZID=Europe/Dublin:20160601T151500
RRULE:FREQ=MONTHLY;BYDAY=1WE
DTSTAMP:20180704T111331Z
UID:jmbsmjit50j5jjb64iukr1dek4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Women only Wednesdays Cancer Support\nAre you a woman? Have you
  or anyone else close to you been affected by cancer? Would you like to mee
 t other women in a similar position?\n\nWhat do we offer?\n- regular meetin
 gs where you can chat with others and share experiences.\n- Health and well
 -being therapies (relaxation\, massage\, reflexology)\n- Structured cancer 
 related workshops\, i.e. managing fatigue\, stress and anxiety.\n- Advice a
 nd tips on how to manage both practical and emotional issues.\nWe meet on t
 he first Wednesday of every month at Kath Locke Centre from 1.15 - 3.15pm.\
 n\nThis project is targeted at\, but not exclusive to BME and marginilised 
 women living in Hulme\, Moss Side\, Old Trafford\, Levenshulme\, Chorlton a
 nd surrounding areas.\n\nAll activities and workshops are delivered by qual
 ified and experienced individuals. Activities are free and refreshments are
  provided. We welcome women who are carers\, family and friends (over 18 ye
 ars) of people with cancer.\n\nFor more information contact Marcella: 07496
  089310\, email: info@can-survive.org.uk \nhttp://www.can-survive.org.uk/
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, 123 Moss Ln E\, Manchester\, Manchester M15 5D
 D\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:WoW - Cancer Support Group
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160612
DTEND;VALUE=DATE:20160613
DTSTAMP:20180704T111331Z
UID:rdibmc8jc9k33iu03iat93bb14@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:On Sunday 12th June\, we will be hosting a community picnic at 
 Birley as part of the national Big Lunch\, an annual event aimed at bringin
 g people together and celebrating community.\nThe event will be linked to M
 anchester’s status as European City of Science 2016 and will have avery spe
 cial science theme.\nIn partnership with the Faculty of Science and Enginee
 ring\, MetMUnch\, the University’s Environment Team\, and local community p
 artners we’ll be showcasing fermented foods made out of microbes and invite
  you to take part and bring your own picnic. There’ll be plenty of family-f
 riendly activities and you can find out more about the Birley Community Orc
 hard and herb garden.  \nFor more information on how to get involved contac
 t: engagement@mmu.ac.uk or 0161 247 3393
LAST-MODIFIED:20170908T133001Z
LOCATION:Birley Fields\, Bonsall St\, Manchester M15\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:World Family Picnic European City of Science 
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T130000
DTEND;TZID=Europe/Dublin:20160308T150000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111331Z
UID:ajmngp86a2h662ifdsgqa19g1o@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Advice\, information\, discussion\, support\nTel: 0161 226-9562
 \nFax: 0161 226-7947\nEmail: admin@acmhs-blackmentalhealth.org.uk\nWeb: www
 .acmhs-blackmentalhealth.org.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Windrush Millennium Centre\, Alexandra Rd\, Manchester\, Mancheste
 r M16 7WD\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Women's Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160629T123000
DTEND;TZID=Europe/London:20160629T133000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:5fv1n8mjfsdi4r90g4kn8qv68s@google.com
CREATED:20170908T132839Z
DESCRIPTION:Walking is great for your well-being and puts a spring in your 
 step. With this event you can take part in free short art walks at Whitwort
 h Park to help you get active at a pace that works for you.\n\nIt's an exce
 llent way to stretch your legs\, explore what's on your door-step\, and mak
 e new friends.\n\nJoin us every Wednesday lunchtime 12.30pm - 1.30pm for a 
 walk in the park. We meet at the park entrance reception of the gallery.\n\
 nFor more info pleas econtact whitworth@manchester.ac.uk or call 0161 275 7
 450
LAST-MODIFIED:20170908T133001Z
LOCATION:Whitworth Art Gallery\, Oxford Rd\, Manchester M15 6ER\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Walking for Health
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160831T110000
DTEND;TZID=Europe/London:20160831T120000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:joasmfnajdqsem4ui6d734hvik@google.com
CREATED:20170908T132839Z
DESCRIPTION:A slower version of the beautiful game. You're never too old to
  get involved and no matter what your age\, we're giving you the chance to 
 play football!\n\nWalking Football is targeted at over 50s specifically\, b
 ut it doesn't matter if you are younger than this\, everyone can attend the
  sessions. There are some differences though:\nNo running allowed - anyone 
 found running will concede a free-kick. Running is defined as neither foot 
 being planted. In order for someone to be 'walking' at least one foot must 
 be planted at all times.\nNon-contact - you cannot tackle another player\, 
 but you can intercept and block.\n\nContact Name: Andy Hilton\nContact Emai
 l: Andy.Hilton@traffordleisure.co.uk\nContact Number: 07912280894
LAST-MODIFIED:20170908T133001Z
LOCATION:Old Trafford Sports Barn\, Carver Street\, Manchester\, M16 9QP
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Walking Football
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160603T110000Z
DTEND:20160603T140000Z
DTSTAMP:20180704T111331Z
UID:fe1bpddo56210crdqjcbeebmqo@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Event to celebrate the re-opening of Trinity House!\nMore detai
 ls to come!\n\nContact: Lydia on 0161 225 1064 or email info@trinityhousecr
 c.org.uk 
LAST-MODIFIED:20170908T133001Z
LOCATION:Trinity House Community Resource Centr\, Grove Close\, off Platt L
 ane Rusholme Manchester M14 5AA
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Trinity House Opening Party!
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160813T140000Z
DTEND:20160813T150000Z
DTSTAMP:20180704T111331Z
UID:r5q1733g2bvresv3mhq6prsii4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160709T140000Z
DTEND:20160709T160000Z
DTSTAMP:20180704T111331Z
UID:qug0u0p9mao9b5r1bjhb7p2i0g@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160514T140000Z
DTEND:20160514T160000Z
DTSTAMP:20180704T111331Z
UID:bbsr0u24i384jp5uuk7j3gdijg@google.com
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160611T140000Z
DTEND:20160611T160000Z
DTSTAMP:20180704T111331Z
UID:8l5fr4vv5to10t0toggs1om3bk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20161015T140000Z
DTEND:20161015T160000Z
DTSTAMP:20180704T111331Z
UID:20i9p5qdohcfn6crsptu9nf33g@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160917T140000Z
DTEND:20160917T160000Z
DTSTAMP:20180704T111331Z
UID:17b0apo0hj3ruoih6t1r6ngo04@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia friendly gospel choir for African and Caribbean people
  with memory difficulties/dementia to enjoy and spend time together with re
 latives or friends.\n\nEveryone welcome.\n\nContact: Dorothy Allen Dorothy@
 togetherdementiasupport.org\, Sally Ferris 07854 335890 or Dawn Edge dawn.e
 dge@manchester.ac.uk 07796 202806
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Together in Song
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160215T130000
DTEND;TZID=Europe/London:20160215T134500
RRULE:FREQ=WEEKLY;UNTIL=20160523T120000Z;BYDAY=MO
DTSTAMP:20180704T111331Z
UID:fro63veov8mqgv5cimhgeenfac@google.com
CREATED:20170908T132839Z
DESCRIPTION:Contact Anne for more information:\n0161 226 8254\nanne389@btin
 ternet.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Aqarius Centre\, 21 Eden Close\, M15 6AX
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Tea Break Club
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160213T100000
DTEND;TZID=Europe/Dublin:20160213T120000
RRULE:FREQ=WEEKLY;BYDAY=SA
DTSTAMP:20180704T111331Z
UID:a4alfmno6rglodpcifge9nk20k@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:In the multi-purpose hall\n0161 247 2646
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Birley\, MMU\, 53 Bonsall St\, Manchester M15 6G
 X
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Table Tennis
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160902T043000Z
DTEND:20160902T053000Z
DTSTAMP:20180704T111331Z
UID:sq3aljklpqvue2b1cro280t8d0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Hosted by One Manchester as part of their Community Impact Week
LAST-MODIFIED:20170908T133001Z
LOCATION:St Georges Court\, Angela Street\, Hulme
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Summer Party at St Georges Court
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160723
DTEND;VALUE=DATE:20160821
DTSTAMP:20180704T111331Z
UID:90p7ccilqtvco3akf0kkkmtaj4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks\, Birley\, 53 Bonsall Street Manchester M15 6GX
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Summer Community Games
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160211T103000
DTEND;TZID=Europe/London:20160211T113000
RRULE:FREQ=WEEKLY;UNTIL=20160427T225959Z;BYDAY=TH
DTSTAMP:20180704T111331Z
UID:5cr001f3kjbhbuf0qvq9ak63mcr20160211T103000@google.com
CREATED:20170908T132839Z
DESCRIPTION:Drinks and Toast - everyone welcome!
LAST-MODIFIED:20170908T133001Z
LOCATION:Amani Centre Quinney Cresent Shoreham Close\, Manchester M16 7DG
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Social Morning
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160428T103000
DTEND;TZID=Europe/London:20160428T120000
RRULE:FREQ=WEEKLY;UNTIL=20160505T093000Z;BYDAY=TH
DTSTAMP:20180704T111331Z
UID:3asg00tcgps8jke94eeqlcg28s@google.com
CREATED:20170908T132839Z
DESCRIPTION:Drinks and Toast - everyone welcome!
LAST-MODIFIED:20170908T133001Z
LOCATION:Amani Centre Quinney Cresent Shoreham Close\, Manchester M16 7DG
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Social Morning
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160603T084500Z
DTEND:20160603T110000Z
DTSTAMP:20180704T111331Z
UID:3bsivkij8er2fu0ldvbso6fefg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:We will be arriving at 9.45am and sing at 10.30am\nWe are singi
 ng Put a Little Love In Your Heart voices only \nDress code blue and white\
 n\nContact Sally Ferris\,  Together Dementia Support\n07854 335890\n
LAST-MODIFIED:20170908T133001Z
LOCATION:EPPING WALK BRIDGE located at MMU Bonsall St Hulme Manchester M15 
 6GX
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Sing Along BBC MUSIC DAY
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160302T120000
DTEND;TZID=Europe/Dublin:20160302T130000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:r5l6c80are2taqivse57jbd4f8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:A gentle all-over body workout designed to improve mobility\, s
 trength\, stamina and all-round fitness. This class is suitable for older a
 dults\, and complete beginners.\n\nCost £1\n\nRegistration\nhttp://www.manc
 hester.gov.uk/activelifestyles \n\n0161 234 5454
LAST-MODIFIED:20170908T133001Z
LOCATION:Active Lifestyles Centre\, Denmark Rd\, Manchester M15 6FG\, Unite
 d Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Simply Circuits
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160304T130000
DTEND;TZID=Europe/Dublin:20160304T140000
RRULE:FREQ=WEEKLY;BYDAY=FR
DTSTAMP:20180704T111331Z
UID:gdv37123s1t96ps2ofi1rpg0i4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:A gentle all-over body workout designed to improve mobility\, s
 trength\, stamina and all-round fitness. This class is suitable for older a
 dults\, and complete beginners.\n\nCost\n£1\n\nRegistration\nhttp://www.man
 chester.gov.uk/activelifestyles\n0161 234 5454\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Active Lifestyles Centre\, Denmark Rd\, Manchester M15 6FG\, Unite
 d Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Simply Circuits
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160229T133000
DTEND;TZID=Europe/Dublin:20160229T143000
RRULE:FREQ=WEEKLY;BYDAY=MO
DTSTAMP:20180704T111331Z
UID:8hepbt7egl0aj85qhpmijck2d8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:A gentle all-over body workout designed to improve mobility\, s
 trength\, stamina and all-round fitness. This class is suitable for older a
 dults\, and complete beginners.\n\nCost\n£1\n\nRegistration\nhttp://www.man
 chester.gov.uk/activelifestyles\n0161 234 5454\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Active Lifestyles Centre\, Denmark Rd\, Manchester M15 6FG\, Unite
 d Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Simply Circuits
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160507T130000Z
DTEND:20160507T150000Z
DTSTAMP:20180704T111331Z
UID:e88e148ts9v4rum5iib27jvhhk@google.com
CREATED:20170908T132839Z
DESCRIPTION:Exhibition of artwork created at a workshop held at two worksho
 ps in March and April.\n\nEvent will be held in the stunningly renovated Ch
 orlton Lodge in Alexandra Park (Entrance on the corner of Smalldale Avenue 
 and Claremount Road\, M16 7JL)  as part of the final Pankhurst in the Park’
  2016 event on 7 May 2016\, 2-4pm. \n\nTo attend\, please contact:\nEmail: 
 hello@alexandra-arts.org.uk \nText or call: 07816683171\nCall: 01618813744 
 (In care of Chris at JNR8 Community Centre).\n\n\nhttp://www.alexandra-arts
 .org.uk/events/2016/2/26/rebels-and-rollers
LAST-MODIFIED:20170908T133001Z
LOCATION:Chorlton Lodge\, Alexandra Park - enter on the corner of Smalldale
  Avenue and Claremount Road\, M16 7JL
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Rebels and Rollers Exhibition
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160306T120000
DTEND;TZID=Europe/London:20160306T140000
RRULE:FREQ=WEEKLY;UNTIL=20160403T110000Z;INTERVAL=4;BYDAY=SU
DTSTAMP:20180704T111331Z
UID:nbgu5dcs8jbjs6gbfn6b6s0k8g@google.com
CREATED:20170908T132839Z
DESCRIPTION:Rebels & Rollers is a free workshop\, taking place as part of A
 lexandra Arts’\nPankhurst in the Park programme. In an accessible\, welcomi
 ng and age-friendly environment\, this is your opportunity to learn new art
  skills and take part in ‘Pankhurst in the Park’ 2016\, which celebrates Al
 exandra Park’s rich historical connection to the Iconic Suffragette\, Emmel
 ine Pankhurst.\n\nAt these two workshops you will have the opportunity to l
 earn how to screen print and develop an artwork\, whilst socialising with l
 ike-minded people in your community.\n\nYour artwork will then be exhibited
  in the stunningly renovated Chorlton Lodge in Alexandra Park (Entrance on 
 the corner of Smalldale Avenue and Claremount Road\, M16 7JL)  as part of t
 he final Pankhurst in the Park’ 2016 event on 7 May 2016\, 2-4pm. \n\nFree 
 transport and refreshments provided.\n\nTo attend\, please contact:\nEmail:
  hello@alexandra-arts.org.uk \nText or call: 07816683171\nCall: 01618813744
  (In care of Chris at JNR8 Community Centre).\n\nhttp://www.alexandra-arts.
 org.uk/events/2016/2/26/rebels-and-rollers
LAST-MODIFIED:20170908T133001Z
LOCATION: Chorlton Lodge in Alexandra Park (Entrance on the corner of Small
 dale Avenue and Claremount Road\, M16 7JL) 
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Rebels & Rollers Workshop
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160610T170000Z
DTEND:20160610T200000Z
DTSTAMP:20180704T111331Z
UID:ujbcmaotadn0e6impbkb0us0fo@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Community Social Event at St James\, quiz\, food and music from
  40s and 50s - Invite your friends and neighbours!
LAST-MODIFIED:20170908T133001Z
LOCATION:St James\, 95a Princess Road/ Great Western Street\, M14 4TH
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Queens Birthday Community Social
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160514T120000
DTEND;TZID=Europe/London:20160514T170000
RRULE:FREQ=WEEKLY;COUNT=1;INTERVAL=1;BYDAY=SA
DTSTAMP:20180704T111331Z
UID:o4h6rnctnhes5sh4f27kmrruvsr20160514T110000@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Monday: 11am-2pm \nTuesday: 11am-2pm\nWednesday: 11am-2pm\nThur
 sday: 11am -2pm\nFriday: Closed\nSaturday: 12noon-5pm\nSunday: Closed\n\nCa
 ll: 0161 227 3758\nEmail: powerhouselibrary@manchester.gov.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Powerhouse Library\, 140 Raby St\, Manchester M14 4SQ\, 
 United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Powerhouse Library
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160312T120000
DTEND;TZID=Europe/Dublin:20160312T170000
RRULE:FREQ=WEEKLY;UNTIL=20160514T105959Z;INTERVAL=1;BYDAY=SA
DTSTAMP:20180704T111331Z
UID:o4h6rnctnhes5sh4f27kmrruvs@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Monday: 11am-2pm\; 3-7pm\nTuesday: 11am-2pm\; 3-7pm\nWednesday:
  11am-2pm\; 3-7pm\nThursday: 11am -2pm\; 3-7pm\nFriday: closed\nSaturday: 1
 2-5pm\n\nCall: 0161 227 3758\nEmail: powerhouselibrary@manchester.gov.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Powerhouse Library\, 140 Raby St\, Manchester M14 4SQ\, 
 United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Powerhouse Library
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160307T110000
DTEND;TZID=Europe/London:20160307T140000
RRULE:FREQ=WEEKLY;UNTIL=20160420T225959Z;BYDAY=MO,TU,WE,TH,FR
DTSTAMP:20180704T111331Z
UID:545po409sj4csr736q6i7rc1q4@google.com
CREATED:20170908T132839Z
DESCRIPTION:Monday: 11am-2pm\; 3-7pm\nTuesday: 11am-2pm\; 3-7pm\nWednesday:
  11am-2pm\; 3-7pm\nThursday: 11am -2pm\; 3-7pm\nFriday: closed\nSaturday: 1
 2-5pm\n\nCall: 0161 227 3758\nEmail: powerhouselibrary@manchester.gov.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Powerhouse Library\, 140 Raby St\, Manchester M14 4SQ\, 
 United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Powerhouse Library
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160307T110000
DTEND;TZID=Europe/London:20160307T140000
RRULE:FREQ=WEEKLY;UNTIL=20160420T225959Z;BYDAY=MO,TU,WE,TH,SA
DTSTAMP:20180704T111331Z
UID:3b8kpamiap7kb9pkt4mfmfigv4@google.com
CREATED:20170908T132839Z
DESCRIPTION:Monday: 11am-2pm \nTuesday: 11am-2pm\nWednesday: 11am-2pm\nThur
 sday: 11am -2pm\nFriday: closed\nSaturday: 12-5pm\nSunday: Closed\n\nCall: 
 0161 227 3758\nEmail: powerhouselibrary@manchester.gov.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Powerhouse Library\, 140 Raby St\, Manchester M14 4SQ\, 
 United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Powerhouse Library
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160209T110000
DTEND;TZID=Europe/Dublin:20160209T130000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111331Z
UID:172i90f6f0itk25m9ng76do3vk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Computer club and other activities based in the Powerhouse Libr
 ary\nContact: 0161 227 3758\nEmail: powerhouselibrary@manchester.gov.uk\n\n
 Library general opening times:\nMonday: 11am-2pm\; 3-7pm\nTuesday: 11am-2pm
 \; 3-7pm\nWednesday: 11am-2pm\; 3-7pm\nThursday: 11am -2pm\; 3-7pm\nFriday:
  closed\nSaturday: 12-5pm\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Millennium Powerhouse\, 140 Raby St\, Manchester M14 4SL
 \, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Power rangers
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160404T093000Z
DTEND:20160404T120000Z
DTSTAMP:20180704T111331Z
UID:svbh3dhsvcn1drr56flocpnuio@google.com
CREATED:20170908T132839Z
DESCRIPTION:Manchester Children’s Book Festival FREE Trailblazer Event\n\nJ
 oin us on Monday 4th April for a ‘Poetry Together’ event.\n\n‘Poetry Togeth
 er’ is a brand new competition inviting children and young people to pair u
 p with a parent\, grandparent\, carer\, older sibling or friend\, to share 
 their ideas and create brand new poetry. \n\nWhat’s On?\nOn the day\, you w
 ill have the opportunity to enjoy performances from local poets and take pa
 rt in a range of creative workshops aimed at sparking your own inner poet! 
 \nThese will include sessions led by our talented EdLab students who will h
 elp you explore poetic responses to the things that affect you. You will ha
 ve the chance to share some of your favourite non-English poetry\, and staf
 f from Manchester Children’s Book Festival will be on hand to deliver lots 
 of fun activities aimed at getting you writing together. You can also find 
 out more about this year’s programme of exciting events.\nThis is a FREE ev
 ent. No experience needed and all ages welcome! \n\nWhat is Poetry Together
 ?\nPoetry Together is a cross-generational competition aimed at bringing pe
 ople together to share ideas and create brand new poetry. It has been devel
 oped under the direction of Poet Laureate Carol Ann Duffy and is being deli
 vered by the Manchester Children’s Book Festival at Manchester Metropolitan
  University in collaboration with the  \nCo-operative. \n\nTo book Contact 
 Amy Barber:  \nEmail: engagement@mmu.ac.uk  \nTel: 0161 247 3393\n\nFor fur
 ther details visit: \nwww.mmu.ac.uk/birley/community-events 
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Birley Campus\, MMU\, 53 Bonsall Street\, M15 6G
 X
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Poetry Together! Intergenerational Event
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20160310T123000Z
DTEND:20160310T150000Z
DTSTAMP:20180704T111331Z
UID:j6v8ng4mepk89pt5fp1htsm6mg@google.com
CREATED:20170908T132839Z
DESCRIPTION:World Cafe\, with food.
LAST-MODIFIED:20170908T133001Z
LOCATION:
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Peace Foundation - Women's Event
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20170103T110000Z
DTEND:20170103T143000Z
DTSTAMP:20180704T111331Z
UID:lo11cnnrkpror6fpo0luss49bs@google.com
CREATED:20170908T132839Z
DESCRIPTION:Over 50's luncheon club runs on a Tuesday from 11.00 to 2.30pm.
 \n\nQuizzes\, bingo\, outings\, parish functions\, fund raising dances\, ch
 air aerobics and luncheon club.\n\nCosts: £2 for yearly membership and £3.0
 0 for lunch.\nAge Range: 50 +\nContact: Father Patrick Deegan\, 0161 226 17
 30\, ourladys@btinternet.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Our Lady's Church\, Raby Street\, Moss Side\, M16 7JQ
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Our Lady's Over 50s Luncheon
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160817T173000Z
DTEND:20160817T193000Z
DTSTAMP:20180704T111331Z
UID:v3eq0s4l0ht61a55k7vg2h94t0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Come and hear the pitches for funding in your area and have a s
 ay on what should be funded! The Community Soup events will take place at t
 he following times and venues and members of the public are invited to come
  along to help decide on what should be funded:\n\nSouth Central MCR: Hulme
 \, St Georges\, Shawgreen\, Loretto\,\nBentley\, Loxford\, Aquarius\, Monto
 n St\, Moss Side\, Whalley Range
LAST-MODIFIED:20170908T133001Z
LOCATION:Z-arts\, 335 Stretford Road\, Hulme\, Manchester M15 5ZA
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:ONE Manchester: Community Soup
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20160820T110000Z
DTEND:20160820T140000Z
DTSTAMP:20180704T111331Z
UID:l2dtmp7nof852u4b44kf75qj9s@google.com
CREATED:20170908T132839Z
DESCRIPTION:Event to celebrate the four-week programme of sporting activity
  which has included over 100 free events for all ages\n\nThis will take pla
 ce at the Brooks Building on Saturday 20th August and will be a celebration
  of the summer of sport for all that have been involved. It will feature an
  athletics track\, street bmx and entertainment. Check back for further upd
 ates. \n\nMore Event details: http://www2.mmu.ac.uk/birley/community-events
 /olympic-summer-of-sport/\nOr contact Amy Barber at MMU on engagement@mmu.a
 c.uk or phone 0161 247 3393.  
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building (Birley)\, 53 Bonsall Street\, M15 6GX
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Olympics Summer Closing Event!
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20170513T110000Z
DTEND:20170513T150000Z
DTSTAMP:20180704T111331Z
UID:2897j0ae2m93hcj6c823kn7438@google.com
CREATED:20170908T132839Z
DESCRIPTION:A group of young people from the Moss Side Pride Fellowship are
  planning to deliver a youth-led food festival\, celebrating the diversity 
 of an often stigmatised and overlooked area of Manchester - Moss Side. The 
 girls aim to connect residents with city-central businesses and build the e
 nterprise skills of young people from the community. \nThough Moss Side is 
 just over a mile from the city centre\, it has not experienced the cultural
  and economic explosion of central Manchester: it still feels a long way fr
 om the ‘Northern Powerhouse’. Young people are refusing to accept that this
  is their destiny. \n\nThis youth-led event will allow a different\, positi
 ve story to be told about Moss Side. It will bring people from outside the 
 area (who may hold longstanding stereotypes about Moss Side) to meet commun
 ity members as equals. The festival will enable minority ethnic communities
  to come together and share skills/talents\, and demonstrate that Moss Side
  is a strong and proud community. By being led by young residents in partne
 rship with other community groups\, we will demonstrate that there is innov
 ation\, creativity and brilliance in the next generation.\n\n“In our commun
 ity we respect each other. I just hope we can change people’s perspectives 
 and make them want to come to Moss Side\, walk through it. I hope it change
 s what they think about it.” Lateefa\, aged 13 from Moss Side\n\nStart: 13t
 h May\, 2017 at 12:00pm\n\nContact RECLAIM for more:\nTel: 0161 234 2950 \n
 Email: info@reclaimproject.org.uk\n\nhttps://www.reclaim.org.uk/Event/moss-
 side-food-festival
LAST-MODIFIED:20170908T133001Z
LOCATION:Alexandra Park\, 180 Russell St\, Moss Side Manchester M16 7JL
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Moss Side Food Festival by RECLAIM 
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T173000
DTEND;TZID=Europe/Dublin:20160308T183000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111331Z
UID:opm2teom22fqpne2mb17fur2c8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:cllr.e.rowles@manchester.gov.uk 07852 306 957\ncllr.a.cox@manch
 ester.gov.uk 0161 226 3258\ncllr.s.ali@manchester.gov.uk 07960 514 188\n\nE
 very Tuesday 5.30pm to 6.30pm (Excluding the month of August)\nGreenheys Ad
 ult Education Centre\nGreat Western Street\nMoss Side\nMANCHESTER\nM14 4HZ
LAST-MODIFIED:20170908T133001Z
LOCATION:Greenheys Adult Learning Centre\, Upper Lloyd Street\, Manchester 
 Area\, Manchester M14 4\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Moss Side Councillors Surgery
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160815T120000
DTEND;TZID=Europe/London:20160815T130000
RRULE:FREQ=WEEKLY;BYDAY=MO
DTSTAMP:20180704T111331Z
UID:l0hu2aet9ts69haqbtpsisdge8@google.com
CREATED:20170908T132839Z
DESCRIPTION:The session costs £3. contact the church or drop in on the day 
 for more details \n0161 226 6531
LAST-MODIFIED:20170908T133001Z
LOCATION:Emmanuel Pentecostal Church\, Brennan Cl\, Manchester M15 6NN\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Mobility Class and tea club
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160920
DTEND;VALUE=DATE:20160921
DTSTAMP:20180704T111331Z
UID:2o283bfsugkngh3m4et5eioi18@google.com
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:MMU Welcome Week "Meet the Neighbours"
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160710
DTEND;VALUE=DATE:20160711
DTSTAMP:20180704T111331Z
UID:h56pf4ai304oq33gv1o24bmnlg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Contact Manchester and District Orienteering Club for more deta
 ils: http://www.mdoc.org.uk/ \n\ntwinpeak2016@mdoc.org.uk \n\nVenue\nSouthe
 rn and Central Manchester\n\nTravel\nPublic Transport: 2km from Piccadilly 
 to Assembly. Frequent bus services with walk of about 200m from nearest sto
 ps.\n\nAssembly\nManchester Metropolitan University\, MMU Birley Campus\, n
 ear A5103 Princess Road\, Hulme. Postcode M15 6GX. GR SJ836965.\n\nParking\
 nWithin 200m of Assembly.\n\nDogs\nDogs will not be welcome on the Campus. 
 Nearby public parking is available\n\nFacilities\nToilets\, showers\, locke
 rs\, snack bar. Traders (possibly)\n\nEntry\nEnter online via SI Entries - 
 open from April 14th. Enter by course letter\, A to G.\n\nSelect Edit entri
 es to amend your entry\, or Entry list to view current entries.\n\nAll pre-
 entered competitors will use SI Air Cards\, with contactless punching.\nFor
  those entering Day 2 only\, cards will be available for collection at Asse
 mbly at MMU\n\nClosing Date\nJune 26th. Possible late entry until July 3rd.
  Limited EOD available.\n\nFees\nStandard fee: Seniors £10\, Juniors and fu
 ll time students £5\nLate fee and EOD: Seniors £12\, Juniors and full time 
 students £5\n\nAn automatic discount will be applied through the SI Entries
  system for competitors who have their own SIAC.\n\nEOD Entry\nRegister fro
 m 10:00 to 11:30\, while maps and start slots available.\nA limited number 
 of SI Air Cards will be available for EOD competitors.\nEOD competitors wil
 l be able to use standard SI Cards for conventional punching if all availab
 le SI Air Cards have been issued.\n\nStarts\n10:30 to 12:30. Starts within 
 400m of Assembly.\n\nCourses\nStandard urban courses. Longest course will b
 e about 8Km.\n \nUKOL points\nYou only get UKOL points if you run the corre
 ct course for your age class.\n\nUK Urban League\nYou get points in the cat
 egory you have chosen to run\, as long as it is valid for your age class\n\
 nTwin Peak Competition\nPrizes for the winners of all age classes.\nTo be c
 ompetitive\, enter the same age class each day (e.g. a W50 will enter Cours
 e 6 on Saturday and C on Sunday)\, You can choose to run “up”.\nYou will no
 t be competitive if you choose to run “down”\, but you can\, of course\, do
  so.\n\nBoth times on Saturday and time on Sunday will be added together to
  give final Twin Peak placing.\n(For M/W 10 to 14\, add together the single
  time on Saturday and the time on Sunday) 
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks\, MMU Birley Bonsall Street
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Manchester & District Orienteering Club event
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160930T090000Z
DTEND:20160930T110000Z
DTSTAMP:20180704T111331Z
UID:hb02bl4b9u729c00jejmopemv8@google.com
CREATED:20170908T132839Z
DESCRIPTION:Join us to help raise money for Macmillan!
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, Moss Lane East M15 5DD
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Macmillan Coffee Morning
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160619T120000Z
DTEND:20160619T150000Z
DTSTAMP:20180704T111331Z
UID:hgusihru1oqcceot64llt3ldao@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The course Includes discussion\, practical remedy making\, hand
 outs and freebies\; the course will help you to assess your health and diet
  and to make positive changes and healthier food choices for you and your f
 amily. \nAll sessions assume no prior knowledge and are open to anyone who 
 is interested in improving their health choices and knowledge of traditiona
 l plant medicine and nutrition. \n\nThis course will be held on every third
  Sunday of the month\, June to October from 1-4pm. \n\nfor more Info contac
 t Jane Placca 07944 916196 themanchesterherbalist@yahoo.com \nFacebook: Liv
 ing Medicine Manchester 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Living Medicine- Self Care With Food & Herbs: Self Care
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160821T120000Z
DTEND:20160821T150000Z
DTSTAMP:20180704T111331Z
UID:5b711gari6f4ta74phatg9q6b0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The course Includes discussion\, practical remedy making\, hand
 outs and freebies\; the course will help you to assess your health and diet
  and to make positive changes and healthier food choices for you and your f
 amily. \nAll sessions assume no prior knowledge and are open to anyone who 
 is interested in improving their health choices and knowledge of traditiona
 l plant medicine and nutrition. \n\nThis course will be held on every third
  Sunday of the month\, June to October from 1-4pm. \n\nfor more Info contac
 t Jane Placca 07944 916196 themanchesterherbalist@yahoo.com \nFacebook: Liv
 ing Medicine Manchester 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Living Medicine - Self Care With Food & Herbs: Sleep\, Anxiety & Fa
 tigue
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160918T120000Z
DTEND:20160918T150000Z
DTSTAMP:20180704T111331Z
UID:ngd2fv2lnasrj41e7vg17nc6ts@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The course Includes discussion\, practical remedy making\, hand
 outs and freebies\; the course will help you to assess your health and diet
  and to make positive changes and healthier food choices for you and your f
 amily. \nAll sessions assume no prior knowledge and are open to anyone who 
 is interested in improving their health choices and knowledge of traditiona
 l plant medicine and nutrition. \n\nThis course will be held on every third
  Sunday of the month\, June to October from 1-4pm. \n\nfor more Info contac
 t Jane Placca 07944 916196 themanchesterherbalist@yahoo.com \nFacebook: Liv
 ing Medicine Manchester 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Living Medicine - Self Care With Food & Herbs: Skin & First Aid
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160717T120000Z
DTEND:20160717T150000Z
DTSTAMP:20180704T111331Z
UID:c829tkand8je0mjv4euthm3pqk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The course Includes discussion\, practical remedy making\, hand
 outs and freebies\; the course will help you to assess your health and diet
  and to make positive changes and healthier food choices for you and your f
 amily. \nAll sessions assume no prior knowledge and are open to anyone who 
 is interested in improving their health choices and knowledge of traditiona
 l plant medicine and nutrition. \n\nThis course will be held on every third
  Sunday of the month\, June to October from 1-4pm. \n\nfor more Info contac
 t Jane Placca 07944 916196 themanchesterherbalist@yahoo.com \nFacebook: Liv
 ing Medicine Manchester 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Living Medicine - Self Care With Food & Herbs: Digestion Discomfort
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20161016T120000Z
DTEND:20161016T150000Z
DTSTAMP:20180704T111331Z
UID:h29b18095v4c463gok5kphmin4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:The course Includes discussion\, practical remedy making\, hand
 outs and freebies\; the course will help you to assess your health and diet
  and to make positive changes and healthier food choices for you and your f
 amily. \nAll sessions assume no prior knowledge and are open to anyone who 
 is interested in improving their health choices and knowledge of traditiona
 l plant medicine and nutrition. \n\nThis course will be held on every third
  Sunday of the month\, June to October from 1-4pm. \n\nfor more Info contac
 t Jane Placca 07944 916196 themanchesterherbalist@yahoo.com \nFacebook: Liv
 ing Medicine Manchester 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Living Medicine - Self Care With Food & Herbs: Coughs\, Colds & All
 ergies
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20170518T163000Z
DTEND:20170518T183000Z
DTSTAMP:20180704T111331Z
UID:btta3tv6vhh6r22esst3j752v0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Caring for someone who is living with dementia?\nHelp us make t
 his a more dementia-friendly place to live. \nShare your experiences\, ques
 tions and ideas on what can be done.\n\nCome along on \nMONDAY 15th MAY\, 3
 .15-5pm OR THURSDAY 18th MAY\, 5.30-7.30pm \nAt Kath Locke Centre\,  \n123 
 Moss Lane East\, M15 5DD Refreshments provided\n\nFor more information phon
 e: 07854 335890 or e-mail: sally@togetherdementiasupport.org\n\nWhen you li
 ve with dementia or care for someone who does\, it’s easy to stop getting o
 ut and about\, doing fun things\, meeting up and having a chat - for life t
 o get smaller.\nWith Big Life’s support\, Together Dementia Support and the
  Hulme & Moss Side Age Friendly Partnership we want to do something about i
 t.\n\nBy sharing experiences\, questions and ideas\, together we can start 
 to make the place we live more dementia-friendly – helping people get out m
 ore\, enjoy life more\, support families and communities.\n\nSo join us at 
 the Kath Locke Centre and turn small changes into a big difference!\nFor mo
 re information phone: 07854 335890 or \ne-mail: sally@togetherdementiasuppo
 rt.org\nwww.togetherdementiasupport.org\nwww.agefriendlyhulmeandmossside.wo
 rdpress.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, Moss Lane East\, Manchester M15 5DD
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Let's talk... Dementia
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20170515T141500Z
DTEND:20170515T160000Z
DTSTAMP:20180704T111331Z
UID:32rut5uhegu1qtkf5le3e67hjs@google.com
CREATED:20170908T132839Z
DESCRIPTION:Caring for someone who is living with dementia?\nHelp us make t
 his a more dementia-friendly place to live. \nShare your experiences\, ques
 tions and ideas on what can be done.\n\nCome along on \nMONDAY 15th MAY\, 3
 .15-5pm OR THURSDAY 18th MAY\, 5.30-7.30pm \nAt Kath Locke Centre\,  \n123 
 Moss Lane East\, M15 5DD Refreshments provided\n\nFor more information phon
 e: 07854 335890 or e-mail: sally@togetherdementiasupport.org\n\nWhen you li
 ve with dementia or care for someone who does\, it’s easy to stop getting o
 ut and about\, doing fun things\, meeting up and having a chat - for life t
 o get smaller.\nWith Big Life’s support\, Together Dementia Support and the
  Hulme & Moss Side Age Friendly Partnership we want to do something about i
 t.\n\nBy sharing experiences\, questions and ideas\, together we can start 
 to make the place we live more dementia-friendly – helping people get out m
 ore\, enjoy life more\, support families and communities.\n\nSo join us at 
 the Kath Locke Centre and turn small changes into a big difference!\nFor mo
 re information phone: 07854 335890 or \ne-mail: sally@togetherdementiasuppo
 rt.org\nwww.togetherdementiasupport.org\nwww.agefriendlyhulmeandmossside.wo
 rdpress.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, Moss Lane East\, M15 5DD
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Let's talk... Dementia
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160309T100000
DTEND;TZID=Europe/Dublin:20160309T120000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:tprhp383sghvn470pcl8ergae8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:For more information please contact: 0161 8737335
LAST-MODIFIED:20170908T133001Z
LOCATION:Old Trafford Sports Barn\, Seymour Park\, Carver St\, Manchester M
 16 9PQ\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Keep Fit and Walking Football
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20170214T180000
DTEND;TZID=Europe/London:20170214T210000
RRULE:FREQ=WEEKLY;COUNT=6;BYDAY=TU
DTSTAMP:20180704T111331Z
UID:085f55bpp0c1m362ss0ms1vfoo@google.com
CREATED:20170908T132839Z
DESCRIPTION:Are you a current or former Hulme resident? Do you have stories
  to tell and an interest in poetry? The 'Hulme Sweet Hulme' project is look
 ing for residents of all ages to take part in a project celebrating life in
  Hulme! \n\nNo past experience of poetry is needed! The workshop will be le
 ad by award-winning poet\, Tony Walsh AKA 'Longfella'.\n\nDate 14 February 
 2017 \nTime 6pm - 9pm \n\nRunning for 6 weeks to book 07981 234 890 or emai
 l info@reelmcr.co.uk 
LAST-MODIFIED:20170908T133001Z
LOCATION:Brookes Building\, MMU\, 47 Bonsall St\,  Hulme\, M15 6DP
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Hulme Sweet Hulme Poetry Project
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20161202T160000Z
DTEND:20161202T163000Z
DTSTAMP:20180704T111331Z
UID:inknmuisie6r876mmrqgsk34hs@google.com
CREATED:20170908T132839Z
DESCRIPTION:Christmas Lights Switch On for all the family\n\nZarts will be 
 hosting four Bear Hunts exclusively free for M15 residents at 3pm\,3.40pm\,
  5pm and 5.40pm. Please call 0161 2326089 for booking. \n\nAfterwards meet 
 Father Xmas in the Zion from 4.30 - 6pm
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Park
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Hulme Park Christmas Lights Switch On
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160422T130000
DTEND;TZID=Europe/Dublin:20160422T170000
RRULE:FREQ=WEEKLY;BYDAY=MO,FR
DTSTAMP:20180704T111331Z
UID:v551f81seite6h1hsdn5k9i8j8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Hulme had the very first branch library of Manchester’s free li
 brary – which was itself the country’s first free library!\n\nAssistance Av
 ailable:\nMondays: 1–5pm\nTuesdays: 9am–1pm\nWednesdays: 1–8pm\nThursdays: 
 9am-1pm\nFridays: 1–5pm\nSaturdays: 9am-1pm & 2–5pm\nBank holidays we are c
 losed.\n\nThere is underground car parking\n\nThe library will be open the 
 same hours as the leisure centre and you will be able to:\nbrowse & borrow 
 a selection of popular books\;\nreturn & renew books\;\nlog on to internet-
 ready PCs\; and \ncollect reservations.\nContact: 0161 227 3739 or hulmelib
 rary@manchester.gov.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme Library
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160420T130000
DTEND;TZID=Europe/Dublin:20160420T200000
RRULE:FREQ=WEEKLY;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:uvj7ciu79208kssph3rfap6qv4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Hulme had the very first branch library of Manchester’s free li
 brary – which was itself the country’s first free library!\n\nAssistance Av
 ailable:\nMondays: 1–5pm\nTuesdays: 9am–1pm\nWednesdays: 1–8pm\nThursdays: 
 9am-1pm\nFridays: 1–5pm\nSaturdays: 9am-1pm & 2–5pm\nBank holidays we are c
 losed.\n\nThere is underground car parking\n\nThe library will be open the 
 same hours as the leisure centre and you will be able to:\nbrowse & borrow 
 a selection of popular books\;\nreturn & renew books\;\nlog on to internet-
 ready PCs\; and \ncollect reservations.\nContact: 0161 227 3739 or hulmelib
 rary@manchester.gov.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme Library
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160423T140000
DTEND;TZID=Europe/Dublin:20160423T170000
RRULE:FREQ=WEEKLY;BYDAY=SA
DTSTAMP:20180704T111331Z
UID:dful56j9cu09kdnofscgs7ffeg@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Hulme had the very first branch library of Manchester’s free li
 brary – which was itself the country’s first free library!\n\nAssistance Av
 ailable:\nMondays: 1–5pm\nTuesdays: 9am–1pm\nWednesdays: 1–8pm\nThursdays: 
 9am-1pm\nFridays: 1–5pm\nSaturdays: 9am-1pm & 2–5pm\nBank holidays we are c
 losed.\n\nThere is underground car parking\n\nThe library will be open the 
 same hours as the leisure centre and you will be able to:\nbrowse & borrow 
 a selection of popular books\;\nreturn & renew books\;\nlog on to internet-
 ready PCs\; and \ncollect reservations.\nContact: 0161 227 3739 or hulmelib
 rary@manchester.gov.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme Library
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160211T190000
DTEND;TZID=Europe/London:20160211T210000
RRULE:FREQ=MONTHLY;COUNT=1;INTERVAL=1;BYDAY=2TH
DTSTAMP:20180704T111331Z
UID:37orv3fgcb6h2p7bj8gsipcc6or20160211T190000@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:tel:01612261912\nhttp://www.z-arts.org/about-us/contact-us/
LAST-MODIFIED:20170908T133001Z
LOCATION:Z-arts\, 335 Stretford Rd\, Manchester M15 5ZA\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme History Group Meet up
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160211T190000
DTEND;TZID=Europe/Dublin:20160211T210000
RRULE:FREQ=MONTHLY;UNTIL=20160211T185959Z;INTERVAL=1;BYDAY=2TH
DTSTAMP:20180704T111331Z
UID:37orv3fgcb6h2p7bj8gsipcc6o@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:tel:01612261912\nhttp://www.z-arts.org/about-us/contact-us/
LAST-MODIFIED:20170908T133001Z
LOCATION:Z-arts\, 335 Stretford Rd\, Manchester M15 5ZA\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme History Group Meet up
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160307T180000
DTEND;TZID=Europe/Dublin:20160307T190000
RRULE:FREQ=WEEKLY;BYDAY=MO
DTSTAMP:20180704T111331Z
UID:k2hr9ugtjva43f8ik1i9vqcokk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:cllr.l.igbon@manchester.gov.uk 07908 759 042\ncllr.a.lone@manch
 ester.gov.uk 07947 383 514\ncllr.n.murphy@manchester.gov.uk 0161 234 3217 (
 Town Hall)\n\nEvery Monday from 6pm (except Bank Holidays and the month of 
 August) **new location from Monday 16th March 2015**\nBirley Building \nMan
 chester Metropolitan University \nBonsall Street  \nHulme \nMANCHESTER \nM1
 5 6GX
LAST-MODIFIED:20170908T133001Z
LOCATION:Birley Fields\, Bonsall St\, Manchester M15\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Hulme Councillors Surgery
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160121T110000Z
DTEND:20160121T130000Z
DTSTAMP:20180704T111331Z
UID:pesdbkf7iqs44t1f491u9ic47s@google.com
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:Turing House\, Manchester\, Manchester M15 5RL\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Hulme & Moss Side Pre-Launch Event
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160225T113000Z
DTEND:20160225T140000Z
DTSTAMP:20180704T111331Z
UID:ska0op0avcpt7qq58onecrvki4@google.com
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Millennium Powerhouse\, 140 Raby St\, Manchester M14 4SL
 \, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Hulme & Moss Side Locality Launch Event
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160911T140000Z
DTEND:20160911T180000Z
DTSTAMP:20180704T111331Z
UID:vils6rpd0d1ea9m1ah9dj8ro08@google.com
CREATED:20170908T132839Z
DESCRIPTION:We invite you to join us in Honouring The Elders at our event o
 n Sunday 11th September 2016 at 3pm–7pm\, WISSC\, Westwood Street\, Moss Si
 de.  \n\nWe had the privilege to capture some of The Elders Archives\, a se
 ries of interviews with Tony Morris from ITV’s Granada Reports and various 
 elders of our community\, including Roy Walters\, Julie Asumu\, Douggie Law
 ton\, Basil Gumbs and Linford Wedderburn.  We were also able to film Father
  Weekes and Pa David before they passed on to the higher abode and this eve
 nt will be held in their honour and memory.  \n\nWe will be showing some of
  The Elders Archives and we will be hearing from guest speakers\, young and
  elder\, including Roy Walters\, Tony Morris\, Makisa Gilkes and Akeim Mund
 ell.  There will be entertainment from The Exhibit Band\, Trevor Roots and 
 the young dance group Jet Black.  Food will be provided by The Drop. \n\nEv
 eryone is welcome!  Please join us in honouring the elders.  
LAST-MODIFIED:20170908T133001Z
LOCATION:West Indian Sports & Social Club\, Westwood Street\, Moss Side
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Honouring The Elders
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160630T083000Z
DTEND:20160630T150000Z
DTSTAMP:20180704T111331Z
UID:qf5fc9dg568av72idmsde44ki0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Thursday 30th June 2016 9.30 - 4.00pm\nHome Business Workshop\n
 Venue: St Wilfred's Enterprise Centre\n(FirmStart) Royce Road Hulme M15 4BJ
 \n\nFor further details contact: Richard at ABS (Amazin Business Solutions)
  on 07590425644 or 079271 43531\nemail: info@amazinbusinesssolutions.com\n
LAST-MODIFIED:20170908T133001Z
LOCATION:St Wilfred's Enterprose Centre
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Home Business Workshop
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160517
DTEND;VALUE=DATE:20160518
DTSTAMP:20180704T111331Z
UID:jd6k81ms9e591tca3c72nq3rdo@google.com
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:MMU Brooks
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Healthy Relationships
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160212T140000
DTEND;TZID=Europe/Dublin:20160212T160000
EXDATE;TZID=Europe/Dublin:20160219T140000
EXDATE;TZID=Europe/Dublin:20160325T140000
RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=FR
DTSTAMP:20180704T111331Z
UID:d5om4b985oat5i2st9oqthnsg8@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Enjoy a cup of tea and a chat\, and try your hand at a range of
  traditional skills including woodblock carving\, sculpture\, printing\, wa
 tercolour painting and many others. Each month\, an artist will introduce a
  different technique. Every Friday our Clore Learning Studio is open as an 
 Age Friendly art studio\, in partnership with Age Friendly Manchester.\n\nc
 laire.cowell@manchester.ac.uk\n07776 170 688\n\nhttp://www.whitworth.manche
 ster.ac.uk/learn/adults/coursesandworkshops/handmade/ 
LAST-MODIFIED:20170908T133001Z
LOCATION:Whitworth Art Gallery\, The University of Manchester\, Oxford Rd\,
  Manchester\, Lancashire M15 6ER\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Handmade
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20170211T133000Z
DTEND:20170211T170000Z
DTSTAMP:20180704T111331Z
UID:d5d2h1evu12mp55qj9cmv56pl4@google.com
CREATED:20170908T132839Z
DESCRIPTION:Official Opening of the Greater Manchester Law Centre.\nFightin
 g Together for free access to justice.\n\nA Public Celebration with food\, 
 entertainments and activities for children.\n\nwith: Holy Name RC Primary S
 chool Steel Band\nSpoken Word Artists\nDJ Kemoy Walker\n\nFree Event\nPhone
 : 0161 769 2244 \nEmail: reception@gmlaw.org.uk\n\nReg Charity no.: 1170317
 \nReg Company no.: 09698401
LAST-MODIFIED:20170908T133001Z
LOCATION:West Indian Sports & Social Club\, Westwood Street\, Moss Side M14
  4SW
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Greater Manchester Law Centre Opening Party
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160312T100000
DTEND;TZID=Europe/Dublin:20160312T113000
RRULE:FREQ=WEEKLY;UNTIL=20160805T225959Z;BYDAY=SA
DTSTAMP:20180704T111331Z
UID:oimq0had02u6imhl59a7b9jqak@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Flex it @ 50\n10.15am – 11.15pm\n£3.00\nZion Centre\n339 Stretf
 ord Road\nManchester M15 4ZY\nTel: 0161 226 5412\nwww.zioncentre.co.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Zion Community Resource Centre\, 339 Stratford\, Manchester\, Manc
 hester M15 4ZY\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Flex it at 50
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160526T160000Z
DTEND:20160526T180000Z
DTSTAMP:20180704T111331Z
UID:m4hvmbbopmrod014pvf89fq9q4@google.com
CREATED:20170908T132839Z
DESCRIPTION:On Thursday 26th May\, from 5-7pm\, Manchester Met’s Environmen
 t Team are hosting a film screening of Just Eat It and a talk about food wa
 ste. \nJust Eat It is a documentary exploring the subject of food waste\, a
 n issue becoming increasingly important in the UK\, as well as in other nat
 ions. \nAfter the screening\, there will be a short talk by Haleh Moravej\,
  Nutritional Scientist & MetMUnch founder\, and discussion about the issues
  raised. \n\n"We all love food. As a society\, we devour countless cooking 
 shows\, culinary magazines and foodie blogs. So how could we possibly be th
 rowing nearly 50% of it in the trash?" - Just Eat It. \n\nAll are welcome t
 o attend. \nTo sign up\, please click here: https://justeatitmmu.eventbrite
 .co.uk \n
LAST-MODIFIED:20170908T133001Z
LOCATION: Lecture Theatre 6\, Manchester Met Business School 
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Film Screening: Just Eat It
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T140000
DTEND;TZID=Europe/Dublin:20160308T160000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111331Z
UID:fb7gf208q5gc4amcchn093a63c@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Different speakers each week.\nCall 0161 2241123
LAST-MODIFIED:20170908T133001Z
LOCATION:Holy Trinity Platt Church\, Platt Ln\, Manchester M14 5NF\, United
  Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Elderly Christian Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20170109T123000
DTEND;TZID=Europe/London:20170109T150000
RRULE:FREQ=WEEKLY;UNTIL=20170329T113000Z;BYDAY=MO,WE
DTSTAMP:20180704T111331Z
UID:oo0epa5bs4a8h3d3puh6le7jrk@google.com
CREATED:20170908T132839Z
DESCRIPTION:Who is this course for? Adults who want to build on some basic 
 computer knowledge and skills.\n\nEntry requirements: This course is for le
 arners who have some basic computer skills and want to learn more. You must
  be able to speak\, read\, and write English fairly confidently to attend.\
 n\nWhat will I learn on this course? You will use computers and the Interne
 t for everyday situations\, building on skills you already have.\n\nHow wil
 l I learn? Classes are twice a week for 12 weeks. There is a mixture of gro
 up work and individual work on the PC. You will be taught by a tutor who wi
 ll encourage you to learn independently and share your skills with other le
 arners.\n\nWhat qualifications will I gain? None\, but you will receive a M
 anchester Adult Education Service certificate.\n\nWhat could this course le
 ad to? Another ICT course\, or another type of course\, in MAES or another 
 provider.\n\nCan I join anytime? This course runs twice a year\, starting i
 n September and January. You can join after a course has started if there i
 s space.\n\nHow much will it cost? Many of our courses are free (all Englis
 h\, Maths\, Everyday English\, Family Learning\, volunteer programmes and b
 eginner computer courses. Other courses (such as Childcare\, Community Inte
 rpreting\, higher level computer courses\, Health and Social Care and ESOL)
  are free for unemployed people actively seeking work and cost from 3.00 pe
 r hour for those in work. However\, if you are on a low income\, we can hel
 p you with the fees\; contact one of our centres for information.\n\nFor mo
 re info Contact Greenheys:  0161 254 7314
LAST-MODIFIED:20170908T133001Z
LOCATION:Greenheys Adult Learning Centre\, Upper Lloyd Street
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Digital Skills for Beginners
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160919T123000
DTEND;TZID=Europe/London:20160919T150000
RRULE:FREQ=WEEKLY;UNTIL=20161214T123000Z;BYDAY=MO,WE
DTSTAMP:20180704T111331Z
UID:2fdhconi5ohroi3b3r1e59ovgk@google.com
CREATED:20170908T132839Z
DESCRIPTION:Who is this course for? Adults who want to build on some basic 
 computer knowledge and skills.\n\nEntry requirements This course is for lea
 rners who have some basic computer skills and want to learn more. You must 
 be able to speak\, read\, and write English fairly confidently to attend.\n
 \nWhat will I learn on this course? You will use computers and the Internet
  for everyday situations\, building on skills you already have.\n\nHow will
  I learn? Classes are twice a week for 12 weeks. There is a mixture of grou
 p work and individual work on the PC. You will be taught by a tutor who wil
 l encourage you to learn independently and share your skills with other lea
 rners.\n\nWhat qualifications will I gain? None\, but you will receive a Ma
 nchester Adult Education Service certificate.\n\nWhat could this course lea
 d to? Another ICT course\, or another type of course\, in MAES or another p
 rovider.\n\nCan I join anytime? The course runs twice a year in main centre
 s\, starting in September and January. You can join after a course has star
 ted if there is space.\n\nHow much will it cost? Many of our courses are fr
 ee (all English\, Maths\, Everyday English\, Family Learning\, volunteer pr
 ogrammes and beginner computer courses. Other courses (such as Childcare\, 
 Community Interpreting\, higher level computer courses\, Health and Social 
 Care and ESOL) are free for unemployed people actively seeking work and cos
 t from 3.00 per hour for those in work. However\, if you are on a low incom
 e\, we can help you with the fees\; contact one of our centres for informat
 ion.\n\nFor more info contact Greenheys:  0161 254 7314
LAST-MODIFIED:20170908T133001Z
LOCATION:Greenheys Adult Educations Centre\, Upper Lloyd Street
SEQUENCE:2
STATUS:CONFIRMED
SUMMARY:Digital Skills for Beginners
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160920T130000
DTEND;TZID=Europe/London:20160920T153000
RRULE:FREQ=WEEKLY;UNTIL=20170725T120000Z;BYDAY=TU
DTSTAMP:20180704T111331Z
UID:c0ld18mrdigeugmrb7in31d7bo@google.com
CREATED:20170908T132839Z
DESCRIPTION:Who is this course for? A drop-in workshop for adults to learn 
 how to use a range of digital devices. Suitable for beginners or those who 
 want some help improving their skills.\n\nEntry requirements: You do not ne
 ed to have any computer skills to attend this workshop but you must be able
  to speak\, read\, and write English fairly confidently.\n\nWhat will I lea
 rn on this course? You will learn how to use computers and digital devices 
 in your everyday life. You can learn how to get on-line\, send emails\, sho
 p\, pay bills\, book tickets\, use Facebook and Twitter\, store your photos
  and stay safe online.\n\nHow will I learn? You will learn how to use compu
 ters and digital devices in your everyday life. You can learn how to get on
 -line\, send emails\, shop\, pay bills\, book tickets\, use Facebook and Tw
 itter\, store your photos and stay safe online.\n\nWhat qualifications will
  I gain? None\, but you will receive a Manchester Adult Education Service c
 ertificate.\n\nWhat could this course lead to? Another ICT course\, or anot
 her type of course\, in MAES or another provider.\n\nCan I join anytime?  Y
 es.\n\nHow much will it cost? Many of our courses are free (all English\, M
 aths\, Everyday English\, Family Learning\, volunteer programmes and beginn
 er computer courses. Other courses (such as Childcare\, Community Interpret
 ing\, higher level computer courses\, Health and Social Care and ESOL) are 
 free for unemployed people actively seeking work and cost from 3.00 per hou
 r for those in work. However\, if you are on a low income\, we can help you
  with the fees\; contact one of our centres for information.\n\nCall Greenh
 eys for more info:  0161 254 7314
LAST-MODIFIED:20170908T133001Z
LOCATION:Greenheys Adult Educations Centre\, Upper Lloyd Street
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Digital Drop-In
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160208T140000
DTEND;TZID=Europe/London:20160208T160000
RRULE:FREQ=WEEKLY;COUNT=1;INTERVAL=1;BYDAY=MO
DTSTAMP:20180704T111331Z
UID:73pc4cvq0spsk29dvhaam83m04r20160208T140000@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Run by Together Dementia Support. For people living with dement
 ia\, their family\, carers and friends. Physical games (indoor bowling\, qu
 oits\, pool)\, table games such as dominoes\, cards\, draughts\, Jenga etc\
 , art and craft\, baking\, singing\, poetry reading\, quizzes\, reminiscenc
 e and many more.\nTel. 07854 335890\nwww.togetherdementiasupport.org\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Amani Centre Quinney Cresent Shoreham Close\, Manchester M16 7DG
SEQUENCE:2
STATUS:CONFIRMED
SUMMARY:Dementia Friends and Activities Group
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160608T130000
DTEND;TZID=Europe/London:20160608T140000
RRULE:FREQ=WEEKLY;COUNT=1;INTERVAL=1;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:4m4spa75ds0loljkd8lfig1eo0r20160608T120000@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia Friendly Swimming session for people affected by demen
 tia - either as a carer or someone living with the condition.\n\nThe sessio
 n is £1 for anyone under 60 or from outside of the City of Manchester bound
 aries – otherwise the session is free (thanks to the free swimming for Over
  60s offer and the centre’s Carers Scheme) - please bring proof of age and 
 address.\n\nThe group offer support with Transport in partnership with Manc
 hester Community Transport. So please do get in touch if you require transp
 ort in order to get to the session.\n\nContact Catriona Sudlow for queries/
  to arrange transport: 07583 134810
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Dementia Friendly Swimming
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160601T130000
DTEND;TZID=Europe/Dublin:20160601T140000
RRULE:FREQ=WEEKLY;UNTIL=20160608T115959Z;INTERVAL=1;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:4m4spa75ds0loljkd8lfig1eo0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Dementia Friendly Swimming session for people with dementia and
  carers.
LAST-MODIFIED:20170908T133001Z
LOCATION:Moss Side Leisure Centre\, Moss Ln E\, Moss Side\, Manchester M15 
 5NN\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Dementia Friendly Swimming
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160330T150000
DTEND;TZID=Europe/London:20160330T160000
RRULE:FREQ=WEEKLY;COUNT=8;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:hivrll9n03ktc9vrk22ker1fc8@google.com
CREATED:20170908T132839Z
DESCRIPTION:For families living with dementia\, starting for 8 weeks on the
  30th of March\, contact Rob Stapley 0161 9624788
LAST-MODIFIED:20170908T133001Z
LOCATION:Armani Centre Quinney Crescent\, Shoreham Close
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Dementia Friendly Communities
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160208T140000
DTEND;TZID=Europe/Dublin:20160208T160000
RRULE:FREQ=WEEKLY;UNTIL=20160208T135959Z;INTERVAL=1;BYDAY=MO
DTSTAMP:20180704T111331Z
UID:73pc4cvq0spsk29dvhaam83m04@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Run by Together Dementia Support. For people living with dement
 ia\, their family\, carers and friends. Physical games (indoor bowling\, qu
 oits\, pool)\, table games such as dominoes\, cards\, draughts\, Jenga etc\
 , art and craft\, baking\, singing\, poetry reading\, quizzes\, reminiscenc
 e and many more.\nTel. 07854 335890\nwww.togetherdementiasupport.org\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Amani Centre Quinney Cresent Shoreham Close\, Manchester M16 7DG
SEQUENCE:2
STATUS:CONFIRMED
SUMMARY:Dementia Cafe
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160515
DTEND;VALUE=DATE:20160522
DTSTAMP:20180704T111331Z
UID:9q961po2br8fjqgm6um164437g@google.com
CREATED:20170908T132839Z
DESCRIPTION:This year's Dementia Awareness Week\, 15 – 21 May\, will encour
 age people who are worried about dementia to confront their worries by addr
 essing dementia directly and coming to Alzheimer's Society for information 
 and support. Dementia can be scary and many people don't know where to turn
 \, but Alzheimer's Society is here for anyone affected and there are lots o
 f ways we can help. Because we believe that life doesn't end when dementia 
 begins.\n\nIf you\, or someone you know\, is worried about dementia\, Call 
 The Alzheimer's Society's National Dementia Helpline on 0300 222 1122 or em
 ail helpline@alzheimers.org.uk\n\nFor more infor on Dementia Awareness Week
  see here:\nhttps://www.alzheimers.org.uk/remembertheperson
LAST-MODIFIED:20170908T133001Z
LOCATION:
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Dementia Awareness Week
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20160704T130000Z
DTEND:20160704T150000Z
DTSTAMP:20180704T111331Z
UID:ov3rhu6qnntb69p8hrf78lhu50@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Are you over 50? \nDo you cycle in Hulme & Moss Side?\nOr do yo
 u want to cycle more? \nWe want to talk to you! \nWe would like to find out
  what it’s like to cycle in your neighbourhood\, and to talk about ways to 
 encourage more older people to cycle!\n\nCome along to the workshop to find
  out more:\nMonday 4th July\, 2pm - 4pm\nCity South HQ\, Turing House\nArch
 way 5\, Hulme\, Manchester M15 5RL\n\nRefresments wil be available\n\nEvery
 one welcome\, but please RSVP:\nEmily Crompton\, Manchester Age Friendly Ne
 ighbourhoods (MAFN)\n0161 247 5960 or 07973 973184\ne.crompton@mmu.ac.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:City South HQ\, Turing House\,Archway 5\, Hulme\, Manchester M15 5
 RL
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Cycling in an Age Friendly Hulme & Moss Side?
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20170505T093000Z
DTEND:20170505T140000Z
DTSTAMP:20180704T111331Z
UID:7o7cu0sjflonc479qt9lu6kgao@google.com
CREATED:20170908T132839Z
DESCRIPTION:Roving Chef Maggie Lister from the Charity Vegetarian for Life\
 , invites you for a day of cookery demos and information on easy organic ga
 rdening at Hulme Community Garden Centre. Maggie is a vegan chef who works 
 to help improve the lives of older vegetarians and vegans\, whilst showing 
 the public and catering staff how to create well balanced\, nutritional pla
 nt-based dishes.\n\n If you're struggling to find inspiration for healthy\,
  cheap but nutricious meals then book a place on one of two workshops held 
 on Friday 28th May and 5th April.\n\n The day will include a hands-on group
  cookery session where you'll learn basics and more of plant-based food\; C
 ooking for One\, Cooking on a Budget and Ethical Buys. You'll also have a c
 hance to create and maintain your own windowsill herb garden and a tour of 
 the centre.\n\n The sessions are open to those aged 50+\, and will run from
  10:30am-3pm with light refreshments and group meal prepared by Maggie and 
 attendees. The event is open to all cooking abilities\, so if you're intere
 sted please tell us if you have any dietary requirements or allergies. A su
 ggested donation of £4per person is requested to cover costs for the day. B
 OOKING ESSENTIAL email rachel@hulmegardencentre.org.uk to book.\n\nFacebook
  event: https://www.facebook.com/events/803976576423499/?acontext=%7B%22sou
 rce%22%3A5%2C%22page_id_source%22%3A349311125097538%2C%22action_history%22%
 3A[%7B%22surface%22%3A%22page%22%2C%22mechanism%22%3A%22main_list%22%2C%22e
 xtra_data%22%3A%22%7B%5C%22page_id%5C%22%3A349311125097538%2C%5C%22tour_id%
 5C%22%3Anull%7D%22%7D]%2C%22has_source%22%3Atrue%7D 
LAST-MODIFIED:20170908T133001Z
LOCATION:Hulme Community Garden Centre\, 28 Old Birley St\, St. George's\, 
 Manchester M15 5RG
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Cooking on a Budget and Ethical Buys
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160921T123000
DTEND;TZID=Europe/London:20160921T150000
RRULE:FREQ=WEEKLY;UNTIL=20161214T123000Z;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:q8ethns8juq2rmvpp8q8nlvjs0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Who is this course for? Adults with learning difficulties and d
 isabilities who want to learn or extend computer skills and develop persona
 l skills & confidence.\n\nEntry requirements You do not need any computer s
 kills to join this course. You must be able to understand and follow spoken
  instructions. You will be interviewed by a tutor to assess your learning a
 nd support needs before joining a class.\n\nWhat will I learn on this cours
 e? You will learn how to use a computer. At the same time you will improve 
 your communication skills and confidence.\n\nHow will I learn? Classes run 
 once a week and the course length varies. There is a mixture of group work 
 and individual work on the PC. You will be taught by a tutor who will encou
 rage you to learn independently and share your skills with other learners.\
 n\nWhat qualifications will I gain? None\, but you will receive a Mancheste
 r Adult Education Service certificate.\n\nWhat could this course lead to? A
 nother ICT course\, or another type of course\, in MAES or another provider
 .\n\nCan I join anytime? The course runs at least 3 times a year. You can j
 oin after a course has started if there is space.\n\nHow much will it cost?
  Many of our courses are free (all English\, Maths\, Everyday English\, Fam
 ily Learning\, volunteer programmes and beginner computer courses. Other co
 urses (such as Childcare\, Community Interpreting\, higher level computer c
 ourses\, Health and Social Care and ESOL) are free for unemployed people ac
 tively seeking work and cost from 3.00 per hour for those in work. However\
 , if you are on a low income\, we can help you with the fees\; contact one 
 of our centres for information.\n\nContact Greenheys for more info: 0161 25
 4 7314 
LAST-MODIFIED:20170908T133001Z
LOCATION:Greenheys Adult Learning Centre\, Upper Lloyd Street
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Computers and Personal Development for Adults with Learning Difficu
 lties and Disabilities
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20170704T110000Z
DTEND:20170704T130000Z
DTSTAMP:20180704T111331Z
UID:1497867020980@google.com
CREATED:20170908T132839Z
DESCRIPTION:Are you retired\, soon to retire  or do you know people who are
  retired?\n\nLINK Good neighbours is holding a free Community Lunch for ret
 irees from Rusholme\, Fallowfield and Moss Side.\n\nFind out about activiti
 es\, groups and trips\nSee what volunteering opportunities we have\nHelp gu
 ide our future work\n\nThere will also be a chance to meet and chat to othe
 r retirees over free lunch. There might even be cake!\n\nTuesday 4th July 1
 2-2pm\n\nPlease let us know you are coming: call 0161 225 1064 or email lin
 k@trinityhousecrc.co.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Trinity House\, Grove Close off Platt Lane\, M14 5AA
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Community Lunch for Retirees
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160726
DTEND;VALUE=DATE:20160727
DTSTAMP:20180704T111331Z
UID:tnu98on6c865jp309g4ir5spto@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:This Community Learning Festival consists of four days of works
 hops\, speakers and events to inspire and support many types of learning. I
 t will also provide a space to build connections between people\, and betwe
 en the University and our local community.\n\nTuesday: Theme - Politics and
  Democracy\n12 noon Drumming workshop and Spoken Word event led by Emeka\nE
 lendu and Joy Jikiemi\n1.00pm - 2.30pm Community Philosophy: Peaceful Citie
 s? Peaceful World?\nChildren and young people’s workshop led by Graeme Tiff
 any with\nHideaway\n1.00pm - 2.30pm People’s History of Hulme and Moss Side
 : All age walk with\nDominique Tessier\n2.45pm - 3.45pm Community Philosoph
 y: Peaceful Neighbourhoods? Peaceful\nWorld? All age workshop led by Graeme
  Tiffany\n2.45pm - 3.45pm People’s History walk: Children and young people’
 s walk with\nDominique Tessier\n4.00pm - 5.00pm Young people interview loca
 l Councillors (facilitated by Hideaway)\n5.00pm Public Lecture with Dr Patr
 ick Williams: The same as it ever was!\nThe Policing of ‘suspected’ communi
 ties: a focus on the continuities of\nStop and Search.\n6.00pm - 7.00pm Dru
 mming Workshop and Spoken Word performance\n\nTo keep up to date with the f
 estival please subscribe to our email list here.\nhttp://eepurl.com/bOjsCn\
 n\nThe festival will run from 26th-29th July\, to get involved in the plann
 ing of the event please email edlab@mmu.ac.uk letting us know how you or yo
 ur group would want to contribute.
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Birley\, Bonsall St\, Manchester M15
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Community Learning Festival
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160727
DTEND;VALUE=DATE:20160728
DTSTAMP:20180704T111331Z
UID:qnf08lj9b00flficarv8d3ruek@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:This Community Learning Festival consists of four days of works
 hops\, speakers and events to inspire and support many types of learning. I
 t will also provide a space to build connections between people\, and betwe
 en the University and our local community.\n\nWednesday: Theme - Care and C
 reativity\nAll afternoon Community Games Tepee and Parachute\n12 noon Hidde
 n Voices of Hulme - workshop performance\n1.00pm - 2.30pm Looking After Our
 selves? Discussion on sex and healthy relationships led\nby Jayne Mugglesto
 ne and Jayshree Henry (Age 14+)\n1.00pm - 4.00pm Women’s Comedy workshops r
 un by Natalie Diddams - Royal Exchange\n(Age 18+)\n1.00pm - 4.00pm Promotin
 g Positive Sexual Health: Focus on testicular cancer and young\nmen (Age 14
 +)\n1.00pm - 4.00pm Storytelling workshops:\n• Petrus Homelessness Project 
 and Digital Arts North West (all ages)\n• LGBT storytelling workshop led by
  The Proud Trust\n• Mobile Phone story telling led by Imran (young people f
 ocus)\n• Under 8’s and Under 12’s sessions led by Libraries\n1.00pm - 4.00p
 m Exploring Boys Work: Voluntary Youth Manchester Boys Work Network\n2.00pm
  - 5:00pm Showing of the films Paddington and Inside Out followed by discus
 sions\n3.00pm - 4.00pm All age workshop on the Citizen App with Kevin Jones
  and Caleb Jackson\n4.00pm - 5.00pm Hideaway films on harassment of Muslim 
 girls and women\, plus\ndiscussion (young people focus)\n4.00pm - 5.00pm Be
 ing young and being a part of the whole world: Workshop led by\nHebe\n5.00p
 m - 6.00pm Public Lecture with Gabrielle Ivinson: Poverty\, Community and\n
 Education\, lecture and discussioin\n6.00pm - 7.00pm Hidden Voices of Hulme
  performance\n\nTo keep up to date with the festival please subscribe to ou
 r email list here.\nhttp://eepurl.com/bOjsCn\n\nThe festival will run from 
 26th-29th July\, to get involved in the planning of the event please email 
 edlab@mmu.ac.uk letting us know how you or your group would want to contrib
 ute.
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Birley\, Bonsall St\, Manchester M15
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Community Learning Festival
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20170725
DTEND;VALUE=DATE:20170728
DTSTAMP:20180704T111331Z
UID:67dl5bes8trrq7buj0dknefrog@google.com
CREATED:20170908T132839Z
DESCRIPTION:MMU 3 day Community Learning Festival\n\nThemes include: Democr
 acy and Resistance\, Health and Wellbeing\, Creeativity and Sustainability.
 \n\nPlease contact Carol Packham if you would like to attend\, run a sessio
 n or just for more info: 0161 247 2134 or c.packham@mmu.ac.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks\, MMU Birley Campus\, Bonsall Street\, M15 6DP
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Community Learning Festival
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160728
DTEND;VALUE=DATE:20160729
DTSTAMP:20180704T111331Z
UID:1m6sqc6pd793fm81jpstg02qgk@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:This Community Learning Festival consists of four days of works
 hops\, speakers and events to inspire and support many types of learning. I
 t will also provide a space to build connections between people\, and betwe
 en the University and our local community.\n\nThursday: Theme - Environment
  and Sustainability\nAll afternoon Stalls and Bike Bonanza\n12.00pm - 1.30p
 m Tony Curry writing workshops: RAP on the theme of environment and\nsustai
 nability\n12.00pm - 1.30pm Hulme Community Garden Centre workshop: Pond dip
 ping\, herbs and\nmuch more\n2.00pm - 3.30pm Asset based working workshop: 
 sustainable community development\nled by Eve Davidson\n2.00pm - 3.30pm Ton
 y Curry writing workshops: RAP on the theme of environment and\nsustainabil
 ity\n2.00pm - 3.30pm Carbon literacy course introduction\n2.00pm - 3.30pm H
 ulme Community Garden Centre: permaculture\n2.00pm - 3.30pm Site tours: lea
 rn about the Birley Campus as a ‘green campus\n4.00pm - 5.00pm Geoff Bright
  Presentation: ‘The Lady’s not for Burning? May she Rust\nin Peace: Ghostly
  Presences and Social Hauntings from the Miner’s Strike\n1984-5 in South Yo
 rkshire.’\n4.00pm - 5.30pm Just eat it? (film)\n6.00pm - 7.00pm Public lect
 ure: ‘Tale of Two Cities’ talk - issues of sustainability in\nManchester\n6
 .00pm - 7.00pm Transport in Hulme: Talks and discussion with Transport for 
 Greater\nManchester\, Manchester City Council and Manchester Metropolitan\n
 University\n\nTo keep up to date with the festival please subscribe to our 
 email list here.\nhttp://eepurl.com/bOjsCn\n\nThe festival will run from 26
 th-29th July\, to get involved in the planning of the event please email ed
 lab@mmu.ac.uk letting us know how you or your group would want to contribut
 e.
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Birley\, Bonsall St\, Manchester M15
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Community Learning Festival
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160326T100000Z
DTEND:20160326T160000Z
DTSTAMP:20180704T111331Z
UID:ifeetj2bjl27070mucp9eljc5s@google.com
CREATED:20170908T132839Z
DESCRIPTION:Manchester Community Games Day \nSaturday 26th March at the Act
 ive Lifestyles Centre.\n\nCome along to our Age Friendly Hub to enjoy a fun
 filled day of activities for all to take part in. Activities on this day wi
 ll include: \n10am - 12noon\nBadminton\n\n12.30pm - 16.30pm\nEasy Circuits\
 nZumba Gold\nTea Dance & Games*\n\n*Light refreshment provided: Tea\, Coffe
 e\, Sandwiches and Cake.\n\nProvided by MCRGames Central - contact: \n Rich
 ard Harcourt\n 07510443727 \n r.harcourt@manchester.gov.uk\n\nActive Lifest
 yles Centre \nDenmark Road\nManchester\nM156FG\n\nFull details here: http:/
 /www.mcrgames.com/session/2FCBFD31-210A-495F-A6BF-A1FE5931E4F3/998 
LAST-MODIFIED:20170908T133001Z
LOCATION:Active Lifestyles Centre\, Denmark Rd\, Manchester M15 6FG\, Unite
 d Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Community Games Day - Age Friendly Hub
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160821T100000Z
DTEND:20160821T120000Z
DTSTAMP:20180704T111331Z
UID:8ddluv7l3po06urqonbf0hme4c@google.com
CREATED:20170908T132839Z
DESCRIPTION:Sign Up Today! Registration forms are available at Moss Side Le
 isure Centre.\nContact Mr D on 07939430500 or for more info email r.harcour
 t@manchester.gov.uk 
LAST-MODIFIED:20170908T133001Z
LOCATION:Alexandra Park\, Manchester M16\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Community Fun Run (5km)
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160314T100000
DTEND;TZID=Europe/Dublin:20160314T120000
RRULE:FREQ=WEEKLY;UNTIL=20160801T085959Z;BYDAY=MO,FR
DTSTAMP:20180704T111331Z
UID:d96plvr7dk2t3vf1svv5beasq0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Coffee Morning (Food\nvoucher service)\n10:00am  12:00pm\nZion 
 Centre\n339 Stretford Road\nManchester M15 4ZY\nTel: 0161 226 5412\nwww.zio
 ncentre.co.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Zion Community Resource Centre\, 339 Stretford Rd\, Manchester M15
  4ZY\, United Kingdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Coffee Morning
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160211T103000
DTEND;TZID=Europe/London:20160211T113000
RRULE:FREQ=WEEKLY;UNTIL=20160211T102959Z;BYDAY=TH
DTSTAMP:20180704T111331Z
UID:5cr001f3kjbhbuf0qvq9ak63mc@google.com
CREATED:20170908T132839Z
DESCRIPTION:
LAST-MODIFIED:20170908T133001Z
LOCATION:Amani Centre\, 
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Coffee Morning
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160210T140000
DTEND;TZID=Europe/Dublin:20160210T153000
RRULE:FREQ=MONTHLY;BYDAY=2WE
DTSTAMP:20180704T111331Z
UID:aoe2bdp07nh3kph77vqiouhj9c@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:‘Coffee\, Cake and Culture’ is designed to support those at ris
 k of social isolation by providing stimulating and creative learning opport
 unities through meaningful activities crafted for individuals with dementia
 . For people living with dementia\, their family\, carer's and friends.
LAST-MODIFIED:20170908T133001Z
LOCATION:Whitworth Art Gallery\, Oxford Rd\, Manchester\, Manchester M15 6E
 R\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Coffee Cake and Culture
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160630T140000
DTEND;TZID=Europe/London:20160630T160000
RRULE:FREQ=MONTHLY;COUNT=6;BYDAY=-1TH
DTSTAMP:20180704T111331Z
UID:cgg9mhh047lsqggd78llp4jac8@google.com
CREATED:20170908T132839Z
DESCRIPTION:We offer fully supported museum visits for people living with d
 ementia and their family member or carer. \n\nThis is a free session on the
  last Thursday of the month from 2pm - 4pm.\n\nFor further info plrase cont
 act Wendy Gallagher:\nwendy.gallagher@manchester.ac.uk or call 07920 595772
LAST-MODIFIED:20170908T133001Z
LOCATION:Whitworth Art Gallery\, Oxford Rd\, Manchester M15 6ER\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Coffee Cake & Culture
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160610T140000
DTEND;TZID=Europe/Dublin:20160610T160000
RRULE:FREQ=WEEKLY;UNTIL=20170203T135959Z;BYDAY=FR
DTSTAMP:20180704T111331Z
UID:kkc52m5afs9jsdpb9kgfsf5kc4@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Coffee and Computing sessions run to help local people get onli
 ne and understand how to use the internet. Sessions are open to people of a
 ll abilities\, whether you’ve used a computer before or not. If you know so
 meone who’s like to get online for the first time\, why not pass the messag
 e on. We have volunteers ready and willing to talk you through simple activ
 ities in basic computer use\, email and social networking. All sessions are
  free of charge and there is no need to book\, although the number of compu
 ters available is limited.\n\nIf you would like more information about thes
 e sessions please contact Brian or call 0161 225 1064 or check the website:
  http://www.trinityhousecrc.org.uk/ 
LAST-MODIFIED:20170908T133001Z
LOCATION:Trinity House Community Resource Centre\, Grove Close\, Manchester
  M14 5AA\, 
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Coffee and Computing
TRANSP:TRANSPARENT
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160215T120000
DTEND;TZID=Europe/London:20160215T130000
RRULE:FREQ=WEEKLY;UNTIL=20160509T110000Z;BYDAY=MO
DTSTAMP:20180704T111331Z
UID:9o4ds033al43jt3nvt4iups3f0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Contact Anne for more information:\nCall: 0161 226 8254\nEmail:
  anne389@btinternet.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Aqarius Centre\, 21 Eden Close\, M15 6AX
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Chair Assisted Exercise
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160813
DTEND;VALUE=DATE:20160815
DTSTAMP:20180704T111331Z
UID:h79fli6juqj386rqdn1roc73n8@google.com
CREATED:20170908T132839Z
DESCRIPTION:The Carnival takes place at Alexandra Park\, Moss Side.\nSaturd
 ay 13th August 12noon till 8pm.\nSunday 14th August 1pm till 8pm.\n\nThe Ca
 rnival Parade will be on Saturday at 12:30pm. (expects to return at 3:30pm.
 )\nThe J'ouvert Parade will take place on Sunday at 9am.\n\nManchester carn
 ival has brought Caribbean culture to the forefront annually for over 40 ye
 ars and is the north west’s largest celebration of Caribbean music and carn
 ival arts. The carnival is a vibrant celebration of Caribbean music\, dance
 \, theatre and costume.\n\nThe Caribbean Carnival of Manchester in 2016 wil
 l be a free event for everyone. The carnival will still be welcoming donati
 ons to help keep the carnival alive.\n\nSee here for more info: http://them
 anchestercarnival.com/
LAST-MODIFIED:20170908T133001Z
LOCATION:Alexandra Park\, Manchester M16\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Caribbean Carnival of Manchester
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160308T193000
DTEND;TZID=Europe/Dublin:20160308T213000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111331Z
UID:pusscdh821n8fq8jlatd6vnkt0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:Run by Together Dementia Support a group primarily for carers o
 f people with dementia\, contact: 0161 2859970
LAST-MODIFIED:20170908T133001Z
LOCATION:Chorlton Central Church\, Barlow Moor Rd\, Manchester M21 8BF\, Un
 ited Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Carers Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160419T140000
DTEND;TZID=Europe/London:20160419T160000
RRULE:FREQ=WEEKLY;COUNT=6;BYDAY=TU
DTSTAMP:20180704T111331Z
UID:4ggifho7fb6qu90khrahpckprs@google.com
CREATED:20170908T132839Z
DESCRIPTION:Are you interested in learning new life skills to help you age 
 better and make the most of your retirement years? Have you recently retire
 d and are finding the change in circumstances tricky? Is retirement less re
 warding than you would like it to be? Why not enrol on our FREE 6 week ment
 al wellbeing course? It’s open to anyone who’s retired (or who’s about to) 
 who’d like to improve their mood\, meet new people & share experiences\, im
 prove their wellbeing\, grow in confidence\, make positive future plans\, l
 earn to handle worries and fears\, and acquire new life skills. \n\nManches
 ter Mind's first two pilot courses start in April 2016. \n1. 19 April 2 - 4
 pm 2016 Kath Locke Centre\, 123 Moss Lane East\, Hulme\, M15 5DD \n\n2.20th
  April 10 – 12noon Northmoor Community Centre\, 95-97 Northmoor Rd\, Manche
 ster M12 5RT\n\nContact Ruth Rosselson on bahf@manchestermind.org or call R
 uth on 07527 127 786 for further information or to register.\n
LAST-MODIFIED:20170908T133001Z
LOCATION:Kath Locke Centre\, 123 Moss Ln E\, Manchester M15 5DD\, United Ki
 ngdom
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Building a Healthy Future in Retirement 
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160809T110000
DTEND;TZID=Europe/London:20160809T130000
RRULE:FREQ=WEEKLY;BYDAY=TU
DTSTAMP:20180704T111331Z
UID:mq3nq700t2ccrshpt1lprpnqbc@google.com
CREATED:20170908T132839Z
DESCRIPTION:Art class costs £4 for more information contact the church or d
 rop in on the day.\n0161 226 6531
LAST-MODIFIED:20170908T133001Z
LOCATION:Emmanuel Pentecostal Church\, Brennan Cl\, Manchester M15 6NN\, UK
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Art Class
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160209T110000
DTEND;TZID=Europe/London:20160209T130000
RRULE:FREQ=WEEKLY;UNTIL=20160524T100000Z;BYDAY=TU
DTSTAMP:20180704T111331Z
UID:4tnq09db23i8vgim0uf3vfqjo4@google.com
CREATED:20170908T132839Z
DESCRIPTION:Contact Anne for more information:\n0161 226 8254\nanne389@btin
 ternet.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Aqarius Centre\, 21 Eden Close\, M15 6AX
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Art Class
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160210T120000
DTEND;TZID=Europe/London:20160210T130000
RRULE:FREQ=WEEKLY;UNTIL=20160525T110000Z;BYDAY=WE
DTSTAMP:20180704T111331Z
UID:iacqc0jlgl5nppp9gpa2s6e6j4@google.com
CREATED:20170908T132839Z
DESCRIPTION:Contact Anne for more information:\nCall: 0161 226 8254\nEmail:
  anne389@btinternet.com
LAST-MODIFIED:20170908T133001Z
LOCATION:Aquarius
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Aquarius 50+ Allotment Group
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160729T100000Z
DTEND:20160729T140000Z
DTSTAMP:20180704T111331Z
UID:dokc27b6phcjnkko1ca4aekbvc@google.com
CREATED:20170908T132839Z
DESCRIPTION:Age Friendly Hulme & Moss Side are hosting a Big Day out at Bro
 oks to celebrate all things Age Friendly in Hulme & Moss Side.\n\nCome and 
 join us for this event - Everyone welcome!\n\n• Entertainments Room with fi
 lms of Hulme and Moss Side\n• Active Zone with taster sessions and dancing\
 n• Information Stalls from Age Friendly organisations\n• Quiet Room for som
 e calm\n• Refreshments\n\nWe will also give an update about the activities 
 carried out so far and members of the Age\nFriendly Hulme & Moss Side Partn
 ership and Board will be around on the day to talk with you about the proje
 ct.\n\nThe venue is fully accessible. If you fancy doing a fitness class pl
 ease bring comfy\nclothing and trainers as there will be taster sessions av
 ailable.\n\nFor more information please contactEmily Crompton\nEmail: e.cro
 mpton@mmu.ac.uk\nTel.: 07973 973 184  or   0161 247 5960\n\nIf you need hel
 p with transport to get to the venue please contact:\nMoira at Moira.Maher@
 mosscare.org.uk or call 0161 232 5662
LAST-MODIFIED:20170908T133001Z
LOCATION:Brooks Building\, Manchester Metropolitan University\, 53 Bonsall 
 Street\, M15 6GX
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:An Age Friendly Big Day Out!
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160810T163000Z
DTEND:20160810T173000Z
DTSTAMP:20180704T111331Z
UID:7ngh93s9g7t12csn23a037pi7o@google.com
CREATED:20170908T132839Z
DESCRIPTION:We would like to invite you to come and meet other members of t
 he community and discuss any ideas for the area. Please contact Anysie Kank
 indi on 0161 226 5045\n\nAlex Park Residents & Tenants Group\nFor further i
 nformation contact Lesley Brereton 0161 230 1076 or email lesley.brereton@e
 astlandshomes.co.uk
LAST-MODIFIED:20170908T133001Z
LOCATION:Will Griffiths Court\, Elwick Road\, Moss Side M16 7LN
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:Alex Park Residents Meeting
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/London:20160526T110000
DTEND;TZID=Europe/London:20160526T130000
RRULE:FREQ=WEEKLY;UNTIL=20170309T110000Z;BYDAY=TH
DTSTAMP:20180704T111331Z
UID:h49di6vhm0mda6noddhm3240q8@google.com
CREATED:20170908T132839Z
DESCRIPTION:Come and chat with members of the Age Friendly Hulme & Moss Sid
 e board and Manchester Age Friendly Neighbourhood team. 
LAST-MODIFIED:20170908T133001Z
LOCATION:Millennium Powerhouse Library
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Age Friendly Hulme & Moss Side Drop In
TRANSP:OPAQUE
END:VEVENT
BEGIN:VEVENT
DTSTART;VALUE=DATE:20160713
DTEND;VALUE=DATE:20160714
DTSTAMP:20180704T111331Z
UID:0r86qjcd190176gve9mp7sga8s@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:11am - 2pm\n\nContact Emily Crompton if you want to host a stal
 l\, attend or get involved\n0161 247 5960 / 07973973814
LAST-MODIFIED:20170908T133001Z
LOCATION:
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:AGE FRIENDLY COMMUNITY FORUM
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:TRUE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART;TZID=Europe/Dublin:20160304T140000
DTEND;TZID=Europe/Dublin:20160304T160000
RRULE:FREQ=WEEKLY;BYDAY=FR
DTSTAMP:20180704T111331Z
UID:f3gajlu0ckm4dqkmnskdg7cfn0@google.com
CLASS:PUBLIC
CREATED:20170908T132839Z
DESCRIPTION:People First activity session contact 0161 8737335
LAST-MODIFIED:20170908T133001Z
LOCATION:Hibiscus Court - Extra Care Retirement Apartments\, 16 Sedgeboroug
 h Rd\, Manchester M16 7HU\, United Kingdom
SEQUENCE:0
STATUS:CONFIRMED
SUMMARY:Activity Group
TRANSP:OPAQUE
X-MICROSOFT-CDO-ALLDAYEVENT:FALSE
X-MICROSOFT-DISALLOW-COUNTER:FALSE
END:VEVENT
BEGIN:VEVENT
DTSTART:20160820T080000Z
DTEND:20160820T160000Z
DTSTAMP:20180704T111331Z
UID:2jfsq0i7qtr4f75rbl2flidlro@google.com
CREATED:20170908T132839Z
DESCRIPTION:BOOKING ESSENTIAL\n\nExperience the beauty of Wales with the Af
 rican Caribbean Care Group\nSaturday\, 20th August 2016\nTime: 9am to 5pm\n
 \nBook today!\nClaremont Resource Centre\nRolls Crescent\, Hulme\, Manchest
 er M15 5FS\nTelephone: 0161 226 6334\nCost *Members £15\, non-members £20
LAST-MODIFIED:20170908T133001Z
LOCATION:Claremont Resource Centre\, Rolls Cres\, Manchester M15 5FS\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:ACCG - Llandudno Family Fun Day out!
TRANSP:TRANSPARENT
END:VEVENT
BEGIN:VEVENT
DTSTART:20170523T163000Z
DTEND:20170523T180000Z
DTSTAMP:20180704T111331Z
UID:suj13085u6b2mu84lu368koer0@google.com
CREATED:20170908T132839Z
DESCRIPTION:Address:\nTheatres A and B\n University Place\n Manchester\n\nC
 ontact\nJo Garsden : 0161-275-1298\nmicra@manchester.ac.uk\n
LAST-MODIFIED:20170908T133001Z
LOCATION:The University of Manchester\, Oxford Rd\, Manchester M13 9PL\, UK
SEQUENCE:1
STATUS:CONFIRMED
SUMMARY:2017 MICRA Annual Public Lecture – Ready for Ageing Now?
TRANSP:OPAQUE
END:VEVENT
END:VCALENDAR

      http_version:
    recorded_at: Wed, 04 Jul 2018 11:13:31 GMT
recorded_with: VCR 4.0.0
