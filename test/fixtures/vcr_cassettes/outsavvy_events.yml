---
http_interactions:
  - request:
      method: get
      uri: https://www.outsavvy.com/organiser/a-whole-orange
      body:
        encoding: US-ASCII
        string: ""
      headers:
        User-Agent:
          - Httparty
        Accept-Encoding:
          - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
        Accept:
          - "*/*"
    response:
      status:
        code: 200
        message: OK
      headers:
        Connection:
          - keep-alive
        Content-Length:
          - "107556"
        Cache-Control:
          - private
        Content-Type:
          - text/html; charset=utf-8
        Set-Cookie:
          - OutSavvySession=jz24vcovkh1ztyrgsv0cn1df; domain=outsavvy.com; path=/; secure;
            HttpOnly; SameSite=None
        X-Frame-Options:
          - SAMEORIGIN
        X-Content-Type-Options:
          - nosniff
        X-Xss-Protection:
          - 1; mode=block
        Accept-Ranges:
          - bytes
        Date:
          - Sun, 25 May 2025 20:52:39 GMT
        Via:
          - 1.1 varnish
        X-Served-By:
          - cache-lhr-egll1980088-LHR
        X-Cache:
          - MISS
        X-Cache-Hits:
          - "0"
        X-Timer:
          - S1748206360.856827,VS0,VE37
        Vary:
          - Accept-Encoding
        Strict-Transport-Security:
          - max-age=31557600
      body:
        encoding: ASCII-8BIT
        string: !binary |-
          
    recorded_at: Tue, 08 Nov 2022 00:00:00 GMT
recorded_with: VCR 6.1.0
