---
http_interactions:
  - request:
      method: get
      uri: https://www.outsavvy.com/organiser/treacles
      body:
        encoding: US-ASCII
        string: ""
      headers:
        User-Agent:
          - Httparty
        Accept-Encoding:
          - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
        Accept:
          - "*/*"
    response:
      status:
        code: 200
        message: OK
      headers:
        Connection:
          - keep-alive
        Content-Length:
          - "136073"
        Cache-Control:
          - private
        Content-Type:
          - text/html; charset=utf-8
        Set-Cookie:
          - OutSavvySession=nneecmrcjxbahrqtq4uwlo5r; domain=outsavvy.com; path=/; secure;
            HttpOnly; SameSite=None
        X-Frame-Options:
          - SAMEORIGIN
        X-Content-Type-Options:
          - nosniff
        X-Xss-Protection:
          - 1; mode=block
        Accept-Ranges:
          - bytes
        Date:
          - Mon, 26 May 2025 09:05:36 GMT
        Via:
          - 1.1 varnish
        X-Served-By:
          - cache-lon4244-LON
        X-Cache:
          - MISS
        X-Cache-Hits:
          - "0"
        X-Timer:
          - S1748250337.781782,VS0,VE67
        Vary:
          - Accept-Encoding
        Strict-Transport-Security:
          - max-age=31557600
      body:
        encoding: ASCII-8BIT
        string: !binary |-
          DQoNCjwhRE9DVFlQRSBodG1sPg0KPCEtLVtpZiBsdCBJRSA3XT4gCQkJCTxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiB4bWw6bGFuZz0iZW4iIGxhbmc9ImVuIiBjbGFzcz0iaWUgaWU2IGx0ZTkgbHRlOCBsdGU3ICI+CTwhW2VuZGlmXS0tPg0KPCEtLVtpZiBJRSA3XT4JCQkJCTxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiB4bWw6bGFuZz0iZW4iIGxhbmc9ImVuIiBjbGFzcz0iaWUgaWU3IGx0ZTkgbHRlOCBsdGU3ICI+CTwhW2VuZGlmXS0tPg0KPCEtLVtpZiBJRSA4XT4JCQkJCTxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiB4bWw6bGFuZz0iZW4iIGxhbmc9ImVuIiBjbGFzcz0iaWUgaWU4IGx0ZTkgbHRlOCAiPgkJPCFbZW5kaWZdLS0+DQo8IS0tW2lmIElFIDldPgkJCQkJPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiIHhtbDpsYW5nPSJlbiIgbGFuZz0iZW4iIGNsYXNzPSJpZSBpZTkgbHRlOSAiPgkJCQk8IVtlbmRpZl0tLT4NCjwhLS1baWYgKGd0IElFIDkpfCEoSUUpXT48IS0tPg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiIHhtbDpsYW5nPSJlbiIgbGFuZz0iZW4iPg0KPCEtLTwhW2VuZGlmXS0tPg0KPGhlYWQgaWQ9IkhlYWQxIj48dGl0bGU+DQoJT3V0U2F2dnkgLSBUcmVhY2xlcyB0aWNrZXRzIGFuZCBldmVudHMuIEJvb2sgdGlja2V0cyBpbnN0YW50bHkgdmlhIHRoZSBPdXRTYXZ2eSBhcHAgb3Igd2Vic2l0ZSBmb3IgVHJlYWNsZXMNCjwvdGl0bGU+DQoNCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQogICAgICAgIC8qKiBJbml0aWFsaXplIHRoZSBkYXRhTGF5ZXIgdmFyaWFibGUgKi8NCiAgICAgICAgd2luZG93LmRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107DQoNCiAgICAgICAgLyoqIERlZmluZSBhIHNob3J0LWhhbmQgZnVuY3Rpb24gZm9yIHdyaXRpbmcgdG8gdGhlIGRhdGFMYXllciAqLw0KICAgICAgICBmdW5jdGlvbiBndGFnKCkgeyBkYXRhTGF5ZXIucHVzaChhcmd1bWVudHMpOyB9DQoNCiAgICAgICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5oYXNoID8gd2luZG93LmxvY2F0aW9uLmhhc2ggPT0gJyNjcy1zY2FuJyA6IGZhbHNlKSB7DQogICAgICAgICAgICAvKiogRG9uJ3QgdG91Y2g6IHNldCBhbGwgY29uc2VudCBzaWduYWxzIHRvIGdyYW50ZWQgZm9yIHRoZSBDb25zZW50IFN0dWRpbyBjb29raWUgc2Nhbm5lciAqLw0KICAgICAgICAgICAgZ3RhZygiY29uc2VudCIsICJkZWZhdWx0IiwgeyBhZF9zdG9yYWdlOiAiZ3JhbnRlZCIsIGFkX3VzZXJfZGF0YTogImdyYW50ZWQiLCBhZF9wZXJzb25hbGl6YXRpb246ICJncmFudGVkIiwgYW5hbHl0aWNzX3N0b3JhZ2U6ICJncmFudGVkIiwgZnVuY3Rpb25hbGl0eV9zdG9yYWdlOiAiZ3JhbnRlZCIsIHBlcnNvbmFsaXphdGlvbl9zdG9yYWdlOiAiZ3JhbnRlZCIsIHNlY3VyaXR5X3N0b3JhZ2U6ICJncmFudGVkIiwgd2FpdF9mb3JfdXBkYXRlOiA1MDAgfSk7DQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAvKiogDQogICAgICAgICAgICAgKiBTZXQgdGhlIGRlZmF1bHQgY29uc2VudCBzaWduYWxzDQogICAgICAgICAgICAgKiAoWW91IG1heSBlZGl0IHRoZXNlIGRlZmF1bHRzKQ0KICAgICAgICAgICAgICovDQogICAgICAgICAgICBndGFnKCJjb25zZW50IiwgImRlZmF1bHQiLCB7DQogICAgICAgICAgICAgICAgYWRfc3RvcmFnZTogImRlbmllZCIsDQogICAgICAgICAgICAgICAgYWRfdXNlcl9kYXRhOiAiZGVuaWVkIiwNCiAgICAgICAgICAgICAgICBhZF9wZXJzb25hbGl6YXRpb246ICJkZW5pZWQiLA0KICAgICAgICAgICAgICAgIGFuYWx5dGljc19zdG9yYWdlOiAiZGVuaWVkIiwNCiAgICAgICAgICAgICAgICBmdW5jdGlvbmFsaXR5X3N0b3JhZ2U6ICJncmFudGVkIiwNCiAgICAgICAgICAgICAgICBwZXJzb25hbGl6YXRpb25fc3RvcmFnZTogImdyYW50ZWQiLA0KICAgICAgICAgICAgICAgIHNlY3VyaXR5X3N0b3JhZ2U6ICJncmFudGVkIiwNCiAgICAgICAgICAgICAgICB3YWl0X2Zvcl91cGRhdGU6IDUwMCwNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9DQoNCiAgICAgICAgZ3RhZygic2V0IiwgImFkc19kYXRhX3JlZGFjdGlvbiIsIHRydWUpOw0KDQogICAgICAgIGd0YWcoInNldCIsICJkZXZlbG9wZXJfaWQuZFpUbG1aaiIsIHRydWUpOw0KICAgIDwvc2NyaXB0Pg0KDQogICAgPHNjcmlwdCBhc3luYyBzcmM9Imh0dHBzOi8vY29uc2VudC5zdHVkaW8vb3V0c2F2dnkuY29tL2Jhbm5lci5qcyI+PC9zY3JpcHQ+DQoNCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSIvY29tYnJlcy5heGQvc2l0ZUNzcy82NDg5N2I2YWVkNjQ0YzkyZmMyN2U1ZDliNGIxN2QxMzcyMjk3YjUyNjAxZDU1ZjVkZmFlN2VhNzBkNTQ0ZDRlZjQ4MjA5MmQ3NWE4YjI2NDBjZTg1M2MyOTNiMWIxMDA3ZmMxMDc4MjNhZjA1OWYyNzUwZDRlZGQ5Y2YxM2ZiYS8iLz48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvY29tYnJlcy5heGQvc2l0ZUpzLzRlYTI3ZDNkM2RmZGNlYTZhYTIyNTY2NTA5NjQ0OThhNWQ3MjBhY2I4OTZiMzhkMWJjYmMyYTgxZTU3NDcwOTExZGQ2MDA0MThjN2Y1NzU5MDFjZDdiMzc0MWMxYjNhNDMzMTI2Y2U1YWIwYTU2ZjEzNDUzOWNlY2I1MzMzYWRlLyI+PC9zY3JpcHQ+DQogICAgPG1ldGEgbmFtZT0iUHJpb3JpdHkiIGNvbnRlbnQ9IjEuMCIgLz4NCiAgICA8bWV0YSBuYW1lPSJDaGFuZ2VGcmVxdWVuY3kiIGNvbnRlbnQ9ImRhaWx5IiAvPg0KDQogICAgPG1ldGEgbmFtZT0iUk9CT1RTIiBjb250ZW50PSJJTkRFWCwgRk9MTE9XIiAvPg0KDQogICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJUcmVhY2xlcyBldmVudHMsIHRpY2tldHMsIGRldGFpbHMgYW5kIG1vcmUuIEJvb2sgZXZlbnRzIGluc3RhbnRseSB2aWEgdGhlIE91dFNhdnZ5IGFwcCBvciB3ZWJzaXRlIGZvciBUcmVhY2xlcyBhbmQgYnV5IFRyZWFjbGVzIHRpY2tldHMiIC8+DQogICAgPG1ldGEgcHJvcGVydHk9Im9nOnRpdGxlIiBjb250ZW50PSJUcmVhY2xlcyBCb29rIFRpY2tldHMgfCBUcmVhY2xlcyBCdXkgVGlja2V0cyB8IFRyZWFjbGVzIEV2ZW50cyIgLz4NCiAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOnRpdGxlIiBjb250ZW50PSJCb29rIGV2ZW50cyBpbnN0YW50bHkgdmlhIHRoZSBPdXRTYXZ2eSBhcHAgb3Igd2Vic2l0ZSBmb3IgVHJlYWNsZXMiIC8+DQoNCiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6bG9jYWxlIiBjb250ZW50PSJlbl9HQiIgLz4NCiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6bG9jYWxlOmFsdGVybmF0ZSIgY29udGVudD0iZW5fVVMiIC8+DQogICAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iT3V0U2F2dnkiIC8+DQogICAgPG1ldGEgcHJvcGVydHk9Im9nOnR5cGUiIGNvbnRlbnQ9IndlYnNpdGUiIC8+DQoNCiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dXJsIiBjb250ZW50PSJodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiAvPg0KICAgIDxtZXRhIHByb3BlcnR5PSJvZzppbWFnZTp0eXBlIiBjb250ZW50PSJpbWFnZS9wbmciIC8+DQogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlOndpZHRoIiBjb250ZW50PSI0MDAiIC8+DQogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlOmhlaWdodCIgY29udGVudD0iMjgzIiAvPg0KDQogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5IiAvPg0KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQE91dFNhdnZ5IiAvPg0KDQogICAgPG1ldGEgbmFtZT0idHdpdHRlcjphcHA6bmFtZTppcGhvbmUiIGNvbnRlbnQ9Ik91dFNhdnZ5IiAvPg0KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6YXBwOmlkOmlwaG9uZSIgY29udGVudD0iNzIyMzQ0Mjc2IiAvPg0KDQogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vbG9nby8yZjkzOGY2YS1lNTdlLTQ1NTctODRmOC0zOTI1NWY0YTA3OTUucG5nIiAvPg0KICAgIDxtZXRhIHByb3BlcnR5PSJ0d2l0dGVyOmltYWdlOnNyYyIgY29udGVudD0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL2xvZ28vMmY5MzhmNmEtZTU3ZS00NTU3LTg0ZjgtMzkyNTVmNGEwNzk1LnBuZyIgLz4NCg0KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9vcmdhbmlzZXIvdHJlYWNsZXMiIHJlbD0iY2Fub25pY2FsIiAvPg0KDQo8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSI1N3g1NyIgaHJlZj0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvZmF2aWNvbi9hcHBsZS1pY29uLTU3eDU3LnBuZyIgLz48bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSI2MHg2MCIgaHJlZj0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvZmF2aWNvbi9hcHBsZS1pY29uLTYweDYwLnBuZyIgLz48bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSI3Mng3MiIgaHJlZj0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvZmF2aWNvbi9hcHBsZS1pY29uLTcyeDcyLnBuZyIgLz48bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSI3Nng3NiIgaHJlZj0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvZmF2aWNvbi9hcHBsZS1pY29uLTc2eDc2LnBuZyIgLz48bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSIxMTR4MTE0IiBocmVmPSJodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9mYXZpY29uL2FwcGxlLWljb24tMTE0eDExNC5wbmciIC8+PGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTIweDEyMCIgaHJlZj0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvZmF2aWNvbi9hcHBsZS1pY29uLTEyMHgxMjAucG5nIiAvPjxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgc2l6ZXM9IjE0NHgxNDQiIGhyZWY9Imh0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS93ZWJzaXRlL2Zhdmljb24vYXBwbGUtaWNvbi0xNDR4MTQ0LnBuZyIgLz48bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSIxNTJ4MTUyIiBocmVmPSJodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9mYXZpY29uL2FwcGxlLWljb24tMTUyeDE1Mi5wbmciIC8+PGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTgweDE4MCIgaHJlZj0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvZmF2aWNvbi9hcHBsZS1pY29uLTE4MHgxODAucG5nIiAvPjxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvcG5nIiBzaXplcz0iMTkyeDE5MiIgaHJlZj0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvZmF2aWNvbi9hbmRyb2lkLWljb24tMTkyeDE5Mi5wbmciIC8+PGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9wbmciIHNpemVzPSIzMngzMiIgaHJlZj0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvZmF2aWNvbi9mYXZpY29uLTMyeDMyLnBuZyIgLz48bGluayByZWw9Imljb24iIHR5cGU9ImltYWdlL3BuZyIgc2l6ZXM9Ijk2eDk2IiBocmVmPSJodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9mYXZpY29uL2Zhdmljb24tOTZ4OTYucG5nIiAvPjxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvcG5nIiBzaXplcz0iMTZ4MTYiIGhyZWY9Imh0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS93ZWJzaXRlL2Zhdmljb24vZmF2aWNvbi0xNngxNi5wbmciIC8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSJodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9mYXZpY29uL2Zhdmljb24uaWNvIiAvPjxsaW5rIHJlbD0ibWFuaWZlc3QiIGhyZWY9Ii9tYW5pZmVzdC5qc29uIiAvPjxtZXRhIG5hbWU9ImFwcGxlLW1vYmlsZS13ZWItYXBwLXRpdGxlIiBjb250ZW50PSJPdXRTYXZ2eSIgLz48bWV0YSBuYW1lPSJhcHBsaWNhdGlvbi1uYW1lIiBjb250ZW50PSJPdXRTYXZ2eSIgLz48bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLVRpbGVDb2xvciIgY29udGVudD0iI2ZmZmZmZiIgLz48bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLVRpbGVJbWFnZSIgY29udGVudD0iL21zLWljb24tMTQ0eDE0NC5wbmciIC8+PG1ldGEgbmFtZT0idGhlbWUtY29sb3IiIGNvbnRlbnQ9IiNmZmZmZmYiIC8+PG1ldGEgbmFtZT0iZ29vZ2xlLXBsYXktYXBwIiBjb250ZW50PSJhcHAtaWQ9Y29tLm91dHNhdnZ5YXBwIiAvPjxtZXRhIG5hbWU9ImFwcGxlLWl0dW5lcy1hcHAiIGNvbnRlbnQ9ImFwcC1pZD03MjIzNDQyNzYiIC8+PG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiIC8+PG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiIC8+PG1ldGEgcHJvcGVydHk9ImZiOmFwcF9pZCIgY29udGVudD0iMTc5ODIxMzM1NTQzODIxIiAvPg0KDQogICAgPHNjcmlwdD4NCg0KICAgICAgICBmdW5jdGlvbiBzcG9uc29yZWRjbGljayhib29zdElkLCBldmVudElkLCBzb3VyY2UpIHsNCiAgICAgICAgICAgICQuYWpheCh7DQogICAgICAgICAgICAgICAgdHlwZTogIlBPU1QiLA0KICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCIsDQogICAgICAgICAgICAgICAgdXJsOiAiL0RlZmF1bHQuYXNweC9BZGRCb29zdENsaWNrIiwNCiAgICAgICAgICAgICAgICBkYXRhOiAneyB1c2VySWQ6ICJmN2U3NTAyNC02YzcxLTRjZmYtODU2Zi0yNDlmODc4MzBjYjMiLCBib29zdElkOiAiJyArIGJvb3N0SWQgKyAnIiwgZXZlbnRJZDogIicgKyBldmVudElkICsgJyIsIHNvdXJjZTogIicgKyBzb3VyY2UgKyAnIiB9JywNCiAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgiLA0KICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAianNvbiIsDQogICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHIpIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGcgPSAnc3VjY2Vzcyc7DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBmYWlsdXJlOiBmdW5jdGlvbiAocikgew0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChyKSB7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0NCg0KICAgICAgICBmdW5jdGlvbiBzcG9uc29yZWR2aWV3KGJvb3N0SWQsIHNvdXJjZSkgew0KICAgICAgICAgICAgJC5hamF4KHsNCiAgICAgICAgICAgICAgICB0eXBlOiAiUE9TVCIsDQogICAgICAgICAgICAgICAgY29udGVudFR5cGU6ICJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04IiwNCiAgICAgICAgICAgICAgICB1cmw6ICIvRGVmYXVsdC5hc3B4L0FkZEJvb3N0VmlldyIsDQogICAgICAgICAgICAgICAgZGF0YTogJ3sgdXNlcklkOiAiZjdlNzUwMjQtNmM3MS00Y2ZmLTg1NmYtMjQ5Zjg3ODMwY2IzIiwgYm9vc3RJZDogIicgKyBib29zdElkICsgJyIsIHNvdXJjZTogIicgKyBzb3VyY2UgKyAnIiB9JywNCiAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgiLA0KICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAianNvbiIsDQogICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHIpIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGcgPSAnc3VjY2Vzcyc7DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBmYWlsdXJlOiBmdW5jdGlvbiAocikgew0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChyKSB7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0NCg0KICAgICAgICBmdW5jdGlvbiBvcGVuRXZlbnRTZWFyY2goKSB7DQogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICAkKCcucmVzdWx0cy1saXN0JykuZW1wdHkoKTsNCg0KICAgICAgICAgICAgICAgICQuYWpheCh7DQogICAgICAgICAgICAgICAgICAgIHR5cGU6ICJHRVQiLA0KICAgICAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgiLA0KICAgICAgICAgICAgICAgICAgICB1cmw6ICIvcHJlZGljdGlvbnMvdjEvZ2V0cG9wdWxhciIsDQogICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAianNvbiIsDQogICAgICAgICAgICAgICAgICAgIGFzeW5jOiB0cnVlLA0KICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkgew0KDQogICAgICAgICAgICAgICAgICAgICAgICB2YXIgaDIgPSAiPGgyPlBvcHVsYXIgb24gT3V0U2F2dnk8L2gyPiI7DQogICAgICAgICAgICAgICAgICAgICAgICAkKCcucmVzdWx0cy1saXN0JykuYXBwZW5kKGgyKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgJC5lYWNoKGRhdGEsIGZ1bmN0aW9uIChpbmRleCwgaXRlbSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByb3dzID0gIjxhIGhyZWY9JyIgKyBpdGVtLlVybCArICInIHRhYmluZGV4PScwJyBjbGFzcz0nc2VhcmNoLW5hdi1pdGVtJz48ZGl2IGNsYXNzPSdzZWFyY2gtbmF2LWl0ZW0tY29udGFpbmVyJz48ZGl2IGNsYXNzPSdzZWFyY2gtbmF2LWl0ZW0taW1hZ2UtY29udGFpbmVyJz48ZmlndXJlIGNsYXNzPSdzZWFyY2gtbmF2LWl0ZW0taW1hZ2UnPjxpbWcgc3JjPSdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vdXRzYXZ2eS9pbWFnZS9mZXRjaC9jX2ZpbGwsaF82MCx3XzEyMy8iICsgaXRlbS5JbWFnZVVybCArICInIGFsdD0nIiArIGl0ZW0uTmFtZSArICInIGNsYXNzPSdzZWFyY2gtbmF2LWl0ZW0tdGhlaW1hZ2UnPjxkaXYgY2xhc3M9J2ZlYXR1cmUtcHJpY2UnPiIgKyBpdGVtLlByaWNlICsgIjwvZGl2PjwvZmlndXJlPjwvZGl2PjxkaXYgY2xhc3M9J3NlYXJjaC1uYXYtdGl0bGUtY29udGFpbmVyJz48cCBjbGFzcz0nc2VhcmNoLW5hdi10aXRsZSc+IiArIGl0ZW0uTmFtZSArICI8L3A+PHAgY2xhc3M9J3NlYXJjaC1uYXYtZGVzY3JpcHRpb24gc2VhcmNoLW5hdi1kZXNjcmlwdGlvbi1kYXRlJz4iICsgaXRlbS5EYXRlICsgIjwvcD48cCBjbGFzcz0nc2VhcmNoLW5hdi1kZXNjcmlwdGlvbic+IiArIGl0ZW0uTG9jYXRpb24gKyAiPC9wPjwvZGl2PjwvZGl2PjwvYT4iOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJy5yZXN1bHRzLWxpc3QnKS5hcHBlbmQocm93cyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgJCgiLnJlc3VsdHMtaG9sZGVyIikuc2hvdygpOw0KDQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAocmVzdWx0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvL2FsZXJ0KCJEdWUgdG8gdW5leHBlY3RlZCBlcnJvcnMgd2Ugd2VyZSB1bmFibGUgdG8gbG9hZCBkYXRhIik7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICQoIiNwcmVkaWNpdHZlc2VhcmNoIikuZm9jdXMoKTsNCiAgICAgICAgICAgIH0sIDUwMCk7DQogICAgICAgIH0NCg0KICAgIDwvc2NyaXB0Pg0KDQogICAgDQoNCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQoNCiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkgew0KDQogICAgICAgICAgICAkKCcjdGFiLWNvbnRhaW5lcicpLmVhc3l0YWJzKCk7DQoNCiAgICAgICAgICAgIGxldCBjaGVjayA9IGZhbHNlOw0KICAgICAgICAgICAgKGZ1bmN0aW9uIChhKSB7IGlmICgvKGFuZHJvaWR8YmJcZCt8bWVlZ28pLittb2JpbGV8YXZhbnRnb3xiYWRhXC98YmxhY2tiZXJyeXxibGF6ZXJ8Y29tcGFsfGVsYWluZXxmZW5uZWN8aGlwdG9wfGllbW9iaWxlfGlwKGhvbmV8b2QpfGlyaXN8a2luZGxlfGxnZSB8bWFlbW98bWlkcHxtbXB8bW9iaWxlLitmaXJlZm94fG5ldGZyb250fG9wZXJhIG0ob2J8aW4paXxwYWxtKCBvcyk/fHBob25lfHAoaXhpfHJlKVwvfHBsdWNrZXJ8cG9ja2V0fHBzcHxzZXJpZXMoNHw2KTB8c3ltYmlhbnx0cmVvfHVwXC4oYnJvd3NlcnxsaW5rKXx2b2RhZm9uZXx3YXB8d2luZG93cyBjZXx4ZGF8eGlpbm8vaS50ZXN0KGEpIHx8IC8xMjA3fDYzMTB8NjU5MHwzZ3NvfDR0aHB8NTBbMS02XWl8Nzcwc3w4MDJzfGEgd2F8YWJhY3xhYyhlcnxvb3xzXC0pfGFpKGtvfHJuKXxhbChhdnxjYXxjbyl8YW1vaXxhbihleHxueXx5dyl8YXB0dXxhcihjaHxnbyl8YXModGV8dXMpfGF0dHd8YXUoZGl8XC1tfHIgfHMgKXxhdmFufGJlKGNrfGxsfG5xKXxiaShsYnxyZCl8YmwoYWN8YXopfGJyKGV8dil3fGJ1bWJ8YndcLShufHUpfGM1NVwvfGNhcGl8Y2N3YXxjZG1cLXxjZWxsfGNodG18Y2xkY3xjbWRcLXxjbyhtcHxuZCl8Y3Jhd3xkYShpdHxsbHxuZyl8ZGJ0ZXxkY1wtc3xkZXZpfGRpY2F8ZG1vYnxkbyhjfHApb3xkcygxMnxcLWQpfGVsKDQ5fGFpKXxlbShsMnx1bCl8ZXIoaWN8azApfGVzbDh8ZXooWzQtN10wfG9zfHdhfHplKXxmZXRjfGZseShcLXxfKXxnMSB1fGc1NjB8Z2VuZXxnZlwtNXxnXC1tb3xnbyhcLnd8b2QpfGdyKGFkfHVuKXxoYWllfGhjaXR8aGRcLShtfHB8dCl8aGVpXC18aGkocHR8dGEpfGhwKCBpfGlwKXxoc1wtY3xodChjKFwtfCB8X3xhfGd8cHxzfHQpfHRwKXxodShhd3x0Yyl8aVwtKDIwfGdvfG1hKXxpMjMwfGlhYyggfFwtfFwvKXxpYnJvfGlkZWF8aWcwMXxpa29tfGltMWt8aW5ub3xpcGFxfGlyaXN8amEodHx2KWF8amJyb3xqZW11fGppZ3N8a2RkaXxrZWppfGtndCggfFwvKXxrbG9ufGtwdCB8a3djXC18a3lvKGN8ayl8bGUobm98eGkpfGxnKCBnfFwvKGt8bHx1KXw1MHw1NHxcLVthLXddKXxsaWJ3fGx5bnh8bTFcLXd8bTNnYXxtNTBcL3xtYSh0ZXx1aXx4byl8bWMoMDF8MjF8Y2EpfG1cLWNyfG1lKHJjfHJpKXxtaShvOHxvYXx0cyl8bW1lZnxtbygwMXwwMnxiaXxkZXxkb3x0KFwtfCB8b3x2KXx6eil8bXQoNTB8cDF8diApfG13YnB8bXl3YXxuMTBbMC0yXXxuMjBbMi0zXXxuMzAoMHwyKXxuNTAoMHwyfDUpfG43KDAoMHwxKXwxMCl8bmUoKGN8bSlcLXxvbnx0Znx3Znx3Z3x3dCl8bm9rKDZ8aSl8bnpwaHxvMmltfG9wKHRpfHd2KXxvcmFufG93ZzF8cDgwMHxwYW4oYXxkfHQpfHBkeGd8cGcoMTN8XC0oWzEtOF18YykpfHBoaWx8cGlyZXxwbChheXx1Yyl8cG5cLTJ8cG8oY2t8cnR8c2UpfHByb3h8cHNpb3xwdFwtZ3xxYVwtYXxxYygwN3wxMnwyMXwzMnw2MHxcLVsyLTddfGlcLSl8cXRla3xyMzgwfHI2MDB8cmFrc3xyaW05fHJvKHZlfHpvKXxzNTVcL3xzYShnZXxtYXxtbXxtc3xueXx2YSl8c2MoMDF8aFwtfG9vfHBcLSl8c2RrXC98c2UoYyhcLXwwfDEpfDQ3fG1jfG5kfHJpKXxzZ2hcLXxzaGFyfHNpZShcLXxtKXxza1wtMHxzbCg0NXxpZCl8c20oYWx8YXJ8YjN8aXR8dDUpfHNvKGZ0fG55KXxzcCgwMXxoXC18dlwtfHYgKXxzeSgwMXxtYil8dDIoMTh8NTApfHQ2KDAwfDEwfDE4KXx0YShndHxsayl8dGNsXC18dGRnXC18dGVsKGl8bSl8dGltXC18dFwtbW98dG8ocGx8c2gpfHRzKDcwfG1cLXxtM3xtNSl8dHhcLTl8dXAoXC5ifGcxfHNpKXx1dHN0fHY0MDB8djc1MHx2ZXJpfHZpKHJnfHRlKXx2ayg0MHw1WzAtM118XC12KXx2bTQwfHZvZGF8dnVsY3x2eCg1Mnw1M3w2MHw2MXw3MHw4MHw4MXw4M3w4NXw5OCl8dzNjKFwtfCApfHdlYmN8d2hpdHx3aShnIHxuY3xudyl8d21sYnx3b251fHg3MDB8eWFzXC18eW91cnx6ZXRvfHp0ZVwtL2kudGVzdChhLnN1YnN0cigwLCA0KSkpIGNoZWNrID0gdHJ1ZTsgfSkobmF2aWdhdG9yLnVzZXJBZ2VudCB8fCBuYXZpZ2F0b3IudmVuZG9yIHx8IHdpbmRvdy5vcGVyYSk7DQogICAgICAgICAgICBpZiAoY2hlY2spIHsNCiAgICAgICAgICAgICAgICAkKCIubW9iaWxlLXNoYXJlIikuc2hvdygpOw0KICAgICAgICAgICAgICAgICQoIi53ZWItc2hhcmUiKS5oaWRlKCk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICQoIi5tb2JpbGUtc2hhcmUiKS5oaWRlKCk7DQogICAgICAgICAgICAgICAgJCgiLndlYi1zaGFyZSIpLnNob3coKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICB9KTsNCg0KICAgIDwvc2NyaXB0Pg0KDQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL2NvbWJyZXMuYXhkL2V2ZW50SnMvZmMzNjAxMTQzYWNkOTc3NDM4YzFhNWY1MTA2MTBlMjdjMTNkNTJlZWZhODE4NWQ4NmVhYzMzZjVkNGEwNTUyNmU4Yjk0N2IzNmQzYmIzMTc4MTA5ZWY5OTJhZmNmYTllNzBlOTY1M2ZkNjI3Mjk5Y2I4OGYxNWQzYzgyNzY2MGEvIj48L3NjcmlwdD4NCjxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJUcmVhY2xlcyB0aWNrZXQgc2hvcCwgZXZlbnRzLCB0aWNrZXRzLCBkZXRhaWxzIGFuZCBtb3JlLiBEaXNjb3ZlciBldmVudHMgYnkgVHJlYWNsZXMgYW5kIGJvb2sgVHJlYWNsZXMgdGlja2V0cyBxdWlja2x5IGFuZCBzZWN1cmVseSIgLz48L2hlYWQ+DQo8Ym9keT4NCg0KICAgIA0KDQogICAgPGZvcm0gbWV0aG9kPSJwb3N0IiBhY3Rpb249Ii9vcmdhbmlzZXIvdHJlYWNsZXMiIGlkPSJGb3JtMSI+DQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJfX1ZJRVdTVEFURSIgaWQ9Il9fVklFV1NUQVRFIiB2YWx1ZT0iaUNNRS9qN1RvZUxpcTlna0FTbi8wSDIyd1lpVUtjdTFxNWMxTEtuRDZkWjltTDR3OXFid2Z6SU1oUTVZZ3JwVElNYUVTV3NiV09Pb1RDNVRkejdXUlhzNmZtZ3pWWTYwRHJsdDNmWDJQOS9SckVRaGNPeUhJbjdyY0pPQUYvVjkrdnRjMGxpeXdRSDdLZ3NUdUhKU21ZMDRtYkNzaCtqZ0E4R3NqMEJwRHVmTWNKdFdldG9ZWHNRZ2xDMmhxR1g3aE9NYVJvUVlROE1EUzJMR2dvSE9WZFNUcE9DRm44L0toeWR0U1YrVy9jdGF1UVlkRUdJWFJJdDgxTzFiVDQwMEpoK2hLZmovS1hvRmltNVhzNFB0bDdGQzcrTmQ3amRsTVVGYkluMC8vOExvSy9tbUZuSmZQVDVGUXBtQzdFdGQ2eDhQdnZDbk84emVHTlRHbzdwVzZKemJNbXZ1TW16SG94a3BqMmgzTzNwVWY4eUgwN21VZUZaSGl3MTJ5SnI2V3BseDlUcFJ3K0h6c2xQNXlWbHJrVkVmV0V0Q3ZDL1BiNjFHbWh3LzZQd0dDeWlHdU8zTHFPbDlvZldDMWp2Nno4SjRuQTNYQzZ2anpqN0RHSDM4RmtUWmROQW9US0hIcjgxbU9NQUZlTExMK0lUN0s0RzltRXAybit5cHViVWN4WWl3eEsyRzV3dlROdFJHdjBIV21XcnhJK0tJbnRzQVR2azQwVk81SWZUNWljWFNhazV4TDVYUUZSdGZSU2c5TjlOTmpya2s0V0lUMDZHMjQzd3ZQWkRpVVVseUhnd1dUa2JPdk43bFpudTk4WHJJblF4K1Z2cW13SzV1NUFyWEpYcFVSRTArUDRWa0dDWTZLcElDMG50b29PdlVuRmh6aVE5WldQZVR4NCtXSld0dHBEMG9hdnloWkowcHVZSG9XVDZ6Q3U1NkhHQzNCZnlYb09EOUc1RDhZbnFhYUdpU3ZsVU1nRTNic0FvZlEvV0NtZTROSGFOdlFrc09HNVpNelFYUW5wWFF4aWVSTWlqVWVJNlNJdU5DbXQyOHpUL2dEY2VWZHdqcy9zNkxQdjg2Y2M3V29LbWsvSjZjSnRJK2Z4b21HbGY4VndaS0d0SWtaRk5pd3p0OFZ0SmdLTmJRTzVhcldGS29aenJPSStVaFd3U3BUU2JNVktTb1ZlK0loMGgwbThrc2EvcmtSTUM4bWxQSi9WV1NDbzBONFg4aXkwZ1BCT1ovQVJFaWE5RmNiYzNxQTc5Mzl1bkpJamFCVnNJRUlBdlBaRmtyVTJRSFlnRVpYTkNrcGYyQ3R4SFJnREhhTHg4SnFHdVB2UEJYQkJsdjRwaFlQZHc3VVdjZ0tSSUhMVGlUUHQxYWRuTG1tQklFUWJ2bnhwa3l3VzNyaW9EZE1seEVRZk1XRWRkWkdJOGxKRnc4YWlLVXhzQnZLMXNVUFRtRXcxN3pUaGNCdVNqWnNYS1EycHhKeFptQ1F0Qm55Y09VSXAxWnBWQ0VrYU5ycllydnIyT0NYUFZOaUxMV3M4NEwyak1nWk9jTzcwNnk2cXBrN2dHWXg1NkkzRHkxUnFPdnZRaFA5SFhtM1hJaXpMNHJ6V0YrcnI3ZmhCTmI5UmN6WDhyU0NnZHAxVm9wUDZ3K2Q3ekpWT0JLY3BqSXhSUU1HQlFxVm5HdERqWUpONGdybzRLcWtoTk8rWmZhZ0F6aTV3U1Yzem51c2trLzlwNU5vZnp2ajNmeDkvbVN1SDFYRHZFNHF1czlHOG94TUdTb0NzWEhVWWZoSUVCU05lbHVrRk9GRFVqN3Bad0xtNDNrSFVQMVB2WXNsOCtpbXdpR3d5ZWJzeVovTDgvZDNkL2ZPdTRaOE16SGlpTXl0Y3NZdUtxY1JGMSsxTFpDajNxYUhYZUNmL05aSUNWeEViT3RERXRaamJNQ1gwRXQyaEoxYit5ZlVhaEVVWUoyTVhwMWVXVklZWXF1U0JwRFpHWGhLdk14MEY1UlVlTzRyNEJDL2xFYndndHkreTZTVXhjMFpWNWUxWTZVaEJvdWNOMjI4TEUyblE1RThNYUR5N2c4SHlycm9HV3RHYXdFNWlJMTA1U0JRUGsvM3FxaUdFd3VGMVdqZ2dTVzBtQkMzNHpTRXJ5TC9yUnFydlJ4RlNFQS9BakVWOXZvT3h3Tjl3QWZxM3hjTkNJV3hwbVo0d2Y2bENoOWJLNmZQMFlIZ1BTelVJck5CWEIvQlBHaU5lMkVVK05hbXhZTHNtK1FnRTRwSW93U0JwM1dUN20wYko4WDlYN0NxaDNEeXd5T2Z2QWgydjBnTXpvbSt0NjZrcVlJdjlXVnlQa2U5VkIvVzFCbm8yNERYOEd6U3BhaXhYL1ZtREVGYjVTNEpYZFp4TlljZFp1aXRCSEd2bGh0SmZLYTZRYzA2R09yY1BrejBzdzd1aDEraHp0Q2V0SnRERVplK3ppK2I3S20xWWMyakMzMElBclZaYmJPbk9Ha3NqQjdSdjc1N2NpSVQrOHdUbXVzdmdlVGg0SFVrUmhuaGJaK3BTNXBOa2lWYUFhN1BYNGJMekVGQmw4MTBrR25IMnFtb2pRTnpoOGVjU0xyMW8rSWZ6VGk1SXBJMUpIVktrZkhRckxobU5mWGl3TzNuMG5qdTVSbU5uQVB6c2preFJPc3dPZTIzM253Y1ZDSGszS0JaWmc4ZHRDTnpPdG9yQVBPbk5mT0FqRDFNRUE1bkVNS05PNW45Rm93QmtiTUtpazFRa3BxcGVvWW5kcHF5L3pzYlZTWWtYd2hNQ0VnSGFKUW5FQUFYL1VJMzBiZ0FkV3FkclhlRTF5S3Y1amo1dUZCMnh0STQrSGpNQklWK3BhN2kwWWRGdU15OHJNMHlIQkR0WkU0NUtlWjY2K1BUWFZSc0J1SG5ud0pSS0pGZU5hcG54WGhtVG50bjNIa29BNm45QmJwTDdWdjlZNkpWNzN4SEJIVmhQY1VGSlRXbmcrRWs0U2pkcTJvbm5JRHZ1TzJZamV6U2Y1MGtEMDllMDF4N2YzY2gxYjFkU3ZkUXlqbzhiOWtremFLdTdhc3FyTjQvZ0pGelNzV1hMTCtwZmF3em5RYVpzaFJ1SEpodnhMT2JEdFRndERJK293elh6eFU2cGZCcDVVeTRYM3hZZ3liMGpIa1RjdDJ0NmNPRHNISkkvWUVjUmJFSWlYY1hONzBCTGtKbHJnOVlERzRMekdNOTRvQmE1Z1k2ZzZCOFU0ODNTRXRjaG85QjhueEZSQlhnbkNPcWl4VVRqSHNHWU1wQnp6cG4yMEgvM2wyT2g0Q1hjL25zZjlXeVlyUHZlRFJGOEx4OXlWQUZDNi96dlU0UzRvL01xT1NXN0tVTVpvcFJUOGpJUFcrc2dlMmtxMEtOYVplcUdHUTJQdlF3eGM3ckNWUU9NNU94QXVHNFFHQUp3Zm80enRPSHF6blQ2NUxKM1YzcHBMMHk4dW10WHhvcksyMDBjN0plTHlsd3F3SG9vVE8rK2pEUDBzVFZETEtXOElGNVlqS3Z5bjNjZkpHL2pjMjZpK1QyVCtaNlVEdmNRUGk0UExUZS80UjlVbERjcHl3bjJRQ3hhSHU1ZFVWZ00vaDY2QURSRXcreEpsenBJS0JwQUVtV08xbVAyN2ZMN3pieDYzREE4Z21lckVKa2xyNTM2Rit6aWR3VW9ZTFVOMWkzV2ZEV2RrcGQ2MjlWSVBsWm4zL1p4L2JINXpQSDkrbjVmSTNMZlI5U0M0aldDL2lXVkpzcUROaUlsVytNMkRwWjJBdWRlNTlIQ0tYOFZEU2xmRmNPdnZMVjR3Q1lKSlZWVUh5WlpINGVYYTMxbTNhK0haYTRxcWtVNndieTJNUkxSZ3AwbWs1RlEwV0NjUFlOQWthRVRkVjVud2xaT0pnWE0xRE80bzJMeUJsV09wSVFiSzZZUk85VmtTUDZKdzZ0S242VDF6NDFYTUNmanRYNHE1dEQyZTJEYkFwRDZ4UTlaS3BzQzZqdXl5eEtVK0tRYlJvQ0d1dU5manRCV3RuU1pFNXBrdUMrMTFRRVhMdGtHZXVZMFVnQTlYeEl0TFVjWVUvMVF0RUpQcUV4YWl0SDZkbXpkT2h4a3FTSU56TWJRbkVuemZzcFpjZmIzcUYxNUg1ODl3SjlDYnlYVnpQY3NjSTVlekR0T1dOdnpTV29PNk4zMEszWE4wNnNPWlBuNVh5MmRFWHM2UGFZM3pnN21ISGlSQzlvVE9zcnVKRVlIZ2tCeWswYVF4MU5DWm9DSCtOUVNETTJwWTh0dEZmQUdVa2xiK0tzaUZlK0wwMjhpWFd1MmlTWXErRktxb1hHeE1NdHd2eFowRy85dENHODdqeFNTUU9oOWt1WnVjUHA5anY2UjdjUmZoYXJ0Wm5YQisxWW5zS2VkUERvakQ0ek5VWFoyN2hjMXZHd2xWc0wxU0tYZ3JubVpJSktXck1BRGd5QkZQQjV3UllKcGRCZzhZNW03cUUvYnliTUZHQ2tiT1RIaGpmMGl3UEU3ckJRM0NsWlZXS2VGZXlpdkgvYVFBQ3Y3R1hYYjhQNnI2UlZwNTFNZmQ3aXRGS1hwc1BZRHNZYkR5dCs2dDJZTTE0YnBqOS9VemF4ek5MVlV0M3prdUhBMWVMWXlKdGk1c1V2RDV3L0o3L0dRZGRlbnhTT0F5NUl5M1JMakozcUpjZ1M5ZGlGZkVkd1lFK3BtN1MwYkJMUkYzL0RsbVBQWGQ1YXE4Ukh6a20zdVptMDRFU2NENUtuVUUvWHYvOW4wNTAyT2p4QVdycWVRTnlOTU1McUg2VjFyWVRvNkdDQmJkTFJDYnQyVkpoZ3VMTy9FT1dlLy9zYW5mbldxRG51TWk0eCttWUwwY0ZsZVFlc0ptQUxHOEFXL1pXVnZIWERqd1V3d1VsRG1EVjRUSXFQbkY5TnRqSW5aang1R01uWE5iWEJqdzZTT2IvMUVEb2pMTVFkSm9lVVdaR2VjRXNNWFFJVEtBRXhpT0hWMlY4cFdFRmREWHMyS1hjdDNJSTNCK3dtL0Rhc1AzaWpZTEdIZCs5SmF3bXJNYktTQ1Zja0ZrTkQ1VG1Ib1R4T1VGdG9zbElBTzVJbGpXY2h2bUVMSkJodkhFYTF3NTVSdzcwMndJWlIyZ3k4M3JGek9mbWhralo1eDJ2RXY2K29BdWRmRE55Q2d1Rkw4Zlp4aGdETE0xZWJTSWRnSEFDY3JBUGtDTTZoKzlNemRuUFZQdE9rSElJL0lMMm5BSVplaVlGM2oyYjEvRWNZUldNRlY5aVFTUjJKRDdjSHcwV2t3Ylg2ZFdjTFRMbmZvQTVXZ25iaDB3NDR3eGpqR0hwRDNDeStiVTNDcE1GN0xhNUFQTkJpbWs1TDIvUVg0SHovQ3AxVmgvRXZDdEZVY3FZbTNNaVhtNUN4MVlmTkMyWG9MakxtRW9QRUZlekszS3E1elZrN1htenJpVEFJemhXY3JSWDByam9DSmx1NFhIekl6Q3dDUW0ydlVPQVlrNjJEeSsrN0Z0VWJudUlsMHZsdE1oSmFVZ0FXQUJzTkY3SXJzTGVWY2JlTmNyTzhSQkR3d1JjNjh0ZjA1YXg2VVpuZVRTTTFJRUlpK20rNEF6YVJKcUh2ZG1abTZ5VlpWRFhrTWtOQkZ1ZWJRMVZJbW4xRUhISHh0cm0wdHVtdWZzM2dSOWtsNm9kNjNZS3ZiVmFpZHlVdjFEU3lvUFhoelp2WE1iTjIrRzNiSVVuSHBYVFNWTUdVRlN4eEJLSWI1enp3L3pDQ2pJWEhRZzRnWFVacmlQN2ljR1JnZTEzbjFNdWNreGo4aEdQTW1RUit1eXJEZVBBZmVKc3FEaU9kcEdrdDdMK3V3YWRFMTZKUmdCUkl2MWdaWGptbFlSMUxBUE1oMEdYdXRQVUpnZjZGdWhKTFNWMXlHOFk0TmhSVjk0am1kaTJXUXliQjVkS3Fram4wRVZpTTNpdFg2Q1BzOEM1c085U2tZTDZxdTZqU0hIS00yYkMwbm1QekhVaUNiOGZ1eVpRTnJWVHlmUEczVDNDcmpJNVpvaUdwZmdlN3lNM2hGeEI3YnYwWklzK0VlVG5ueDBqeWxxdmRVR0pjRkkwazUrNy9wVzBsQmZ2Qkt0QXltOGU5bWRyNFhVaXFOdXR1eDRKcDdCU3ZaanFzVnpqNDFZUTkvemY4UXpQK2Q0eEZXVDNXUUwvNUtDaFQvbXhoa3Y3cGUzb0w5NStteEVvK2l5ZXJkWVBqaGE1bFRTWUVSM2t1YUlKS21TVVVCMFlhV25ZclZSSzZtVmNPWjlTZFZBMXh5U3lzZXVvM3NURWcrd0VPamdXWDFzNWttTjgwcHNvWGlhb05QVHlISE9MZ0hZUmU1MGxENUFIeWNUNVAzTUVuUEpULytibFhsRVViTVZlQ3ZBZlZUL0IyQ1dyU0R3bFZSS293Z3ljQ3VRR2NpVjFQSWVlb0tBN2xlT1FtUjVKU21aZCt2eVhwTnpFa3FpNHFZL1UvRk9NWDJnMHR3OElteDNRbGg2ZVFPUVkrbDV2UnhZZWhsS1d5TzBtTlY4eitkTHVsbWVyT2xEWnRGRGFiUEptZ1VvTHRIdVlvK1NkUjlqOWR6dkwrWXZnWUhWQTRVckthUnRSQk0yNXZMYkJsTVBJaFBTSERGZFFkYy93ZHZ2V0QvRmQwRlR1QnBmUEVNNEQyNjR0SFZhN1NxYXdzd2JPZGVKOGMvNlA3NlMwRk8zZU9RTFhmdkFyVm1XbGZ0TUM2NHFJdncvWkdsV1ZMR091SldUWkxLYWY4RWtmMWZRYmdwRzFHWmtCQ25DVGt6TzlCcG9wWEplcTlCblZGRDZoeno0YjR2dEZWMDdldTVSOUdCUXYxZG9KNkFaWEwrV09GMWtTaS9uR3JnbG0vdnNCSEltRGhxd21NY0cvYXNveEc3RkdUNDdId1ZxYi9jdXhvUE4vL3pjR1d1M2NxR2JUR3p3L2RUaVZsODA4TysyMUdlY0puRGU2SGpqZ2VrOFdRQWlDVTd4dlV2bHpoNy9nNUVoVUVid1BDTStFNTlCZGlPeHF5RTd5R3JJcVI0ODkySVAyRzRleC9mYTZ1Z3o5SzhsZlhTQldrdnduSm5ucnlYbFk1M3ZuZFRQU3FLL1VlZ0cwcUNyblpKK2lCNjczMFFDZ01MSEg1akxRU2pZSDd3VUZJSUtDWTdaNGtVNTUyeTRTenZCejhiNjdOaGtvMEQyNVNGL3FpRi9kZnBsdmd6UUxmODE3RjJtQVk4OVhReGRVUzA1V0NtQmZzcDFvSVl3V09KZ1ZiQS8yODRDOXQ0T2hDWlpzVEZFUjV1WFpPay9MQ3hrRFA1cFZLbnI5Z0xsZEtuVXdZVDFJcm9sNEp1VUozVHVRVExVMk9GeWJSQy9Ya3Z2bEhOVEFlOVBmZy9KU2ZDMXVKSVlXY1B2RTZHbGxZb1pzTDBLVEN2WFhBSEVjdWhtbk43aVFRMUtyWEUxWWJXZFIvTGMyZHlxYWtLYUpyMXVkeGlFUDF6Y2J0aldjR1lwVy9GMnZOM3A2ZmY3NUloSmlwNDV2dHUrWGxwR0JXWHlFRmd2UHFuVlM2L1hiUGE2aWZVc296QUEvUkoxTVFaSDdTQVRCMFhLVElWRkNsVjRPbUI3am9DVTVoS3Vtek9ZaFVUdnE4dXhuckpDQnMxTmZYKy9BWEowTU5uV2RZUWlQRmdBVTZrMTNaQlRueEFWb1JRQnZOekRXR2ZPNTRkTGF3MjR4dDZXMjJyN3FkcVExT1BQS1IzYVoyY1EwVFg3VGNnRWxSZGdocEFZK2Y1bmx0b0VwQ2l6d0lqbVR3M1JMdy9ZVDNuN05ockcrODNCQnZwQWdxSkxBcWFzRDBnZE43SFBUanBDaEN5dXgyY2J2UGx2aUxnaTAraHpUK1VTSThXTUREd2FRcmgrUFNUOGNZZkxPeHBNRDJjT0RPVUVxN3dHay96VzU2UkdBUzQydGREZnlEMWVTRk8xMktrRXkxY1JFcTVQQTZvSnllRjlNMW5UUTVZZ0piMjdwTUV3UU5qczBybEF5VlBnYUp5eGR2aDV3U3BOcFBLdGttTmxoK3NUMjNaR0FYaTFiaURsV1JpYXNXZWxka2cyV0F6QXROSFRVRWRLMmM4bi9PV2JSaHlIVFJiRjdDai9hRHREa0RkRFpjanZOSWdSdnRrSWF2UmU2MUdpa2VTQlVuc05yZytGdXkvZVNZejhvUGk5MDUyanBkZ2QyTlVnNzhLZ2N6WTBSRDRvWFgxdk5oSi9Qbi8vSHhRTTdOeGtQMWgzcnBPUXNzYXA0ZVZwTXZQcENDTTU1M21TZ1F4N1F6UkJySnI2ZktzVE01NmRSV3NpVzFHMGxsNGZLRjZxYmdxaWh3TlJ6OWRDUU9GemFEdG5GOFZONFZkaGdHVVVyU1QxcHhIVWw3TExadWFTT3pYcmxUSUpDQzVnRlR2SjllOVUwNkMwL3dJM1NUMFIvZ3dycTRsV0puMW1zTXdyMGNCOHFmYUZpYm9nV1NJa3hPRlJvTUtyUXlZMHcvNWt1NDN5eElDOGFFY1BXQ1F2UTRaZnpDeExZejU2SURweDRnSlc5VjIwczdCWGlzVzhGdVJWNVZRWTBIcEdnMzF3S0NhMERTZ1VxTzI2L2s5blBUQlkwZXN3MUJxZHlhMW1kTDRaOTNkM3J1OHo2RjJNVXZCeCt6Q09wSTZZdDhWdEZxeUovSUpLN0ZianF2M3lsVE9Kd1FiNExQNFhUMy9NNzA2amF1NmRENFhTMU9EbDU4c2d0cUZrajdZZnFZeWRCNUVNWkxSMXdVaUlhZHVCS1dhMWdDZFFkV3hHczIxM0F0ZFA0V2MxY3ZWYUhNK3l5TFBpSlhSWmZzTVdQV01Xa0p0RlRTUkpING5MeEt4cmF5aXI4RHRISXgxYjU5a01JVWxFaUpZRy9NaWRrWUJYanVDMmFjTzI5dFhNK0tyL3UvdU9qOVoydTgxM2VudFhiNDlhaGJRdEJRVEZhbnZ5YlRCbit1UlpXVFRCUDFOQnBJZm1OS1gxMG5YVGlldkhUTXdXNEhzaXJ1VkhiMDhXbWoxaDRtRWNKM2c5NVB4RDhPb04rbS95TG42L1JHT0phbXVVZFMvWnZ2SGNJMFVQaE1DNUxhQmYydHlSa3V0ZDN5VUVsMmE1bzV3S2tmNXpYcVBzT1lmR1IrNlVzL21zZGdJZDRaS3J3bE9vL3V6NC8wOWx0eVRGNUVYd29UeTNkYVV5SDQvT2xXRnJFdEpuSUM0ZENTSDJMSCt2OG5LWjcvK1EwMEx6cDJINWwwckc4MWJ2RUkxTVRDTVhkd2dVb3Fsa1dibU9NaFhlQkcyczJtMkNpSHBScTIxc1lsOHJnMkwxdm91STJIekxBQndUUmFWdzY1eEpXcHhwUThzZGhyNmRzYWxRbHdxbnluMnVvdWxRZm50ZzdBdURUU3pjY2QyeTBrMmw0cXlBbUhVNlJOUUxMNjBrZkMvMFRnRHZSQjg3Z2tRMVpoK0pjODRqeGZvTGsyaVZwRVArTVRPREkweUJaZmZaY2V3ZkNHM2dVWDFXQ1pTVlFIenVHUWwyd1dVcTVQalF3OGUyS2d0MXFzUk1XRHFrWVNPbDg2MnBmQ0krbldLc2V2VjFvY0JiRjFScyttL0pxRzZINHRGclE1TmhvRjA0RzhSckNST1EwTEpXRkJOUzRhY3gxWXJzT1NicGQvaEtMajlXVGczbDAvRVo4TGh0QVNyTTVEa3ZPS3V4L3duR1BYQm5CaFBieTJaVkJwZlZyWmxIT1AydnY1REJDcGRXOW1WUEl1NUtMaUIyejdtQ3N5RlNiTThkdWxqWmZFVFRGSjRnajIrYmhxdm1acEV0b09heDc1dGJCR1FYR08yVUZoMHpUOGhEc2RaSkJicWxheFcyd0RMMGhuL3JiZU1WaXJ2cmcxUXFGb0tCNUFNaGhzZjF2UWtORDUzbGhGbUhaWHdDM3lIUm9USm01OW5WbktxT2FyUmtWYmlCQzRZZnFFbW1kTnJ0U1BsRGlDcVZUYmhKVHRaMndraW9RcHExL3IvQXo3cDQrYU1ERkswUGpjRkgremhMRUloV0RIanBoa2hrMjN5Q0ZsL09vL3FuQjYxWWo5eWhsa25JcXJ5UmhDNmRuZ0JYVUNEWSsyY01sMnI4M2k1V3lzNzZjNnBRWUVIWks0N1pOMy9wVmtJdHlZcVlsVUJybXQybVp4bXQ0cnp2NUhKS2JkbmZsV1V4NS8rakJWWVQ3U3o1LzA0QlJEcmRPR1dqQjdHY0VUZ24ySE9TUjU3dkpPMndJYWZ1K09nUURid2cyQ1ZLTVRIWDY3ZGZrU0p6T1I0ZkZ3aXZiUFVMWWU4TGc0bjV0MTdacHhJUmtsOXBvaWpOaTRKbi9BV2ZjNEdNUFM1b2JrV20vMkhVTSs3dGJxTmk1d0Y1L1BtTkZQRy9IblFHTVUxcmNTUWtLTzRCa01JUjFWWHMvVUgxMjRGdVA5dHJPMXBMZFF0KytOdXB4dUZlSTl0bGRVYm9TeGNYeTRXRmZmb0JHcG0vTE4wTDNFM2hwOFNIdGR0Nzg2K084VlJ1OHV6UXlNWUJsQy9SOGQxZWxpbTBXRS9rU3RsaGUvUDFnOEp3TGFoN3IweG1jVWlmT3lBUXRTL1p2cW5VMnh2dlhXOWhUbDhqUEF1RExuVWVhWDY5ZEJDa1BFZ2hHdi82UFcyQlZPZEhQMkJ6NjZSUU5IM3FxQ3lkQ1IrdHV2SDZNWG9oN1FaTkphTDI4dE5GeUVvb1AyOVdDcG9OM3ovK05jYVZvV1Y3VXRPMjV4V2dETzhmZ2l4cEoySyt0ZmNzRjJIem1WekxrenhMQURFRVNHNmREVHRuOVlUU2IxejB4eDQ2cmFJU3QzWWJ3S201KzVtYm5vNUlxUzJ6dy9KR1YyMU03TjlaK2U2M2lEMmJCYUpDR0NjeFZkWWRRN0FvWmdvWS9KcWQxdVJIdEl4eHJlVWtRSmZXcCtqZ0laWExaSkFrZkVJVC9ubGFmeVZCZWNvdnRZR21Tcko3ajJYUTBYaWEzaEdINW9jdkFsejNEeXp5dmtsOE1qdFRpblJCTGczemJDdUFRWlJnRXplUmJ2VGhXdDJFWmMvR0gzZ2Jyb3AraG0welJjbEZHQnFRYlRhVGwxVThuOTVHcWdkVXVPZ2xVcGY5RHZuNGZ4VzN3VnVWa0g5RjdpWnBQUXR4WTRqb2dVS2c5VDdRMWpNU3MrWTVWbVRvS3dwaUt0K0NmMEEvaTNTNkk3RWFFTnhSTzYzbVNDdkZKQllxaFhjdmozczcwS0s5ZS9FUzducmFhSzkva1ZoU29vcWJqeGxMa1l4TzdJcG5PcktwTnIvQmRXZTZHbnZSclBNNUtjK1IyeHJsWWlBbnRsSDUxd3FBb3ZFQlNIR056Vk1LT2RSV083dmJtOXlJVlM4UUk0NGlmSlkyZ3BzUWFKMjgvbVl2RFJ5djBzZjF2MHZKbzlmcDFQb05tK05RSXRBNmFaYjhGOVJkNk94WkNkWllTYmFadXkxUy9VVS9uZUZBTVBkTTZwN3NzU080TTQ0aVpjcXoreHBMdmZTcklJOUFZaERvNUJIbnp1RWdOVDdmNmxxYlNVTWxpS1M4Mk5ySjd3Q3huaWwwV2NFbzhqR0FrcWJWLzFiYUk2bnpDN3poRGVmLzUxdDY2ajZFS3dJOTVjcERnT0JiRkRMMnBqS0E3VTJ1RmswbThSb3cvTjVvWVBnVW9ZWWZSTUlzdkUzbXI5Y3BtK1RlWVpqelRJWm0vUXhNMmF6K3N0RktMRVh1UGd0U1B6dFBJWjNOeGorZjdsWDFRU2twNVErY1ZvN1NHZjV2YkFuVmwzOG82NS9JeFduRjhCckIzQ0JPbnpOQi9kWFQxY2lWSm1IbTFZWWJFYmxmTTQza09Rem1iZHdMM21hTHFGMWtHRWp6Tm5vL3lwNW5YZVRoRzFKNC9PYUdCanNyRzZEWW40bVVZV2RpejF4N0JSZWIyQmlDN2l2L1RLRUJBTCt0V1UyV0dySytWUWdCR1dpQXVsWjN1RjFYN1hVZ1IzSnlKVjVJYUZzOE14QWtGSVJhWENVU3l6RHFtTG9DTUFlV09TQjFONTN0c3VlZXlkQUxZT1BEREJWVzdkYnVTa2hPaW5jcUFhTjhKUCtFSW1LS2FvdGtEcW91cnVPUDdTUDVrNHlyZXBncUQyM1JIejl1ZGtPTnBLMjFWSSt1a0dhcmVMaWxlYjZ3Vnl1MVhzSzlYYUtXUmVITXBCOTJ2NHJEazZMcHh2eDlnNVZXQ3BZdHdnKzVta041V1Y3Umk1bXJEUmJHNUVlUWFYdzhNTDJ4UlJib2tIRVdiS1ZZcmJnM2RxenQ2TVJ1UG9mSjRjc2NmV2IzSHZoN1ZkbDl4ZnJSNmg4dGFxZERETGt2M0M4UlJEdnpUMEtEM1F2d2dvMEJqL0pjMFB6U0VJZ21mK1hHSWY1d2tQdU84eFF0bmVoQ2RzeFBVR3dOOFZYRkk4WjlRTVdRPSIgLz4NCg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX19WSUVXU1RBVEVHRU5FUkFUT1IiIGlkPSJfX1ZJRVdTVEFURUdFTkVSQVRPUiIgdmFsdWU9IkUyQzgxMkNDIiAvPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX19FVkVOVFZBTElEQVRJT04iIGlkPSJfX0VWRU5UVkFMSURBVElPTiIgdmFsdWU9IkEvWGpHQmdoTFoxSEJxS2dDMTlHS2J2NEhkNnYvbThsQ3YydFFycUhFbnZOWmlwcVZsOERlTjhqRDhsSXN3blZhVlNqZHFzelFoT3lWQTdDTDhUVjhlOHB6NGZlYzZCRkpwL01talo1Q20vcXZsN2dvTklCSXVTRlFSTHVvR0Y2ZjVjUnV4YXZ6QlFFM1EyMVlHSmlqdFM2WENYL1NYUnE0QnRPNG9RcFNwRVlTbSt1eFh2QlFpaGVzUzVmd1ZLeXJQU1k5dz09IiAvPg0KICAgICAgICANCg0KICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9IiIgaWQ9Im1lbnVCdG4iIC8+DQoNCiAgICAgICAgPGxhYmVsIGZvcj0ibWVudUJ0biI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2FkaW5nbWVudSIgaWQ9ImxvYWRpbmdtZW51Ij4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2xhYmVsPg0KDQogICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iIiBpZD0ic2VhcmNoQnRuIiAvPg0KICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hCdG4iPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNobWVudSIgaWQ9InNlYXJjaG1lbnUiPg0KDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoLWJveC1zaXplIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoLWJveCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgbmFtZT0iY3RsMDAkcHJlZGljaXR2ZXNlYXJjaCIgdHlwZT0idGV4dCIgaWQ9InByZWRpY2l0dmVzZWFyY2giIGNsYXNzPSJwcmVkaWNpdHZlc2VhcmNoIiBwbGFjZWhvbGRlcj0iRXZlbnQsIGtleXdvcmQsIHBlcmZvcm1lci4uLiIgLz4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMiIgaGVpZ2h0PSIyMiIgY2xhc3M9ImhlYWRlci1zdmctaWNvbiBzdmctaWNvbiIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTEgNkMxMy43NjE0IDYgMTYgOC4yMzg1OCAxNiAxMU0xNi42NTg4IDE2LjY1NDlMMjEgMjFNMTkgMTFDMTkgMTUuNDE4MyAxNS40MTgzIDE5IDExIDE5QzYuNTgxNzIgMTkgMyAxNS40MTgzIDMgMTFDMyA2LjU4MTcyIDYuNTgxNzIgMyAxMSAzQzE1LjQxODMgMyAxOSA2LjU4MTcyIDE5IDExWiIgc3Ryb2tlPSIjNjA1ZTVlIiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hCdG4iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaC1pY29uLWNsb3NlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMTgiIGhlaWdodD0iMTgiIHZpZXdCb3g9IjAgMCAxOCAxOCIgY29sb3I9ImluaGVyaXQiIGNsYXNzPSJoZWFkZXItc3ZnLWljb24gc3ZnLWljb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTE2IDE0LjdsLTUuNi01LjZMMTYgMy41bC0xLjQtMS40TDkgNy43IDMuNCAyLjEgMiAzLjVsNS42IDUuNkwyIDE0LjdsMS40IDEuNEw5IDEwLjVsNS42IDUuNnoiPjwvcGF0aD48L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlc3VsdHMtaG9sZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlc3VsdHMtbGlzdCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvbGFiZWw+DQoNCg0KICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9IiIgaWQ9ImxvY2F0aW9uQnRuIiAvPg0KICAgICAgICA8bGFiZWwgZm9yPSJsb2NhdGlvbkJ0biI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2NhdGlvbm1lbnUiIGlkPSJsb2NhdGlvbm1lbnUiPg0KDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9jYXRpb24tYm94LXNpemUiPg0KICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2NhdGlvbi1ib3giPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTEyIGNvbC1tZC0xMiBjb2wtc20tMTIgY29sLXhzLTEyIGxvY2F0aW9uLXNlYXJjaCBsb2NhdGlvbi1zZWFyY2gtd2ViIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJicm93c2VfbG9jYXRpb24iPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJsb2NhdGlvbkJ0biI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9jYXRpb24tYm94LWNsb3NlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InN2Zy1jbG9zZSIgZmlsbD0iIzAwMDAwMCIgd2lkdGg9IjgwMHB4IiBoZWlnaHQ9IjgwMHB4IiB2aWV3Qm94PSIwIDAgMTYgMTYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0wIDE0LjU0NUwxLjQ1NSAxNiA4IDkuNDU1IDE0LjU0NSAxNiAxNiAxNC41NDUgOS40NTUgOCAxNiAxLjQ1NSAxNC41NDUgMCA4IDYuNTQ1IDEuNDU1IDAgMCAxLjQ1NSA2LjU0NSA4eiIgZmlsbC1ydWxlPSJldmVub2RkIj48L3BhdGg+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYnJvd3NlX2xvY2F0aW9uLXRleHQtbW9iaWxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXQgeW91ciBwcmVmZXJyZWQgbG9jYXRpb24NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJicm93c2VfbG9jYXRpb24tdGV4dC1tb2JpbGUtc21hbGwiPkV2ZW50cyBjbG9zZSB0byB5b3VyIHByZWZlcnJlZCBsb2NhdGlvbiB3aWxsIHByaW9yaXRpc2VkIPCfmYw8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYnJvd3NlX2xvY2F0aW9uLXRleHQtbW9iaWxlLXNtYWxsIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdGFydCB0eXBpbmcgdG8gZmluZCB5b3VyIGxvY2F0aW9uIGFuZCBzZWxlY3QgZnJvbSB0aGUgbGlzdC4gQ3VycmVudGx5IFVLIGxvY2F0aW9ucyBvbmx5IGJ1dCBtb3JlIGNvbWluZyBzb29uIQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvY2F0aW9uLWF1dG9jb21wbGV0ZSIgZGF0YS1zcGVjPSJsb2NhdGlvbi1hdXRvY29tcGxldGUiIHN0eWxlPSJ3aWR0aDogMTAwJTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9Imdlb2NvZGVyIj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSd0aWNrZXQtc2VsZWN0Jz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb25maXJtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYnV0dG9uIHJhZGl1cyBjb25maXJtLXJpZ2h0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9ImN0bDAwJEJ1dHRvbkhpZGRlbiIgdmFsdWU9IkNvbmZpcm0gTG9jYXRpb24iIGlkPSJCdXR0b25IaWRkZW4iIGNsYXNzPSJidXR0b24iIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3RsMDAkSGlkZGVuTG9jYXRpb25UZXh0IiBpZD0iSGlkZGVuTG9jYXRpb25UZXh0IiB2YWx1ZT0iU2lkY3VwIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdGwwMCRIaWRkZW5MYXRMb24iIGlkPSJIaWRkZW5MYXRMb24iIHZhbHVlPSI1MS40MjU0LDAuMDg4NiIgLz4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvbGFiZWw+DQoNCg0KICAgICAgICA8ZGl2IGlkPSJwYWdlIiBjbGFzcz0icGFydG5lciI+DQoNCiAgICAgICAgICAgIDxkaXYgaWQ9InBhZ2Utd3JhcHBlciI+DQoNCiAgICAgICAgICAgICAgICA8ZGl2ID4NCg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJoZWFkZXIiIGNsYXNzPSIiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8bmF2IGNsYXNzPSJzZWFyY2gtbmF2Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWFyY2gtYmFyIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgaXRlbXByb3A9ImxvZ28iIHdpZHRoPSI1NSIgaGVpZ2h0PSI1NSIgY2xhc3M9ImxvZ29tb2JpbGUiIHNyYz0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvaWNvbi5wbmciIGFsdD0iT3V0U2F2dnkgLSBEaXNjb3ZlciBldmVudHMgYW5kIGJvb2sgdGlja2V0cy4gQnV5IHRpY2tldHMgcXVpY2tseSBhbmQgc2VjdXJlbHkiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGl0ZW1wcm9wPSJsb2dvIiBjbGFzcz0ibG9nbyIgd2lkdGg9IjE4MCIgaGVpZ2h0PSI0NiIgc3JjPSJodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9vdXRzYXZ2eS1sb2dvLXdoaXRlLnBuZyIgYWx0PSJPdXRTYXZ2eSAtIERpc2NvdmVyIGV2ZW50cyBhbmQgYm9vayB0aWNrZXRzLiBCdXkgdGlja2V0cyBxdWlja2x5IGFuZCBzZWN1cmVseSIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJzZWFyY2gtbmF2LWJyb3dzZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic2VhcmNoLW5hdi1icm93c2UtZmlyc3QiPjxhIGhyZWY9Ii9ndWlkZSIgdGFiaW5kZXg9IjAiIGNsYXNzPSJzZWFyY2gtbmF2LW1haW4taXRlbSBzZWFyY2gtbmF2LWl0ZW0iPkd1aWRlPC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic2VhcmNoLW5hdi1icm93c2UtZmlyc3QiPjxhIGhyZWY9Ii9ldmVudHMiIHRhYmluZGV4PSIwIiBjbGFzcz0ic2VhcmNoLW5hdi1tYWluLWl0ZW0gc2VhcmNoLW5hdi1pdGVtIj5Ccm93c2U8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzZWFyY2gtbmF2LWJyb3dzZS1zZWNvbmQiPjxhIGhyZWY9Ii90aGVhcHAiIHRhYmluZGV4PSIwIiBjbGFzcz0ic2VhcmNoLW5hdi1tYWluLWl0ZW0gc2VhcmNoLW5hdi1pdGVtIj5BcHA8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzZWFyY2gtbmF2LWJyb3dzZS1zZWNvbmQiPjxhIGhyZWY9Ii9zdXBwb3J0IiB0YWJpbmRleD0iMCIgY2xhc3M9InNlYXJjaC1uYXYtbWFpbi1pdGVtIHNlYXJjaC1uYXYtaXRlbSI+U3VwcG9ydDwvYT48L2xpPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNlYXJjaC1uYXYtYnJvd3NlLXNlY29uZCI+PGEgaHJlZj0iL2FjY291bnRsb2dpbiIgdGFiaW5kZXg9IjAiIGNsYXNzPSJzZWFyY2gtbmF2LW1haW4taXRlbSBzZWFyY2gtbmF2LWl0ZW0iPkxvZ2luPC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0idXNlci1uYXYiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoQnRuIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWFyY2gtbmF2LWRyb3AtYnV0dG9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjgwMHB4IiBoZWlnaHQ9IjgwMHB4IiB2aWV3Qm94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIGNsYXNzPSJzdmctc2VhcmNoIiBvbmNsaWNrPSJvcGVuRXZlbnRTZWFyY2goKTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMSA2QzEzLjc2MTQgNiAxNiA4LjIzODU4IDE2IDExTTE2LjY1ODggMTYuNjU0OUwyMSAyMU0xOSAxMUMxOSAxNS40MTgzIDE1LjQxODMgMTkgMTEgMTlDNi41ODE3MiAxOSAzIDE1LjQxODMgMyAxMUMzIDYuNTgxNzIgNi41ODE3MiAzIDExIDNDMTUuNDE4MyAzIDE5IDYuNTgxNzIgMTkgMTFaIiBzdHJva2U9IiMwMDAwMDAiIHN0cm9rZS13aWR0aD0iMiIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InVzZXItbmF2LWNvbnRhaW5lciI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ibWVudUJ0biI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWFyY2gtbmF2LWRyb3AtYnV0dG9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSI4MDBweCIgaGVpZ2h0PSI4MDBweCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiBjbGFzcz0ic3ZnLWhhbWJ1cmdlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNNSA3SDE5IiBzdHJva2U9IiMwMDAwMDAiIHN0cm9rZS13aWR0aD0iMyIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIj48L3BhdGg+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNNSAxMkwxOSAxMiIgc3Ryb2tlPSIjMDAwMDAwIiBzdHJva2Utd2lkdGg9IjMiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCI+PC9wYXRoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTUgMTdMMTkgMTciIHN0cm9rZT0iIzAwMDAwMCIgc3Ryb2tlLXdpZHRoPSIzIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjwvcGF0aD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9uYXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciBjb250YWluZXItaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRvcC1oZWFkZXItbWFyZ2luIj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSBIRUFERVIgLS0+DQoNCiAgICAgICAgICAgICAgICAgICAgDQoNCiAgICA8ZGl2IGNsYXNzPSJwYXJ0bmVyLWhlYWRlciI+DQoNCiAgICAgICAgPGRpdiBjbGFzcz0icGFydG5lci1oZWFkZXItaW5uZXIiPg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJ0bmVyLWhlYWRlci1iZ0NvbG91ciI+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1oZWFkZXItaW1hZ2VfYmx1cnJ5Ij4NCiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS93ZWJzaXRlL3BhcnRuZXJiYW5uZXIuanBnIiBjbGFzcz0iZXZlbnQtaGVhZGVyLWltYWdlIiBhbHQ9IiIgLz4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlIGFyZWEtbWFpbi1mZWF0dXJlIj4NCiAgICAgICAgICAgICAgICAgICAgPGltZyBhbHQ9IlRyZWFjbGVzIEJhbm5lciIgY2xhc3M9ImFyZWEtbWFpbi1mZWF0dXJlIGFyZWEtbWFpbi1mZWF0dXJlLXdlYnNpdGUiIHNyYz0iZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhacFpYZENiM2c5SWpBZ01DQXpJRElpUGp3dmMzWm5QZz09IiBkYXRhLXNyYz0naHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvcGFydG5lcmJhbm5lci5qcGcnIC8+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJ0bmVyLWhlYWRlci1jb250YWluZXIiPg0KDQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFydGlzdC1oZWFkZXIiIHN0eWxlPSJwYWRkaW5nLXRvcDogMHB4OyByaWdodDogMCU7IG1heC13aWR0aDogODAwcHg7IGxlZnQ6IGF1dG87Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gSGVhZGluZyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxoMSBzdHlsZT0nY29sb3I6IHJnYig4LCAyMzksIDgpOzsgdGV4dC1hbGlnbjogcmlnaHQ7JyBjbGFzcz0iaGVhZGluZyBhbmltYXRlIGZhZGUtaW4tdXAtYmlnIGhlYWRlci1hcnRpc3QiPlRyZWFjbGVzPC9oMT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFydG5lci1oZWFkZXItbG9nbyI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcnRuZXItaGVhZGVyLXByb2ZpbGVsb2dvIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhcnRuZXItaGVhZGVyLXByb2ZpbGVsb2dvLWltYWdlIiBzcmM9Imh0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS9sb2dvLzJmOTM4ZjZhLWU1N2UtNDU1Ny04NGY4LTM5MjU1ZjRhMDc5NS5wbmciIGFsdD0iVHJlYWNsZXMiIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8L2Rpdj4NCg0KICAgIDwvZGl2Pg0KDQoNCg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzZWN0aW9uIiBjbGFzcz0iIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iUGFuZWxNYWluU2VjdGlvbiI+DQoJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGNsZWFyZml4ICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InByaW1hcnkiIGNsYXNzPSJwYXJ0bmVycGFnZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgIDxkaXYgaWQ9InNlY3Rpb24iPg0KDQogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciBjbGVhcmZpeCAiPg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaWRlYmFycGFydG5lciBzaWRlYmFycGFydG5lcmxvZ28iPg0KDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYm94IG91dGxpbmUiIHN0eWxlPSJ3aWR0aDogMTAwJTsiPg0KDQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudC13cmFwIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5Gb2xsb3cgVHJlYWNsZXM8L2g1Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZm9udC1zaXplOiAxMnB4OyBtYXJnaW4tYm90dG9tOiAyMHB4OyB3aWR0aDogMTAwJTsiIGNsYXNzPSJzaGFyZXZlbnQganNzb2NpYWxzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlcyIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxNXB4OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Impzc29jaWFscy1zaGFyZSBqc3NvY2lhbHMtc2hhcmUtaW5zdGFncmFtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS90cmVhY2xlc19zb3V0aCIgY2xhc3M9Impzc29jaWFscy1zaGFyZS1saW5rIiB0aXRsZT0iRm9sbG93IG9uIEluc3RhZ3JhbSIgYXJpYS1sYWJlbD0iRm9sbG93IG9uIEluc3RhZ3JhbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMjhweCIgaGVpZ2h0PSIyOHB4IiB2aWV3Qm94PSIwIDAgMTUgMTUiIGZpbGw9IiNGRkYiPg0KPHBhdGggZD0iTTExIDMuNUgxMk00LjUgMC41SDEwLjVDMTIuNzA5MSAwLjUgMTQuNSAyLjI5MDg2IDE0LjUgNC41VjEwLjVDMTQuNSAxMi43MDkxIDEyLjcwOTEgMTQuNSAxMC41IDE0LjVINC41QzIuMjkwODYgMTQuNSAwLjUgMTIuNzA5MSAwLjUgMTAuNVY0LjVDMC41IDIuMjkwODYgMi4yOTA4NiAwLjUgNC41IDAuNVpNNy41IDEwLjVDNS44NDMxNSAxMC41IDQuNSA5LjE1Njg1IDQuNSA3LjVDNC41IDUuODQzMTUgNS44NDMxNSA0LjUgNy41IDQuNUM5LjE1Njg1IDQuNSAxMC41IDUuODQzMTUgMTAuNSA3LjVDMTAuNSA5LjE1Njg1IDkuMTU2ODUgMTAuNSA3LjUgMTAuNVoiIHN0cm9rZT0iIzAwMDAwMCI+PC9wYXRoPg0KPC9zdmc+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudC13cmFwIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5Kb2luIFRyZWFjbGVzIE1haWxpbmcgTGlzdCA8c3BhbiBjbGFzcz0ibWFya2VyLWljb24iIHRpdGxlPSJCZSB0aGUgZmlyc3QgdG8gaGVhciBhYm91dCBuZXcgZXZlbnRzIGZyb20gVHJlYWNsZXMuIFlvdSBjYW4gdW5zdWJzY3JpYmUgYXQgYW55IHRpbWUuIiByZWw9InRvb2x0aXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvaWNvbi1pbmZvLnBuZyIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+PC9oNT4NCg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iY3RsMDAkTWFpbkNvbnRlbnQkQnV0dG9uSm9pbiIgdmFsdWU9IkpvaW4gTWFpbGluZyBMaXN0IiBpZD0iTWFpbkNvbnRlbnRfQnV0dG9uSm9pbiIgY2xhc3M9ImJ1eS1idXR0b24iIHN0eWxlPSJtYXJnaW4tdG9wOiA1cHg7IG1hcmdpbi1ib3R0b206IDVweDsiIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwhLS0gY29udGFpbmVyIC0tPg0KDQogICAgICAgICAgICA8ZGl2IGlkPSJwcmltYXJ5IiBzdHlsZT0ibWFyZ2luLXRvcDogMjBweDsiPg0KDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaW5lLXJlZC1ob2xkZXIiPg0KICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9ImxpbmUtcmVkIj5BYm91dCBUcmVhY2xlcw0KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMTAwJSIgaGVpZ2h0PSI3IiB2aWV3Qm94PSIwIDAgMTM1IDciIGZpbGw9Im5vbmUiIHByZXNlcnZlQXNwZWN0UmF0aW89Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgYm90dG9tOiAtN3B4OyBsZWZ0OiAwOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEzNC42MDggMC4wMDAxMTc3MjRDMTEzLjI3IDAuMTczNzQ3IDkxLjkzNTggMC41MjY0MzMgNzAuNjA0MiAxLjA1ODE3QzU1LjgyNiAxLjQzMjU2IDQxLjA1NjYgMS45MzcxNyAyNi4yNzg1IDIuNDI1NUMxOC42MjE2IDIuNjg1OTQgMTAuOTY0NyAyLjkxOTI1IDMuMzA3ODEgMy4xMjU0NEMyLjM0OTQxIDMuMjI5MSAxLjQzMDY4IDMuODcwNjEgMC42NzM1NTYgNC45NjQ4MkMwLjQxMDEzMSA1LjMzOTIxIC0wLjUyMDYzOCA3LjAzMjA5IDAuMzkyNTY5IDYuOTk5NTRDMTQuMTE3IDYuNjU3NyAyNy44NTAzIDYuMTUzMDkgNDEuNTc0NyA1LjcxMzU5QzU4LjQ5ODMgNS4xNjAxNSA3NS40MTMxIDQuNzIwNjYgOTIuMzE5MiA0LjM5NTFDMTA1LjQ0NCA0LjE0NTUxIDExOC41NjUgMy45NzE4OCAxMzEuNjg0IDMuODc0MjJDMTMyLjY0NSAzLjc4MjcyIDEzMy41NjYgMy4xMzM1OSAxMzQuMzE4IDIuMDE4NTZDMTM0LjU5IDEuNjYwNDUgMTM1LjUyMSAtMC4wMTYxNiAxMzQuNjA4IDAuMDAwMTE3NzI0WiIgZmlsbD0iI2ZmNWE1ZiI+PC9wYXRoPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+DQogICAgICAgICAgICAgICAgICAgIDwvaDQ+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZXZpZXciIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0OyI+DQogICAgICAgICAgICAgICAgICAgIDxwPjxwPjxzdHJvbmc+RkxJTlRBICsgUVVFRVIgKyBTT1VUSDwvc3Ryb25nPjwvcD48cD48aT5IZXkgUXVlZXJzLCZuYnNwOzwvaT48L3A+PHA+PGk+V2FubmEgcGxheS4uPzwvaT48L3A+PHA+Jm5ic3A7PC9wPjxwPkEgc3RyaW5nIG9mIHBvcC11cCBuaWdodHMgZm9yIHRoZSBxdWVlciBjb21tdW5pdHkgYnkgRkxJTlRBIFBPQyBxdWVlcnMuPC9wPjxwPkRhbmNpbmcsIGNoaW4td2FnZ2luZywgYW5kIGEgc25lYWsgcGVlayBpbnRvIHRoZSBleGNpdGluZyBmdXR1cmUgb2YgVHJlYWNsZXMhPC9wPjxwPiZuYnNwOzwvcD48cD48c3Ryb25nPkZMSU5UQSBhbmQgUE9DIGluZGl2aWR1YWxzIGFyZSBhbW9uZyB0aGUgbW9zdCBtYXJnaW5hbGlzZWQgd2l0aGluIG91ciBMR0JUUUlBKyBjb21tdW5pdHkuPC9zdHJvbmc+PC9wPjxwPjxzdHJvbmc+VHJlYWNsZXMgaXMgZGVkaWNhdGVkIHRvIGNyZWF0aW5nIGEgc2FmZSBhbmQgZW1wb3dlcmluZyBzcGFjZSBmb3IgdGhlc2UgaW5kaXZpZHVhbHMgaW4gU291dGggRWFzdCBMb25kb24uPC9zdHJvbmc+PC9wPjxwPjxzdHJvbmc+V2Ugd2FybWx5IHdlbGNvbWUgYWxsIHF1ZWVycyBhbmQgYWxsaWVzIHRvIGpvaW4gdXMsIGFuZCB3ZSBhc2sgZXZlcnlvbmUgdG8gYmUgbWluZGZ1bCBvZiBvdXIgc3BhY2UgYW5kIHN1cHBvcnQgVHJlYWNsZXMnIG1pc3Npb24gdG8gdXBsaWZ0IGFuZCBjZWxlYnJhdGUgdGhlc2UgY29tbXVuaXRpZXMuPC9zdHJvbmc+PC9wPjxwPiZuYnNwOzwvcD48cD48aT5BbGwgcHJvY2VlZHMgd2lsbCBiZSByZWludmVzdGVkIGludG8gVHJlYWNsZXMsIGZ1ZWxsaW5nIG91ciBtaXNzaW9uIHRvIGVzdGFibGlzaCBhIGRlZGljYXRlZCBxdWVlciB2ZW51ZSBpbiBTb3V0aCBFYXN0IExvbmRvbi4gWW91ciBzdXBwb3J0IGJyaW5ncyB1cyBvbmUgc3RlcCBjbG9zZXIgdG8gbWFraW5nIHRoaXMgZHJlYW0gYSByZWFsaXR5LCBjcmVhdGluZyBhIHZpYnJhbnQsIGluY2x1c2l2ZSBzcGFjZSBmb3IgdGhlIExHQlRRSUErIGNvbW11bml0eSB0byB0aHJpdmUgc291dGggb2YgdGhlIHJpdmVyLjwvaT48L3A+PC9wPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaW5lLXJlZC1ob2xkZXIiPg0KICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9ImxpbmUtcmVkIj5TaGFyZSBUcmVhY2xlcw0KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMTAwJSIgaGVpZ2h0PSI3IiB2aWV3Qm94PSIwIDAgMTM1IDciIGZpbGw9Im5vbmUiIHByZXNlcnZlQXNwZWN0UmF0aW89Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgYm90dG9tOiAtN3B4OyBsZWZ0OiAwOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEzNC42MDggMC4wMDAxMTc3MjRDMTEzLjI3IDAuMTczNzQ3IDkxLjkzNTggMC41MjY0MzMgNzAuNjA0MiAxLjA1ODE3QzU1LjgyNiAxLjQzMjU2IDQxLjA1NjYgMS45MzcxNyAyNi4yNzg1IDIuNDI1NUMxOC42MjE2IDIuNjg1OTQgMTAuOTY0NyAyLjkxOTI1IDMuMzA3ODEgMy4xMjU0NEMyLjM0OTQxIDMuMjI5MSAxLjQzMDY4IDMuODcwNjEgMC42NzM1NTYgNC45NjQ4MkMwLjQxMDEzMSA1LjMzOTIxIC0wLjUyMDYzOCA3LjAzMjA5IDAuMzkyNTY5IDYuOTk5NTRDMTQuMTE3IDYuNjU3NyAyNy44NTAzIDYuMTUzMDkgNDEuNTc0NyA1LjcxMzU5QzU4LjQ5ODMgNS4xNjAxNSA3NS40MTMxIDQuNzIwNjYgOTIuMzE5MiA0LjM5NTFDMTA1LjQ0NCA0LjE0NTUxIDExOC41NjUgMy45NzE4OCAxMzEuNjg0IDMuODc0MjJDMTMyLjY0NSAzLjc4MjcyIDEzMy41NjYgMy4xMzM1OSAxMzQuMzE4IDIuMDE4NTZDMTM0LjU5IDEuNjYwNDUgMTM1LjUyMSAtMC4wMTYxNiAxMzQuNjA4IDAuMDAwMTE3NzI0WiIgZmlsbD0iI2ZmNWE1ZiI+PC9wYXRoPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+DQogICAgICAgICAgICAgICAgICAgIDwvaDQ+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzaGFyZWV2ZW50IiBzdHlsZT0iZm9udC1zaXplOiAxMnB4OyBtYXJnaW4tYm90dG9tOiAyMHB4OyB3aWR0aDogMTAwJTsiIGNsYXNzPSJzaGFyZXZlbnQganNzb2NpYWxzIj4NCg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJqc3NvY2lhbHMtc2hhcmVzIiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDE1cHg7Ij4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9iaWxlLXNoYXJlIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlIGpzc29jaWFscy1zaGFyZS13aGF0c2FwcCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJ3aGF0c2FwcDovL3NlbmQ/dGV4dD1PdXRTYXZ2eSUyMC0lMjBUcmVhY2xlcyUyMGV2ZW50cyBhbmQgdGlja2V0cy4lMjBodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlLWxpbmsiIHRpdGxlPSJTaGFyZSBvbiBXaGF0cyBBcHAiIGFyaWEtbGFiZWw9IlNoYXJlIG9uIFdoYXRzIEFwcCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDE2IDE2IiB3aWR0aD0iMjgiIGhlaWdodD0iMjgiIGZpbGw9IiNGRkZGRkYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxnIGZpbGw9IiNGRkZGRkYiIHN0cm9rZT0iIzMzMyIgc3Ryb2tlLW1pdGVybGltaXQ9IjEwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTguMDAyLjVoLS4wMDRDMy44NjMuNS41IDMuODY0LjUgOGMwIDEuNjQuNTI5IDMuMTYxIDEuNDI4IDQuMzk2bC0uOTM1IDIuNzg3IDIuODgzLS45MjFBNy40NDggNy40NDggMCAwIDAgOC4wMDIgMTUuNWM0LjEzNSAwIDcuNDk4LTMuMzY0IDcuNDk4LTcuNVMxMi4xMzcuNSA4LjAwMi41eiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEyLjE3NSAxMC45MzFjLS4xNzIuNDg0LS44NTguODg0LTEuNDA1IDEuMDAxLS4zNzQuMDc5LS44NjIuMTQyLTIuNTA3LS41MzQtMi4xMDMtLjg2My0zLjQ1Ny0yLjk4Mi0zLjU2Mi0zLjExOS0uMS0uMTM4LS44NDktMS4xMjItLjg0OS0yLjEzOSAwLTEuMDE3LjUyMi0xLjUxNC43MzItMS43MjYuMTcyLS4xNzUuNDU4LS4yNTQuNzMyLS4yNTQuMDg4IDAgLjE2OC4wMDQuMjQuMDA4LjIxLjAwOC4zMTUuMDIxLjQ1NC4zNS4xNzIuNDEzLjU5MyAxLjQzLjY0MyAxLjUzNC4wNS4xMDQuMTAxLjI0Ni4wMjkuMzg0LS4wNjcuMTQyLS4xMjYuMjA0LS4yMzEuMzI1LS4xMDUuMTIxLS4yMDYuMjEzLS4zMTEuMzQyLS4wOTcuMTEzLS4yMDYuMjM0LS4wODQuNDQyLjEyMi4yMDQuNTQyLjg4NCAxLjE2MSAxLjQzLjc5OS43MDUgMS40NDcuOTMgMS42NzggMS4wMjYuMTcyLjA3MS4zNzguMDU0LjUwNS0uMDc5LjE2LS4xNzEuMzU4LS40NTQuNTU5LS43MzQuMTQzLS4yLjMyNC0uMjI1LjUxMy0uMTU0LjE5My4wNjcgMS4yMTUuNTY3IDEuNDI2LjY3MS4yMS4xMDQuMzQ5LjE1NC40LjI0Mi4wNDkuMDg3LjA0OS41LS4xMjMuOTg0eiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2c+PC9zdmc+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Impzc29jaWFscy1zaGFyZSBqc3NvY2lhbHMtc2hhcmUtZmFjZWJvb2siPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlLWxpbmsiIHRpdGxlPSJTaGFyZSBvbiBGYWNlYm9vayIgYXJpYS1sYWJlbD0iU2hhcmUgb24gRmFjZWJvb2siPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxNiAxNiIgd2lkdGg9IjI4IiBoZWlnaHQ9IjI4IiBmaWxsPSIjRkZGRkZGIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsPSIjRkZGRkZGIiBzdHJva2U9IiMzMzMiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgc3Ryb2tlLW1pdGVybGltaXQ9IjEwIiBkPSJNMTIuNSA2aC0zVjRhMSAxIDAgMCAxIDEtMWgxVi41aC0yYTMgMyAwIDAgMC0zIDNWNmgtMnYyLjVoMnY3aDN2LTdoMmwxLTIuNXoiIGNsaXAtcnVsZT0iZXZlbm9kZCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlIGpzc29jaWFscy1zaGFyZS1tZXNzZW5nZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iZmItbWVzc2VuZ2VyOi8vc2hhcmUvP2xpbms9aHR0cHM6Ly93d3cub3V0c2F2dnkuY29tL29yZ2FuaXNlci90cmVhY2xlcyZhcHBfaWQ9MTc5ODIxMzM1NTQzODIxJnJlZGlyZWN0X3VyaT1odHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlLWxpbmsiIHRpdGxlPSJTaGFyZSBvbiBNZXNzZW5nZXIiIGFyaWEtbGFiZWw9IlNoYXJlIG9uIE1lc3NlbmdlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDE2IDE2IiB3aWR0aD0iMjgiIGhlaWdodD0iMjgiIGZpbGw9IiNGRkZGRkYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxnIGZpbGw9IiNGRkZGRkYiIHN0cm9rZT0iIzMzMyIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2UtbWl0ZXJsaW1pdD0iMTAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNOCAuNUMzLjg1OC41LjUgMy42MDkuNSA3LjQ0NGMwIDIuMTg1IDEuMDkxIDQuMTM1IDIuNzk1IDUuNDA4VjE1LjVsMi41NTQtMS40MDJjLjY4Mi4xODkgMS40MDQuMjkgMi4xNTEuMjkgNC4xNDIgMCA3LjUtMy4xMDkgNy41LTYuOTQ0UzEyLjE0Mi41IDggLjV6IiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJtOC43NDUgOS44NTItMS45MS0yLjAzNy0zLjcyNiAyLjAzN0w3LjIwOCA1LjVsMS45NTcgMi4wMzcgMy42OC0yLjAzN3oiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPjwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlIGpzc29jaWFscy1zaGFyZS1zbmFwY2hhdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5zbmFwY2hhdC5jb20vc2Nhbj9hdHRhY2htZW50VXJsPWh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9vcmdhbmlzZXIvdHJlYWNsZXMmdXRtX3NvdXJjZT1vdXRzYXZ2eSIgY2xhc3M9Impzc29jaWFscy1zaGFyZS1saW5rIiB0aXRsZT0iU2hhcmUgb24gU25hcGNoYXQiIGFyaWEtbGFiZWw9IlNoYXJlIG9uIFNuYXBjaGF0Ij4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxNiAxNiIgd2lkdGg9IjI4IiBoZWlnaHQ9IjI4IiBmaWxsPSIjRkZGRkZGIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsPSIjRkZGRkZGIiBzdHJva2U9IiMzMzMiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCIgZD0iTTE1LjIwNiAxMC45NTRjLTIuMDA1LS4zMjgtMi45MDktMi4zNzMtMi45NDYtMi40NmwtLjAwOC0uMDE3Yy0uMTAzLS4yMDctLjEyNi0uMzc3LS4wNzEtLjUwNy4xMDktLjI1Ni41MjktLjM4OC44MDctLjQ3Ni4wOC0uMDI1LjE1Ni0uMDQ5LjIxOS0uMDc0LjI3NC0uMTA3LjQ2OS0uMjI0LjU5OC0uMzU2LjE1NC0uMTU4LjE4NC0uMzA4LjE4Mi0uNDA3LS4wMDUtLjIzOS0uMTg5LS40NTEtLjQ4Mi0uNTU1YS44Ni44NiAwIDAgMC0uMzI2LS4wNjIuNzUuNzUgMCAwIDAtLjMwNC4wNjEgMS43MTIgMS43MTIgMCAwIDEtLjYyNS4xNzcuNTcuNTcgMCAwIDEtLjIwNy0uMDQ1bC4wMTgtLjI4OS4wMDMtLjA0M2MuMDY0LTEuMDExLjE0NC0yLjI2OC0uMTkxLTMuMDE1YTQuMDgzIDQuMDgzIDAgMCAwLS45MTgtMS4zMDggMy44MjUgMy44MjUgMCAwIDAtMS4wOTgtLjcyQTQuMzg5IDQuMzg5IDAgMCAwIDguMTQ0LjVoLS4wMzdsLS4yNTguMDAzYy0uMzMzIDAtLjk5OS4wNDctMS43MTUuMzZhMy44MiAzLjgyIDAgMCAwLTEuMDk0LjcyIDQuMDgyIDQuMDgyIDAgMCAwLS45MTQgMS4zMDRjLS4zMzUuNzQ2LS4yNTUgMi4wMDMtLjE5MSAzLjAxM3YuMDAybC4wMi4zMzFhLjU5Ny41OTcgMCAwIDEtLjI0Ni4wNDZjLS4xODkgMC0uNDE0LS4wNi0uNjY4LS4xNzhhLjU5NS41OTUgMCAwIDAtLjI1NC0uMDUyLjkwMy45MDMgMCAwIDAtLjQ0OS4xMjVjLS4xNzUuMTAxLS4yODcuMjQ0LS4zMTguNDAzLS4wMi4xMDYtLjAxOS4zMTQuMjE0LjUyNC4xMjguMTE2LjMxNi4yMjQuNTU4LjMxOS4wNjQuMDI1LjEzOS4wNDkuMjE5LjA3NC4yNzguMDg3LjY5OS4yMi44MDguNDc2LjA1Ni4xMy4wMzIuMy0uMDcxLjUwN2wtLjAwNy4wMTdhNC45MzEgNC45MzEgMCAwIDEtLjc1NSAxLjE2MyA0LjIyOSA0LjIyOSAwIDAgMS0uOTEyLjgwMSAzLjM3OCAzLjM3OCAwIDAgMS0xLjI4LjQ5Ni4zNS4zNSAwIDAgMC0uMjk0LjM2NC40NjIuNDYyIDAgMCAwIC4wMzYuMTUybC4wMDEuMDAxYy4wNzIuMTY2LjIzOC4zMDguNTA4LjQzMi4zMy4xNTIuODI0LjI4IDEuNDY3LjM4LjAzMy4wNjEuMDY2LjIxNi4wOS4zMjEuMDI0LjExMi4wNS4yMjguMDg2LjM1LjAzOS4xMzMuMTQxLjI5MS40MDIuMjkxYTEuOSAxLjkgMCAwIDAgLjM0NS0uMDQ4Yy4xOTMtLjAzOC40NTctLjA4OS43ODctLjA4OS4xODMgMCAuMzcyLjAxNi41NjMuMDQ3LjM2OC4wNjEuNjg0LjI4MyAxLjA1MS41NC41MzYuMzc5IDEuMTQ0LjgwNSAyLjA3Mi44MDVhLjk2NS45NjUgMCAwIDAgLjA3Ni0uMDAzYy4wMy4wMDIuMDY4LjAwMy4xMDguMDAzLjkyOCAwIDEuNTM2LS40MjYgMi4wNzItLjgwM2wuMDAxLS4wMDFjLjM2Ny0uMjU3LjY4My0uNDc5IDEuMDUxLS41NC4xOTEtLjAzMS4zOC0uMDQ3LjU2My0uMDQ3LjMxNSAwIC41NjQuMDQuNzg3LjA4My4xNDUuMDI4LjI1OC4wNDIuMzQ1LjA0MmguMDE3YS4zNzkuMzc5IDAgMCAwIC4zODUtLjI4NmMuMDM2LS4xMi4wNjEtLjIzMy4wODYtLjM0Ny4wMjItLjA5OS4wNTctLjI1OC4wODktLjMyLjY0NC0uMSAxLjEzNy0uMjI4IDEuNDY3LS4zOC4yNjktLjEyNC40MzUtLjI2NS41MDctLjQzMWEuNDQuNDQgMCAwIDAgLjAzNy0uMTU0LjM0OC4zNDggMCAwIDAtLjI5My0uMzYyeiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlIGpzc29jaWFscy1zaGFyZS1ibHVlc2t5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vYnNreS5hcHAvaW50ZW50L2NvbXBvc2U/dGV4dD1PdXRTYXZ2eSUyMC0lMjBUcmVhY2xlcyUyMGV2ZW50cyBhbmQgdGlja2V0cyUyMC0lMjBodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlLWxpbmsiIHRpdGxlPSJTaGFyZSBvbiBCbHVlc2t5IiBuYW1lPSJTaGFyZSBvbiBCbHVlc2t5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyOHB4IiBoZWlnaHQ9IjI4cHgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGZpbGw9IiNGRkYiIHN0cm9rZT0iIzAwMDAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjEiIGQ9Ik02LjMzNSA1LjE0NEM0LjY4MSAzLjk0NSAyIDMuMDE3IDIgNS45N2MwIC41OS4zNSA0Ljk1My41NTYgNS42NjFDMy4yNjkgMTQuMDk0IDUuNjg2IDE0LjM4MSA4IDE0Yy00LjA0NS42NjUtNC44ODkgMy4yMDgtMi42NjcgNS40MUM2LjM2MyAyMC40MjggNy4yNDYgMjEgOCAyMWMyIDAgMy4xMzQtMi43NjkgMy41LTMuNWMuMzMzLS42NjcuNS0xLjE2Ny41LTEuNWMwIC4zMzMuMTY3LjgzMy41IDEuNWMuMzY2LjczMSAxLjUgMy41IDMuNSAzLjVjLjc1NCAwIDEuNjM3LS41NzEgMi42NjctMS41OUMyMC44ODkgMTcuMjA3IDIwLjA0NSAxNC42NjQgMTYgMTRjMi4zMTQuMzggNC43My4wOTQgNS40NDQtMi4zNjljLjIwNi0uNzA4LjU1Ni01LjA3Mi41NTYtNS42NjFjMC0yLjk1My0yLjY4LTIuMDI1LTQuMzM1LS44MjZDMTUuMzcyIDYuODA2IDEyLjkwNSAxMC4xOTIgMTIgMTJjLS45MDUtMS44MDgtMy4zNzItNS4xOTQtNS42NjUtNi44NTYiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlIGpzc29jaWFscy1zaGFyZS1lbWFpbCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX3NlbGYiIGhyZWY9Im1haWx0bzo/c3ViamVjdD1PdXRTYXZ2eSUyMC0lMjBUcmVhY2xlcyUyMGV2ZW50cyBhbmQgdGlja2V0cyZhbXA7Ym9keT1odHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlLWxpbmsiIHRpdGxlPSJTaGFyZSB2aWEgRW1haWwiIGFyaWEtbGFiZWw9IlNoYXJlIHZpYSBFbWFpbCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZlcnNpb249IjEuMSIgeD0iMHB4IiB5PSIwcHgiIHZpZXdCb3g9IjAgMCAyNjcuMDM3IDI2Ny4wMzciIHdpZHRoPSIyOCIgaGVpZ2h0PSIyOCIgZmlsbD0iI0ZGRkZGRiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0eWxlPSJmaWxsOiAjZmZmOyIgZD0iTTIzOS4wODMsNy41MTNsLTE0MS4zMSwxNjZsLTYwLjkxOC0xNC41NjdjLTkuOTcxLTIuMzg0LTEyLjE2OS0xNS41ODUtMy41MDktMjEuMDcyTDIzOS4wODMsNy41MTN6ICAgIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHlsZT0iZmlsbDogI2ZmZjsiIGQ9Ik0yMzkuMDgzLDcuNTEzbC01Mi4zMjQsMjQyLjg1OGMtMi4wMzEsOS40MjYtMTQuMDExLDEyLjQtMjAuMjEzLDUuMDE2bC0zMy41MzMtMzkuOTE1bC0zNS4yNC00MS45NiAgIEwyMzkuMDgzLDcuNTEzeiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBzdHlsZT0iZmlsbDogI2ZmZjsiIHBvaW50cz0iMTMzLjAxMywyMTUuNDczIDkzLjM2MywyNDkuNjQzIDk3Ljc3MywxNzMuNTEzICAgIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggc3R5bGU9ImZpbGw6ICMyMjMxM0Y7IiBkPSJNMjM1LjA2OCwxLjE3OEwyOS4zMzEsMTMxLjUzOGMtMTQuMjgxLDkuMDQ5LTEwLjYzMSwzMC43NzksNS43NzksMzQuNzAxbDU0LjgxMiwxMy4xMDcgICAgbC00LjA0Nyw2OS44NjJjLTAuMzg0LDYuNjIzLDcuNDA3LDEwLjQwNSwxMi4zODMsNi4xMTVsMzMuOS0yOS4yMTRsMjguNjQ0LDM0LjEwMWMxMC4yMywxMi4xNzgsMjkuOTUsNy4yMzMsMzMuMjg5LTguMjYgICAgTDI0Ni40MTQsOS4wOTNDMjQ3LjgzNSwyLjU1OSwyNDAuNjEtMi4zNDksMjM1LjA2OCwxLjE3OHogTTM3LjM2LDE0NC4yMDhsMTYzLjkzLTEwMy44NyAgICBjLTEuMjAzLDEuNDEzLTEwMy40NTMsMTIxLjUyOC0xMDYuMjQ3LDEyNC44MTFMMzguNTk5LDE1MS42NUMzNS4wNjksMTUwLjgwNywzNC4yOSwxNDYuMTU0LDM3LjM2LDE0NC4yMDh6IE0xMDEuODc0LDIzMi40MDcgICAgbDIuMjk1LTM5LjYxN2wxOC4zMzgsMjEuODM1TDEwMS44NzQsMjMyLjQwN3ogTTE3OS40MjcsMjQ4Ljc5MWMtMC43MTksMy4zMzgtNC45NDQsNC4zODMtNy4xNCwxLjc3MWwtNjQuNjkzLTc3LjAxNyAgICBMMjI1LjQ3MywzNS4wN0wxNzkuNDI3LDI0OC43OTF6IiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2c+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id2ViLXNoYXJlIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlIGpzc29jaWFscy1zaGFyZS13aGF0c2FwcCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJ3aGF0c2FwcDovL3NlbmQ/dGV4dD1PdXRTYXZ2eSUyMC0lMjBUcmVhY2xlcyUyMGV2ZW50cyBhbmQgdGlja2V0cy4lMjBodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlLWxpbmsiIHRpdGxlPSJTaGFyZSBvbiBXaGF0cyBBcHAiIGFyaWEtbGFiZWw9IlNoYXJlIG9uIFdoYXRzIEFwcCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDE2IDE2IiB3aWR0aD0iMjgiIGhlaWdodD0iMjgiIGZpbGw9IiNGRkZGRkYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxnIGZpbGw9IiNGRkZGRkYiIHN0cm9rZT0iIzMzMyIgc3Ryb2tlLW1pdGVybGltaXQ9IjEwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTguMDAyLjVoLS4wMDRDMy44NjMuNS41IDMuODY0LjUgOGMwIDEuNjQuNTI5IDMuMTYxIDEuNDI4IDQuMzk2bC0uOTM1IDIuNzg3IDIuODgzLS45MjFBNy40NDggNy40NDggMCAwIDAgOC4wMDIgMTUuNWM0LjEzNSAwIDcuNDk4LTMuMzY0IDcuNDk4LTcuNVMxMi4xMzcuNSA4LjAwMi41eiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEyLjE3NSAxMC45MzFjLS4xNzIuNDg0LS44NTguODg0LTEuNDA1IDEuMDAxLS4zNzQuMDc5LS44NjIuMTQyLTIuNTA3LS41MzQtMi4xMDMtLjg2My0zLjQ1Ny0yLjk4Mi0zLjU2Mi0zLjExOS0uMS0uMTM4LS44NDktMS4xMjItLjg0OS0yLjEzOSAwLTEuMDE3LjUyMi0xLjUxNC43MzItMS43MjYuMTcyLS4xNzUuNDU4LS4yNTQuNzMyLS4yNTQuMDg4IDAgLjE2OC4wMDQuMjQuMDA4LjIxLjAwOC4zMTUuMDIxLjQ1NC4zNS4xNzIuNDEzLjU5MyAxLjQzLjY0MyAxLjUzNC4wNS4xMDQuMTAxLjI0Ni4wMjkuMzg0LS4wNjcuMTQyLS4xMjYuMjA0LS4yMzEuMzI1LS4xMDUuMTIxLS4yMDYuMjEzLS4zMTEuMzQyLS4wOTcuMTEzLS4yMDYuMjM0LS4wODQuNDQyLjEyMi4yMDQuNTQyLjg4NCAxLjE2MSAxLjQzLjc5OS43MDUgMS40NDcuOTMgMS42NzggMS4wMjYuMTcyLjA3MS4zNzguMDU0LjUwNS0uMDc5LjE2LS4xNzEuMzU4LS40NTQuNTU5LS43MzQuMTQzLS4yLjMyNC0uMjI1LjUxMy0uMTU0LjE5My4wNjcgMS4yMTUuNTY3IDEuNDI2LjY3MS4yMS4xMDQuMzQ5LjE1NC40LjI0Mi4wNDkuMDg3LjA0OS41LS4xMjMuOTg0eiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2c+PC9zdmc+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Impzc29jaWFscy1zaGFyZSBqc3NvY2lhbHMtc2hhcmUtZmFjZWJvb2siPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlLWxpbmsiIHRpdGxlPSJTaGFyZSBvbiBGYWNlYm9vayIgYXJpYS1sYWJlbD0iU2hhcmUgb24gRmFjZWJvb2siPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxNiAxNiIgd2lkdGg9IjI4IiBoZWlnaHQ9IjI4IiBmaWxsPSIjRkZGRkZGIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsPSIjRkZGRkZGIiBzdHJva2U9IiMzMzMiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgc3Ryb2tlLW1pdGVybGltaXQ9IjEwIiBkPSJNMTIuNSA2aC0zVjRhMSAxIDAgMCAxIDEtMWgxVi41aC0yYTMgMyAwIDAgMC0zIDNWNmgtMnYyLjVoMnY3aDN2LTdoMmwxLTIuNXoiIGNsaXAtcnVsZT0iZXZlbm9kZCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlIGpzc29jaWFscy1zaGFyZS1tZXNzZW5nZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iZmItbWVzc2VuZ2VyOi8vc2hhcmUvP2xpbms9aHR0cHM6Ly93d3cub3V0c2F2dnkuY29tL29yZ2FuaXNlci90cmVhY2xlcyZhcHBfaWQ9MTc5ODIxMzM1NTQzODIxJnJlZGlyZWN0X3VyaT1odHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlLWxpbmsiIHRpdGxlPSJTaGFyZSBvbiBNZXNzZW5nZXIiIGFyaWEtbGFiZWw9IlNoYXJlIG9uIE1lc3NlbmdlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDE2IDE2IiB3aWR0aD0iMjgiIGhlaWdodD0iMjgiIGZpbGw9IiNGRkZGRkYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxnIGZpbGw9IiNGRkZGRkYiIHN0cm9rZT0iIzMzMyIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2UtbWl0ZXJsaW1pdD0iMTAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNOCAuNUMzLjg1OC41LjUgMy42MDkuNSA3LjQ0NGMwIDIuMTg1IDEuMDkxIDQuMTM1IDIuNzk1IDUuNDA4VjE1LjVsMi41NTQtMS40MDJjLjY4Mi4xODkgMS40MDQuMjkgMi4xNTEuMjkgNC4xNDIgMCA3LjUtMy4xMDkgNy41LTYuOTQ0UzEyLjE0Mi41IDggLjV6IiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJtOC43NDUgOS44NTItMS45MS0yLjAzNy0zLjcyNiAyLjAzN0w3LjIwOCA1LjVsMS45NTcgMi4wMzcgMy42OC0yLjAzN3oiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPjwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlIGpzc29jaWFscy1zaGFyZS1zbmFwY2hhdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5zbmFwY2hhdC5jb20vc2Nhbj9hdHRhY2htZW50VXJsPWh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9vcmdhbmlzZXIvdHJlYWNsZXMmdXRtX3NvdXJjZT1vdXRzYXZ2eSIgY2xhc3M9Impzc29jaWFscy1zaGFyZS1saW5rIiB0aXRsZT0iU2hhcmUgb24gU25hcGNoYXQiIGFyaWEtbGFiZWw9IlNoYXJlIG9uIFNuYXBjaGF0Ij4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxNiAxNiIgd2lkdGg9IjI4IiBoZWlnaHQ9IjI4IiBmaWxsPSIjRkZGRkZGIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsPSIjRkZGRkZGIiBzdHJva2U9IiMzMzMiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCIgZD0iTTE1LjIwNiAxMC45NTRjLTIuMDA1LS4zMjgtMi45MDktMi4zNzMtMi45NDYtMi40NmwtLjAwOC0uMDE3Yy0uMTAzLS4yMDctLjEyNi0uMzc3LS4wNzEtLjUwNy4xMDktLjI1Ni41MjktLjM4OC44MDctLjQ3Ni4wOC0uMDI1LjE1Ni0uMDQ5LjIxOS0uMDc0LjI3NC0uMTA3LjQ2OS0uMjI0LjU5OC0uMzU2LjE1NC0uMTU4LjE4NC0uMzA4LjE4Mi0uNDA3LS4wMDUtLjIzOS0uMTg5LS40NTEtLjQ4Mi0uNTU1YS44Ni44NiAwIDAgMC0uMzI2LS4wNjIuNzUuNzUgMCAwIDAtLjMwNC4wNjEgMS43MTIgMS43MTIgMCAwIDEtLjYyNS4xNzcuNTcuNTcgMCAwIDEtLjIwNy0uMDQ1bC4wMTgtLjI4OS4wMDMtLjA0M2MuMDY0LTEuMDExLjE0NC0yLjI2OC0uMTkxLTMuMDE1YTQuMDgzIDQuMDgzIDAgMCAwLS45MTgtMS4zMDggMy44MjUgMy44MjUgMCAwIDAtMS4wOTgtLjcyQTQuMzg5IDQuMzg5IDAgMCAwIDguMTQ0LjVoLS4wMzdsLS4yNTguMDAzYy0uMzMzIDAtLjk5OS4wNDctMS43MTUuMzZhMy44MiAzLjgyIDAgMCAwLTEuMDk0LjcyIDQuMDgyIDQuMDgyIDAgMCAwLS45MTQgMS4zMDRjLS4zMzUuNzQ2LS4yNTUgMi4wMDMtLjE5MSAzLjAxM3YuMDAybC4wMi4zMzFhLjU5Ny41OTcgMCAwIDEtLjI0Ni4wNDZjLS4xODkgMC0uNDE0LS4wNi0uNjY4LS4xNzhhLjU5NS41OTUgMCAwIDAtLjI1NC0uMDUyLjkwMy45MDMgMCAwIDAtLjQ0OS4xMjVjLS4xNzUuMTAxLS4yODcuMjQ0LS4zMTguNDAzLS4wMi4xMDYtLjAxOS4zMTQuMjE0LjUyNC4xMjguMTE2LjMxNi4yMjQuNTU4LjMxOS4wNjQuMDI1LjEzOS4wNDkuMjE5LjA3NC4yNzguMDg3LjY5OS4yMi44MDguNDc2LjA1Ni4xMy4wMzIuMy0uMDcxLjUwN2wtLjAwNy4wMTdhNC45MzEgNC45MzEgMCAwIDEtLjc1NSAxLjE2MyA0LjIyOSA0LjIyOSAwIDAgMS0uOTEyLjgwMSAzLjM3OCAzLjM3OCAwIDAgMS0xLjI4LjQ5Ni4zNS4zNSAwIDAgMC0uMjk0LjM2NC40NjIuNDYyIDAgMCAwIC4wMzYuMTUybC4wMDEuMDAxYy4wNzIuMTY2LjIzOC4zMDguNTA4LjQzMi4zMy4xNTIuODI0LjI4IDEuNDY3LjM4LjAzMy4wNjEuMDY2LjIxNi4wOS4zMjEuMDI0LjExMi4wNS4yMjguMDg2LjM1LjAzOS4xMzMuMTQxLjI5MS40MDIuMjkxYTEuOSAxLjkgMCAwIDAgLjM0NS0uMDQ4Yy4xOTMtLjAzOC40NTctLjA4OS43ODctLjA4OS4xODMgMCAuMzcyLjAxNi41NjMuMDQ3LjM2OC4wNjEuNjg0LjI4MyAxLjA1MS41NC41MzYuMzc5IDEuMTQ0LjgwNSAyLjA3Mi44MDVhLjk2NS45NjUgMCAwIDAgLjA3Ni0uMDAzYy4wMy4wMDIuMDY4LjAwMy4xMDguMDAzLjkyOCAwIDEuNTM2LS40MjYgMi4wNzItLjgwM2wuMDAxLS4wMDFjLjM2Ny0uMjU3LjY4My0uNDc5IDEuMDUxLS41NC4xOTEtLjAzMS4zOC0uMDQ3LjU2My0uMDQ3LjMxNSAwIC41NjQuMDQuNzg3LjA4My4xNDUuMDI4LjI1OC4wNDIuMzQ1LjA0MmguMDE3YS4zNzkuMzc5IDAgMCAwIC4zODUtLjI4NmMuMDM2LS4xMi4wNjEtLjIzMy4wODYtLjM0Ny4wMjItLjA5OS4wNTctLjI1OC4wODktLjMyLjY0NC0uMSAxLjEzNy0uMjI4IDEuNDY3LS4zOC4yNjktLjEyNC40MzUtLjI2NS41MDctLjQzMWEuNDQuNDQgMCAwIDAgLjAzNy0uMTU0LjM0OC4zNDggMCAwIDAtLjI5My0uMzYyeiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlIGpzc29jaWFscy1zaGFyZS1ibHVlc2t5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vYnNreS5hcHAvaW50ZW50L2NvbXBvc2U/dGV4dD1PdXRTYXZ2eSUyMC0lMjBUcmVhY2xlcyUyMGV2ZW50cyBhbmQgdGlja2V0cyUyMC0lMjBodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlLWxpbmsiIHRpdGxlPSJTaGFyZSBvbiBCbHVlc2t5IiBuYW1lPSJTaGFyZSBvbiBCbHVlc2t5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyOHB4IiBoZWlnaHQ9IjI4cHgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGZpbGw9IiNGRkYiIHN0cm9rZT0iIzAwMDAwMCIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjEiIGQ9Ik02LjMzNSA1LjE0NEM0LjY4MSAzLjk0NSAyIDMuMDE3IDIgNS45N2MwIC41OS4zNSA0Ljk1My41NTYgNS42NjFDMy4yNjkgMTQuMDk0IDUuNjg2IDE0LjM4MSA4IDE0Yy00LjA0NS42NjUtNC44ODkgMy4yMDgtMi42NjcgNS40MUM2LjM2MyAyMC40MjggNy4yNDYgMjEgOCAyMWMyIDAgMy4xMzQtMi43NjkgMy41LTMuNWMuMzMzLS42NjcuNS0xLjE2Ny41LTEuNWMwIC4zMzMuMTY3LjgzMy41IDEuNWMuMzY2LjczMSAxLjUgMy41IDMuNSAzLjVjLjc1NCAwIDEuNjM3LS41NzEgMi42NjctMS41OUMyMC44ODkgMTcuMjA3IDIwLjA0NSAxNC42NjQgMTYgMTRjMi4zMTQuMzggNC43My4wOTQgNS40NDQtMi4zNjljLjIwNi0uNzA4LjU1Ni01LjA3Mi41NTYtNS42NjFjMC0yLjk1My0yLjY4LTIuMDI1LTQuMzM1LS44MjZDMTUuMzcyIDYuODA2IDEyLjkwNSAxMC4xOTIgMTIgMTJjLS45MDUtMS44MDgtMy4zNzItNS4xOTQtNS42NjUtNi44NTYiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlIGpzc29jaWFscy1zaGFyZS1lbWFpbCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX3NlbGYiIGhyZWY9Im1haWx0bzo/c3ViamVjdD1PdXRTYXZ2eSUyMC0lMjBUcmVhY2xlcyUyMGV2ZW50cyBhbmQgdGlja2V0cyZhbXA7Ym9keT1odHRwczovL3d3dy5vdXRzYXZ2eS5jb20vb3JnYW5pc2VyL3RyZWFjbGVzIiBjbGFzcz0ianNzb2NpYWxzLXNoYXJlLWxpbmsiIHRpdGxlPSJTaGFyZSB2aWEgRW1haWwiIGFyaWEtbGFiZWw9IlNoYXJlIHZpYSBFbWFpbCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZlcnNpb249IjEuMSIgeD0iMHB4IiB5PSIwcHgiIHZpZXdCb3g9IjAgMCAyNjcuMDM3IDI2Ny4wMzciIHdpZHRoPSIyOCIgaGVpZ2h0PSIyOCIgZmlsbD0iI0ZGRkZGRiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0eWxlPSJmaWxsOiAjZmZmOyIgZD0iTTIzOS4wODMsNy41MTNsLTE0MS4zMSwxNjZsLTYwLjkxOC0xNC41NjdjLTkuOTcxLTIuMzg0LTEyLjE2OS0xNS41ODUtMy41MDktMjEuMDcyTDIzOS4wODMsNy41MTN6ICAgIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHlsZT0iZmlsbDogI2ZmZjsiIGQ9Ik0yMzkuMDgzLDcuNTEzbC01Mi4zMjQsMjQyLjg1OGMtMi4wMzEsOS40MjYtMTQuMDExLDEyLjQtMjAuMjEzLDUuMDE2bC0zMy41MzMtMzkuOTE1bC0zNS4yNC00MS45NiAgIEwyMzkuMDgzLDcuNTEzeiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBzdHlsZT0iZmlsbDogI2ZmZjsiIHBvaW50cz0iMTMzLjAxMywyMTUuNDczIDkzLjM2MywyNDkuNjQzIDk3Ljc3MywxNzMuNTEzICAgIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggc3R5bGU9ImZpbGw6ICMyMjMxM0Y7IiBkPSJNMjM1LjA2OCwxLjE3OEwyOS4zMzEsMTMxLjUzOGMtMTQuMjgxLDkuMDQ5LTEwLjYzMSwzMC43NzksNS43NzksMzQuNzAxbDU0LjgxMiwxMy4xMDcgICAgbC00LjA0Nyw2OS44NjJjLTAuMzg0LDYuNjIzLDcuNDA3LDEwLjQwNSwxMi4zODMsNi4xMTVsMzMuOS0yOS4yMTRsMjguNjQ0LDM0LjEwMWMxMC4yMywxMi4xNzgsMjkuOTUsNy4yMzMsMzMuMjg5LTguMjYgICAgTDI0Ni40MTQsOS4wOTNDMjQ3LjgzNSwyLjU1OSwyNDAuNjEtMi4zNDksMjM1LjA2OCwxLjE3OHogTTM3LjM2LDE0NC4yMDhsMTYzLjkzLTEwMy44NyAgICBjLTEuMjAzLDEuNDEzLTEwMy40NTMsMTIxLjUyOC0xMDYuMjQ3LDEyNC44MTFMMzguNTk5LDE1MS42NUMzNS4wNjksMTUwLjgwNywzNC4yOSwxNDYuMTU0LDM3LjM2LDE0NC4yMDh6IE0xMDEuODc0LDIzMi40MDcgICAgbDIuMjk1LTM5LjYxN2wxOC4zMzgsMjEuODM1TDEwMS44NzQsMjMyLjQwN3ogTTE3OS40MjcsMjQ4Ljc5MWMtMC43MTksMy4zMzgtNC45NDQsNC4zODMtNy4xNCwxLjc3MWwtNjQuNjkzLTc3LjAxNyAgICBMMjI1LjQ3MywzNS4wN0wxNzkuNDI3LDI0OC43OTF6IiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2c+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgPGRpdiBpZD0idGFiLWNvbnRhaW5lciIgY2xhc3M9InRhYi1jb250YWluZXIiPg0KICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9J2V0YWJzJz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ndGFiJz48YSBocmVmPSIjbGl2ZV9ldmVudHMiPlVwY29taW5nIEV2ZW50cw0KICAgICAgICAgICAgICAgICAgICAgICAgPGVtPjA8L2VtPjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSd0YWInPjxhIGhyZWY9IiNwYXN0X2V2ZW50cyI+UmVjZW50IEV2ZW50czwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJsaXZlX2V2ZW50cyI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImV2ZW50c2NvbnRlbnQiIGNsYXNzPSJhcmVhLXByb2R1Y3Rpb24tbGlzdCBhcmVhLXByb2R1Y3Rpb24tbGlzdC10aGluIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kdWxlLWJveCByb3ciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiANCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImV2ZW50c2NvbnRlbnRlbXB0eSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLWljb24iIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxMHB4OyBtYXJnaW4tdG9wOiAyMHB4OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9pY29uLnBuZyIgYWx0PSJPdXRTYXZ2eSBpY29uIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0ibm9ldmVudHMiIHN0eWxlPSJ0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsiPlRoZXJlIGFyZSBjdXJyZW50bHkgbm8gbGl2ZSBldmVudHMgZm9yIFRyZWFjbGVzIG9uIE91dFNhdnZ5PC9oMz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwYXN0X2V2ZW50cyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwYXN0ZXZlbnRzY29udGVudCIgY2xhc3M9ImFyZWEtcHJvZHVjdGlvbi1saXN0IGFyZWEtcHJvZHVjdGlvbi1saXN0LXRoaW4iPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJldmVudHNjb250ZW50IiBjbGFzcz0ibW9kdWxlLWJveCByb3ciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQtbWFyIGNvbCI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1ib3JkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vZXZlbnQvMjUyNjcvcG9ldGljLWJvZHkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtZmVlZCBsYXRlc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWltYWdlIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSdsYXp5JyBzcmM9J2h0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS93ZWJzaXRlL3ByZWxvYWRlci5qcGcnIGRhdGEtc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vdXRzYXZ2eS9pbWFnZS9mZXRjaC9jX2ZpbGwsaF8yODIscV9hdXRvLHdfNTAwL2h0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS9ldmVudHMvYTE3YTc1NDAtMWZkZS00N2FmLWI5YjQtNzFjYjhlNTMyMmNlLmpwZyIgYWx0PSJQb2V0aWMrQm9keSIgLz4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlLXByaWNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRpY2tldHMgT2ZmIFNhbGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LWRldGFpbHMiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5Qb2V0aWMgQm9keTwvaDU+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGltZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+UGFzdCBFdmVudDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWRkcmVzcyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+VGhlIEZpdmUgQmVsbHMsICBMb25kb248L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNC1tYXIgY29sIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9ldmVudC8yNTE2Ny9zYWRkbGUtYW5kLXN0cnV0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWZlZWQgbGF0ZXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1pbWFnZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0nbGF6eScgc3JjPSdodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9wcmVsb2FkZXIuanBnJyBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3V0c2F2dnkvaW1hZ2UvZmV0Y2gvY19maWxsLGhfMjgyLHFfYXV0byx3XzUwMC9odHRwczovL291dHNhdnZ5bmV3LnMzLmV1LXdlc3QtMi5hbWF6b25hd3MuY29tL2V2ZW50cy9jZDY3YThkMS1hZWExLTQ3YjAtYmZjOS03OWVkNDQ5MTFmODcuanBnIiBhbHQ9IlNhZGRsZSthbmQrU3RydXQiIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZS1wcmljZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaWNrZXRzIE9mZiBTYWxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1kZXRhaWxzIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDU+U2FkZGxlIGFuZCBTdHJ1dDwvaDU+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGltZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+UGFzdCBFdmVudDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWRkcmVzcyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+VGhlIEZpdmUgQmVsbHMsICBMb25kb248L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNC1tYXIgY29sIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9ldmVudC8yNTEzOS90cmVhY2xlcy1yZXNpZGVuY3ktY2xvc2luZy1wYXJ0eSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1mZWVkIGxhdGVzdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtaW1hZ2UiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9J2xhenknIHNyYz0naHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvcHJlbG9hZGVyLmpwZycgZGF0YS1zcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL291dHNhdnZ5L2ltYWdlL2ZldGNoL2NfZmlsbCxoXzI4MixxX2F1dG8sd181MDAvaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL2V2ZW50cy8yNjhlMWFhYS00YzcyLTQ3MjktODk4MS1kOGUyNzI0YzZhNWQuanBnIiBhbHQ9IlRyZWFjbGVzK1Jlc2lkZW5jeStDbG9zaW5nK1BhcnR5IiAvPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmUtcHJpY2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGlja2V0cyBPZmYgU2FsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktZGV0YWlscyI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1PlRyZWFjbGVzIFJlc2lkZW5jeSBDbG9zaW5nIFBhcnR5PC9oNT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5QYXN0IEV2ZW50PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZGRyZXNzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5UaGUgRml2ZSBCZWxscywgIExvbmRvbjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00LW1hciBjb2wiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtYm9yZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3V0c2F2dnkuY29tL2V2ZW50LzI1MDg0L3Jld2luZC1jbGFzc2ljcyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1mZWVkIGxhdGVzdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtaW1hZ2UiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9J2xhenknIHNyYz0naHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvcHJlbG9hZGVyLmpwZycgZGF0YS1zcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL291dHNhdnZ5L2ltYWdlL2ZldGNoL2NfZmlsbCxoXzI4MixxX2F1dG8sd181MDAvaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL2V2ZW50cy82YmI4ZDk4Yy1lYzA2LTRlNDMtOGJlOS04OTcyOWIxZjk5Y2YuanBnIiBhbHQ9IlJld2luZCtDbGFzc2ljcyIgLz4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlLXByaWNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRpY2tldHMgT2ZmIFNhbGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LWRldGFpbHMiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5SZXdpbmQgQ2xhc3NpY3M8L2g1Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpbWUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlBhc3QgRXZlbnQ8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFkZHJlc3MiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlRoZSBGaXZlIEJlbGxzLCAgTG9uZG9uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQtbWFyIGNvbCI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1ib3JkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vZXZlbnQvMjUwNjgvcXVlZXItZ2FtZXMtc29jaWFsIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWZlZWQgbGF0ZXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1pbWFnZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0nbGF6eScgc3JjPSdodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9wcmVsb2FkZXIuanBnJyBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3V0c2F2dnkvaW1hZ2UvZmV0Y2gvY19maWxsLGhfMjgyLHFfYXV0byx3XzUwMC9odHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vZXZlbnRzLzNlZTIyODJhLTdkYjctNDk5NC04OWI4LWQ3MjQwOTllNTdkNC5qcGciIGFsdD0iUXVlZXIrR2FtZXMrU29jaWFsIiAvPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmUtcHJpY2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGlja2V0cyBPZmYgU2FsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktZGV0YWlscyI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1PlF1ZWVyIEdhbWVzIFNvY2lhbDwvaDU+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGltZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+UGFzdCBFdmVudDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWRkcmVzcyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+VGhlIEZpdmUgQmVsbHMsICBMb25kb248L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNC1tYXIgY29sIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9ldmVudC8yNTA1Ny90cmVhY2xlcy1yZXNpZGVuY3ktb3BlbmluZyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1mZWVkIGxhdGVzdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtaW1hZ2UiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9J2xhenknIHNyYz0naHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvcHJlbG9hZGVyLmpwZycgZGF0YS1zcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL291dHNhdnZ5L2ltYWdlL2ZldGNoL2NfZmlsbCxoXzI4MixxX2F1dG8sd181MDAvaHR0cHM6Ly9vdXRzYXZ2eW5ldy5zMy5ldS13ZXN0LTIuYW1hem9uYXdzLmNvbS9ldmVudHMvZGRlMDMwYTQtNTkyNi00NGVjLWJmZDctZmFlMTEzMTA1OTBhLmpwZyIgYWx0PSJUcmVhY2xlcytSZXNpZGVuY3krT3BlbmluZyIgLz4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlLXByaWNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRpY2tldHMgT2ZmIFNhbGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LWRldGFpbHMiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5UcmVhY2xlcyBSZXNpZGVuY3kgT3BlbmluZzwvaDU+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGltZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+UGFzdCBFdmVudDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWRkcmVzcyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+VGhlIEZpdmUgQmVsbHMsICBMb25kb248L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNC1tYXIgY29sIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9ldmVudC8yNDkwNC9xdWVlci1wb2V0cnkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtZmVlZCBsYXRlc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWltYWdlIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSdsYXp5JyBzcmM9J2h0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS93ZWJzaXRlL3ByZWxvYWRlci5qcGcnIGRhdGEtc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vdXRzYXZ2eS9pbWFnZS9mZXRjaC9jX2ZpbGwsaF8yODIscV9hdXRvLHdfNTAwL2h0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS9ldmVudHMvY2U3YmIyMTItY2RjZS00YjMwLTlmNTItYTQxM2NlM2EyZDllLmpwZyIgYWx0PSJRdWVlcitQb2V0cnkiIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZS1wcmljZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaWNrZXRzIE9mZiBTYWxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1kZXRhaWxzIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDU+UXVlZXIgUG9ldHJ5PC9oNT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5QYXN0IEV2ZW50PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZGRyZXNzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5UaGUgRml2ZSBCZWxscywgIExvbmRvbjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00LW1hciBjb2wiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtYm9yZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3V0c2F2dnkuY29tL2V2ZW50LzI0OTAzL3RyZWFjbGVzLXJlc2lkZW5jeS1vcGVuaW5nIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWZlZWQgbGF0ZXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1pbWFnZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0nbGF6eScgc3JjPSdodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9wcmVsb2FkZXIuanBnJyBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3V0c2F2dnkvaW1hZ2UvZmV0Y2gvY19maWxsLGhfMjgyLHFfYXV0byx3XzUwMC9odHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vZXZlbnRzLzBmMmE0Yjc0LTcwNjUtNDBhNi05YmMyLWY2Y2JlMzgxOWE5My5qcGciIGFsdD0iVHJlYWNsZXMrUmVzaWRlbmN5K09wZW5pbmciIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZS1wcmljZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaWNrZXRzIE9mZiBTYWxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1kZXRhaWxzIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDU+VHJlYWNsZXMgUmVzaWRlbmN5IE9wZW5pbmc8L2g1Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpbWUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlBhc3QgRXZlbnQ8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFkZHJlc3MiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlRoZSBGaXZlIEJlbGxzLCAgTG9uZG9uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQtbWFyIGNvbCI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1ib3JkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vZXZlbnQvMjQ4OTYvd2lsbC15b3UtYmUtb3VyLXRyZWFjbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtZmVlZCBsYXRlc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWltYWdlIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSdsYXp5JyBzcmM9J2h0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS93ZWJzaXRlL3ByZWxvYWRlci5qcGcnIGRhdGEtc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vdXRzYXZ2eS9pbWFnZS9mZXRjaC9jX2ZpbGwsaF8yODIscV9hdXRvLHdfNTAwL2h0dHBzOi8vb3V0c2F2dnluZXcuczMuZXUtd2VzdC0yLmFtYXpvbmF3cy5jb20vZXZlbnRzL2EyODg2MWU4LWQ0YWItNDQ0My04ZGVjLWNkYzVjYzFkODNmNi5qcGciIGFsdD0iV2lsbCt5b3UrYmUrb3VyK1RyZWFjbGUlM2YiIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZS1wcmljZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaWNrZXRzIE9mZiBTYWxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1kZXRhaWxzIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDU+V2lsbCB5b3UgYmUgb3VyIFRyZWFjbGU/PC9oNT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5QYXN0IEV2ZW50PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZGRyZXNzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5MaXR0bGUgTmFuJ3MgQmFyLCAgTG9uZG9uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQtbWFyIGNvbCI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1ib3JkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vZXZlbnQvMjQ4MDEvc2lwLXNrZXRjaC1saXZlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWZlZWQgbGF0ZXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1pbWFnZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0nbGF6eScgc3JjPSdodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9wcmVsb2FkZXIuanBnJyBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3V0c2F2dnkvaW1hZ2UvZmV0Y2gvY19maWxsLGhfMjgyLHFfYXV0byx3XzUwMC9odHRwczovL291dHNhdnZ5bmV3LnMzLmV1LXdlc3QtMi5hbWF6b25hd3MuY29tL2V2ZW50cy9hYWNiMGZhZS0wM2YwLTQ4NDgtOGE2My1hMjI5OWI2NGU5MDUuanBnIiBhbHQ9IlNpcCslMjYrU2tldGNoK0xpdmUiIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZS1wcmljZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaWNrZXRzIE9mZiBTYWxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1kZXRhaWxzIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDU+U2lwICYgU2tldGNoIExpdmU8L2g1Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpbWUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlBhc3QgRXZlbnQ8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFkZHJlc3MiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlRoZSBGaXZlIEJlbGxzLCAgTG9uZG9uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQtbWFyIGNvbCI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1ib3JkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vZXZlbnQvMjQ1ODQvYm9wcy1iZWx0ZXJzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWZlZWQgbGF0ZXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1pbWFnZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0nbGF6eScgc3JjPSdodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9wcmVsb2FkZXIuanBnJyBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3V0c2F2dnkvaW1hZ2UvZmV0Y2gvY19maWxsLGhfMjgyLHFfYXV0byx3XzUwMC9odHRwczovL291dHNhdnZ5bmV3LnMzLmV1LXdlc3QtMi5hbWF6b25hd3MuY29tL2V2ZW50cy80M2ZjZTBmOC03OWI4LTQ1ZTEtOTg3ZC01MjgyYTdmMmYyYmMuanBnIiBhbHQ9IkJvcHMrJTI2K0JlbHRlcnMiIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZS1wcmljZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaWNrZXRzIE9mZiBTYWxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1kZXRhaWxzIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDU+Qm9wcyAmIEJlbHRlcnM8L2g1Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpbWUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlBhc3QgRXZlbnQ8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFkZHJlc3MiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlRoZSBGaXZlIEJlbGxzLCAgTG9uZG9uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQtbWFyIGNvbCI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1ib3JkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vZXZlbnQvMjQ1ODMvaG90LWd5YWwtZnJlcXVlbmN5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWZlZWQgbGF0ZXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1pbWFnZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0nbGF6eScgc3JjPSdodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9wcmVsb2FkZXIuanBnJyBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3V0c2F2dnkvaW1hZ2UvZmV0Y2gvY19maWxsLGhfMjgyLHFfYXV0byx3XzUwMC9odHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vZXZlbnRzL2U3YzcxNjVjLTU4YTgtNDM5NC1iZDFiLTAyZmQ2MmU0ZmQ4ZS5qcGciIGFsdD0iSG90K0d5YWwrRnJlcXVlbmN5IiAvPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmUtcHJpY2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGlja2V0cyBPZmYgU2FsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktZGV0YWlscyI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1PkhvdCBHeWFsIEZyZXF1ZW5jeTwvaDU+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGltZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+UGFzdCBFdmVudDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWRkcmVzcyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+VGhlIEZpdmUgQmVsbHMsICBMb25kb248L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNC1tYXIgY29sIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9ldmVudC8yNDU4Mi9tc3RpemFqZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1mZWVkIGxhdGVzdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtaW1hZ2UiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9J2xhenknIHNyYz0naHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvcHJlbG9hZGVyLmpwZycgZGF0YS1zcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL291dHNhdnZ5L2ltYWdlL2ZldGNoL2NfZmlsbCxoXzI4MixxX2F1dG8sd181MDAvaHR0cHM6Ly9vdXRzYXZ2eW5ldy5zMy5ldS13ZXN0LTIuYW1hem9uYXdzLmNvbS9ldmVudHMvYWIyMTZhOTQtODlkYi00M2ZhLTgxNGUtODYyNzI5NDE2OTBhLmpwZyIgYWx0PSJNJWMzJWFic3RpemFqZSIgLz4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlLXByaWNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRpY2tldHMgT2ZmIFNhbGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LWRldGFpbHMiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5Nw6tzdGl6YWplPC9oNT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5QYXN0IEV2ZW50PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZGRyZXNzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5UaGUgRml2ZSBCZWxscywgIExvbmRvbjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00LW1hciBjb2wiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtYm9yZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3V0c2F2dnkuY29tL2V2ZW50LzI0NTgxL3F1aXotbWUtYmFieS1vbmUtbW9yZS10aW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWZlZWQgbGF0ZXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1pbWFnZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0nbGF6eScgc3JjPSdodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9wcmVsb2FkZXIuanBnJyBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3V0c2F2dnkvaW1hZ2UvZmV0Y2gvY19maWxsLGhfMjgyLHFfYXV0byx3XzUwMC9odHRwczovL291dHNhdnZ5bmV3LnMzLmV1LXdlc3QtMi5hbWF6b25hd3MuY29tL2V2ZW50cy9jYjIyOGQ5Ni1hZDI4LTRjYWYtOWJhNC0xOGFkYjA3OGYyZjEuanBnIiBhbHQ9IlF1aXorTWUlMmMrQmFieSUyYytPbmUrTW9yZStUaW1lISIgLz4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlLXByaWNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRpY2tldHMgT2ZmIFNhbGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5LWRldGFpbHMiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5RdWl6IE1lLCBCYWJ5LCBPbmUgTW9yZSBUaW1lITwvaDU+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGltZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+UGFzdCBFdmVudDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWRkcmVzcyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+VGhlIEZpdmUgQmVsbHMsICBMb25kb248L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNC1tYXIgY29sIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9ldmVudC8yNDU4MC9mbG93ZXJ0b3AtYW5kLWJvdHRvbXMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtZmVlZCBsYXRlc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWltYWdlIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSdsYXp5JyBzcmM9J2h0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS93ZWJzaXRlL3ByZWxvYWRlci5qcGcnIGRhdGEtc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vdXRzYXZ2eS9pbWFnZS9mZXRjaC9jX2ZpbGwsaF8yODIscV9hdXRvLHdfNTAwL2h0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS9ldmVudHMvZTAxNzYxMWMtYTQ0Mi00OGRjLWFlYTctNGVmNTAwMmNkYTI2LmpwZyIgYWx0PSJGbG93ZXJ0b3ArYW5kK0JvdHRvbXMiIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZS1wcmljZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaWNrZXRzIE9mZiBTYWxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1kZXRhaWxzIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDU+Rmxvd2VydG9wIGFuZCBCb3R0b21zPC9oNT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5QYXN0IEV2ZW50PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZGRyZXNzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5UaGUgRml2ZSBCZWxscywgIExvbmRvbjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00LW1hciBjb2wiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtYm9yZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3V0c2F2dnkuY29tL2V2ZW50LzI0NTc5L3N0cmFwcGVkLWZvci1sb3ZlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWZlZWQgbGF0ZXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1pbWFnZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0nbGF6eScgc3JjPSdodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9wcmVsb2FkZXIuanBnJyBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3V0c2F2dnkvaW1hZ2UvZmV0Y2gvY19maWxsLGhfMjgyLHFfYXV0byx3XzUwMC9odHRwczovL291dHNhdnZ5bmV3LnMzLmV1LXdlc3QtMi5hbWF6b25hd3MuY29tL2V2ZW50cy84MDI0OGYyNC1mNzI4LTRhOGItODM1Ni03YmRlYmE5YTA0MDUuanBnIiBhbHQ9IlN0cmFwcGVkK2ZvcitMb3ZlIiAvPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmUtcHJpY2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGlja2V0cyBPZmYgU2FsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktZGV0YWlscyI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1PlN0cmFwcGVkIGZvciBMb3ZlPC9oNT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5QYXN0IEV2ZW50PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZGRyZXNzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5Ij5UaGUgRml2ZSBCZWxscywgIExvbmRvbjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00LW1hciBjb2wiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtYm9yZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3V0c2F2dnkuY29tL2V2ZW50LzI0NDEzL3F1ZWVyLXlvZ2EtZ2F0aGVyaW5nIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWZlZWQgbGF0ZXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1pbWFnZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0nbGF6eScgc3JjPSdodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9wcmVsb2FkZXIuanBnJyBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3V0c2F2dnkvaW1hZ2UvZmV0Y2gvY19maWxsLGhfMjgyLHFfYXV0byx3XzUwMC9odHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vZXZlbnRzLzY2OWEwM2NmLTBjMjItNDJkZS1hOTE3LWJlYjQxODNiNWVhNi5qcGciIGFsdD0iUXVlZXIrWW9nYStHYXRoZXJpbmciIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZS1wcmljZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaWNrZXRzIE9mZiBTYWxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1kZXRhaWxzIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDU+UXVlZXIgWW9nYSBHYXRoZXJpbmc8L2g1Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpbWUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlBhc3QgRXZlbnQ8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFkZHJlc3MiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPkxpdHRsZSBOYW4ncyBCYXIsICBMb25kb248L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNC1tYXIgY29sIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9ldmVudC8yNDI0NS90cmVhY2xlcy14LWJlbmRlci1kZWZlbmRlcnMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtZmVlZCBsYXRlc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWltYWdlIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSdsYXp5JyBzcmM9J2h0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS93ZWJzaXRlL3ByZWxvYWRlci5qcGcnIGRhdGEtc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vdXRzYXZ2eS9pbWFnZS9mZXRjaC9jX2ZpbGwsaF8yODIscV9hdXRvLHdfNTAwL2h0dHBzOi8vb3V0c2F2dnluZXcuczMuZXUtd2VzdC0yLmFtYXpvbmF3cy5jb20vZXZlbnRzLzBjNTk2Zjg2LTIwNTktNGIwZC05NDE2LTg0NjA4ZTEyZGFjMC5qcGciIGFsdD0iVHJlYWNsZXMreCtCZW5kZXIrRGVmZW5kZXJzIiAvPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmUtcHJpY2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGlja2V0cyBPZmYgU2FsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktZGV0YWlscyI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1PlRyZWFjbGVzIHggQmVuZGVyIERlZmVuZGVyczwvaDU+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGltZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+UGFzdCBFdmVudDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWRkcmVzcyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+Wmh1bGluIEhpZGRlbiBWaWxsYWdlLCAgTG9uZG9uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQtbWFyIGNvbCI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1ib3JkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vZXZlbnQvMjQwNTQvdHJlYWNsZXMtY2FyYWJpbnllciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1mZWVkIGxhdGVzdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtaW1hZ2UiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9J2xhenknIHNyYz0naHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvcHJlbG9hZGVyLmpwZycgZGF0YS1zcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL291dHNhdnZ5L2ltYWdlL2ZldGNoL2NfZmlsbCxoXzI4MixxX2F1dG8sd181MDAvaHR0cHM6Ly9vdXRzYXZ2eW5ldy5zMy5ldS13ZXN0LTIuYW1hem9uYXdzLmNvbS9ldmVudHMvYzNhMDZiOWQtMDI2Zi00MjljLTk5YjMtY2JjNzZiYzAxMjA2LmpwZyIgYWx0PSJUcmVhY2xlcytjYXJhYmlOWUVSIiAvPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmUtcHJpY2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGlja2V0cyBPZmYgU2FsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktZGV0YWlscyI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1PlRyZWFjbGVzIGNhcmFiaU5ZRVI8L2g1Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpbWUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlBhc3QgRXZlbnQ8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFkZHJlc3MiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPkxpdHRsZSBOYW4ncyBCYXIsICBMb25kb248L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNC1tYXIgY29sIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9ldmVudC8yMzU2MS9xdWVlci1zd2FuYS1mdW5kcmFpc2VyLWZvci1wYWxlc3RpbmUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbnQtZmVlZCBsYXRlc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWltYWdlIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSdsYXp5JyBzcmM9J2h0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS93ZWJzaXRlL3ByZWxvYWRlci5qcGcnIGRhdGEtc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vdXRzYXZ2eS9pbWFnZS9mZXRjaC9jX2ZpbGwsaF8yODIscV9hdXRvLHdfNTAwL2h0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS9ldmVudHMvN2ZkODI3M2ItYTYzOC00ZGJiLWFlYzEtNDI1ZGYwMzk0NWQ0LmpwZyIgYWx0PSJRdWVlcitTV0FOQStGdW5kcmFpc2VyK2ZvcitQYWxlc3RpbmUrIiAvPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmUtcHJpY2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGlja2V0cyBPZmYgU2FsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktZGV0YWlscyI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1PlF1ZWVyIFNXQU5BIEZ1bmRyYWlzZXIgZm9yIFBhbGVzdGluZSA8L2g1Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpbWUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPlBhc3QgRXZlbnQ8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFkZHJlc3MiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiPkxpdHRsZSBOYW7igJlzIEJhciAyLjAsICBMb25kb248L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNC1tYXIgY29sIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbS9ldmVudC8yMzQ0Mi90cmVhY2xlcy1mdW5kcmFpc2VyLWZvci1qZXNzLWhhbmRzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW50LWZlZWQgbGF0ZXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJldmVudC1pbWFnZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0nbGF6eScgc3JjPSdodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9wcmVsb2FkZXIuanBnJyBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3V0c2F2dnkvaW1hZ2UvZmV0Y2gvY19maWxsLGhfMjgyLHFfYXV0byx3XzUwMC9odHRwczovL291dHNhdnZ5bmV3LnMzLmV1LXdlc3QtMi5hbWF6b25hd3MuY29tL2V2ZW50cy80NTZjMjIyMC1lMWQ2LTRhNjMtYWM1OC02Yzk4MjcwMjE2MTMuanBnIiBhbHQ9IlRyZWFjbGVzK0Z1bmRyYWlzZXIrZm9yK0plc3MrSGFuZHMiIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmVhdHVyZS1wcmljZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaWNrZXRzIE9mZiBTYWxlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1kZXRhaWxzIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDU+VHJlYWNsZXMgRnVuZHJhaXNlciBmb3IgSmVzcyBIYW5kczwvaDU+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGltZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+UGFzdCBFdmVudDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWRkcmVzcyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29weSI+VGhlIE9sZCBOdW5zaGVhZCwgIExvbmRvbjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwYWdpbmF0aW9uIj48L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgIDwvZGl2Pg0KDQogICAgPC9kaXY+DQoNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ic2lkZWJhciIgY2xhc3M9IiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gY29udGFpbmVyIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgDQo8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4ICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSBTRUNUSU9OIC0tPg0KICAgICAgICAgICAgICAgICAgICANCg0KPGRpdiBpZD0iZm9vdGVyIj4NCg0KICAgIDxkaXYgY2xhc3M9ImZvb3RlciIgZGF0YS1pcz0iZm9vdGVyVGV4dCI+DQoNCiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyLXRvcCI+DQoNCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0xMiBjb2wtbWQtMTIgY29sLXNtLTEyIGNvbC14cy0xMiBjb2wiPg0KDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyLXNvY2lhbCBmb290ZXItdG9wIj4NCg0KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgaXRlbXByb3A9ImxvZ28iIHdpZHRoPSIxODAiIGhlaWdodD0iNDYiIGNsYXNzPSJsb2dvIiBzcmM9Imh0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS93ZWJzaXRlL291dHNhdnZ5bG9nby1uZXcucG5nIiBhbHQ9Ik91dFNhdnZ5IC0gRGlzY292ZXIgZXZlbnRzIGFuZCBib29rIHRpY2tldHMuIEJ1eSB0aWNrZXRzIHF1aWNrbHkgYW5kIHNlY3VyZWx5Ij4NCiAgICAgICAgICAgICAgICAgICAgPC9hPg0KDQogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImZvb3Rlci1hcHBzIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWN0aW9ucyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biB1aS1ncmFkaWVudC1ncmVlbiBidG4tYXBwLXN0b3JlIGJ0bi1kb3dubG9hZCBzaGFkb3ctbGciIGhyZWY9Imh0dHBzOi8vYXBwcy5hcHBsZS5jb20vZ2IvYXBwL291dHNhdnZ5L2lkNzIyMzQ0Mjc2IiB0YXJnZXQ9Il9ibGFuayI+PHNwYW4+QXZhaWxhYmxlIG9uIHRoZTwvc3Bhbj4gPHNwYW4+QXBwIFN0b3JlPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIHVpLWdyYWRpZW50LWJsdWUgYnRuLWdvb2dsZS1wbGF5IGJ0bi1kb3dubG9hZCBzaGFkb3ctbGciIGhyZWY9Imh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2FwcHMvZGV0YWlscz9pZD1jb20ub3V0c2F2dnlhcHAiIHRhcmdldD0iX2JsYW5rIj48c3Bhbj5BdmFpbGFibGUgb24gPC9zcGFuPjxzcGFuPkdvb2dsZSBQbGF5PC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTEyIGNvbC1tZC0xMiBjb2wtc20tMTIgY29sLXhzLTEyIGNvbCI+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXItc29jaWFsIj4NCg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXJfX2xpbmtzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC1pbmxpbmUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY29udGFjdHVzIiB0aXRsZT0iQ29udGFjdCB1cyI+Q29udGFjdDwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVzZWxsIiB0aXRsZT0iV2hhdCBpcyBUaWNrZXQgUmVTZWxsIGFuZCBob3cgdG8gdXNlIFJlU2VsbCBvbiBPdXRTYXZ2eSI+UmVTZWxsPC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hYm91dHVzIiB0aXRsZT0iQWJvdXQgT3V0U2F2dnkgLSBDcmVhdGUsIHNoYXJlLCBkaXNjb3ZlciAmIGF0dGVuZCBFdmVudHMiPkFib3V0PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9kZXZlbG9wZXIiIHRpdGxlPSJUaGUgT3V0U2F2dnkgQVBJLCBwdWxsIGluIGZlZWRzIG9mIGRhdGEgZm9yIGV2ZW50cyI+RGV2ZWxvcGVyPC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii90ZXJtcyIgdGl0bGU9Ik91dFNhdnZ5IFRlcm1zIGFuZCBDb25kaXRpb25zIj5UZXJtcyAmIENvbmRpdGlvbnM8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3ByaXZhY3lwb2xpY3kiIHRpdGxlPSJPdXRTYXZ2eSBQcml2YWN5IFBvbGljeSI+UHJpdmFjeSBQb2xpY3k8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2Nvb2tpZXBvbGljeSIgdGl0bGU9Ik91dFNhdnZ5IENvb2tpZSBQb2xpY3kiPkNvb2tpZSBQb2xpY3k8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQoNCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9zZWxsdGlja2V0cyIgY2xhc3M9InBhcnRuZXJzLWJ1dHRvbiIgdGFyZ2V0PSJfYmxhbmsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkNyZWF0ZSBFdmVudHMgb24gT3V0U2F2dnk8L3NwYW4+ICA8L2E+DQogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0xMiBjb2wtbWQtMTIgY29sLXNtLTEyIGNvbC14cy0xMiBjb2wiPg0KDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyLXNvY2lhbCI+DQogICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJsb2NhdGlvbkJ0biI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iZm9vdGVyLWxvY2F0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSI4MDBweCIgaGVpZ2h0PSI4MDBweCIgdmlld0JveD0iMCAwIDEwMjQgMTAyNCIgZmlsbD0iIzAwMDAwMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNODAwIDQxNmEyODggMjg4IDAgMSAwLTU3NiAwYzAgMTE4LjE0NCA5NC41MjggMjcyLjEyOCAyODggNDU2LjU3NkM3MDUuNDcyIDY4OC4xMjggODAwIDUzNC4xNDQgODAwIDQxNnpNNTEyIDk2MEMyNzcuMzEyIDc0Ni42ODggMTYwIDU2NS4zMTIgMTYwIDQxNmEzNTIgMzUyIDAgMCAxIDcwNCAwYzAgMTQ5LjMxMi0xMTcuMzEyIDMzMC42ODgtMzUyIDU0NHoiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNNTEyIDUxMmE5NiA5NiAwIDEgMCAwLTE5MiA5NiA5NiAwIDAgMCAwIDE5MnptMCA2NGExNjAgMTYwIDAgMSAxIDAtMzIwIDE2MCAxNjAgMCAwIDEgMCAzMjB6IiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+U2lkY3VwPC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlcl9fc29jaWFsIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC13cmFwcGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWhvbGRlciBpbmZvcG9wIiB0aXRsZT0iIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJWaXNhIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMzkiIGhlaWdodD0iMjYiIHZpZXdCb3g9IjAgMCAzOSAyNiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMS44IDBoMzUuNGMxIDAgMS44LjggMS44IDEuOXYyMi4zYzAgMS0uOCAxLjktMS44IDEuOUgxLjhjLTEgMC0xLjgtLjgtMS44LTEuOVYxLjlDMCAuOC44IDAgMS44IDB6IiBmaWxsPSIjZjVmNmY4Ij48L3BhdGg+PHBhdGggZD0iTTEuOCAwaDM1LjRjMSAwIDEuOC44IDEuOCAxLjl2NC4zSDBWMS45QzAgLjguOCAwIDEuOCAweiIgZmlsbD0iIzAwNzFjZSI+PC9wYXRoPjxwYXRoIGQ9Ik0wIDE5LjhoMzl2NC4zYzAgMS0uOCAxLjktMS44IDEuOUgxLjhjLTEgMC0xLjgtLjgtMS44LTEuOXYtNC4zeiIgZmlsbD0iI2ZiOTEyMiI+PC9wYXRoPjxwYXRoIGQ9Ik0xNS43IDE3LjJsMS4xLTcuMmgxLjhsLTEuMSA3LjJoLTEuOHptOC4zLTdjLS40LS4xLS45LS4zLTEuNi0uMy0xLjggMC0zIDEtMyAyLjQgMCAxIC45IDEuNiAxLjYgMiAuNy40LjkuNi45LjkgMCAuNS0uNi43LTEuMS43LS43IDAtMS4xLS4xLTEuNy0uNGwtLjItLjEtLjMgMS42Yy40LjIgMS4yLjQgMiAuNCAxLjkgMCAzLjEtMSAzLjEtMi41IDAtLjgtLjUtMS40LTEuNS0yLS42LS4zLTEtLjYtMS0uOSAwLS4zLjMtLjYgMS0uNi42IDAgMSAuMSAxLjMuM2wuMi4xLjMtMS42em0yLjQgNC41Yy4xLS40LjctMiAuNy0ycy4xLS40LjItLjdsLjEuNnMuMyAxLjcuNCAyLjFoLTEuNHptLTE0LjItLjhsLjIgMSAxLjgtNC45aDEuOWwtMi44IDcuMmgtMS45TDkuOCAxMWMtLjYtLjMtMS4yLS42LTEuOS0uOHYtLjFoMi45Yy40IDAgLjcuMi44LjZsLjYgMy4yek0yOC42IDEwaC0xLjRjLS40IDAtLjguMS0uOS42bC0yLjcgNi42aDEuOXMuMy0uOS40LTEuMWgyLjNjLjEuMy4yIDEuMS4yIDEuMUgzMEwyOC42IDEweiIgZmlsbD0iIzAwNzFjZSI+PC9wYXRoPjwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaG9sZGVyIGluZm9wb3AiIHRpdGxlPSIiIGRhdGEtb3JpZ2luYWwtdGl0bGU9Ik1hc3RlcmNhcmQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIzOSIgaGVpZ2h0PSIyNiIgdmlld0JveD0iMCAwIDM5IDI2Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xLjggMGgzNS40YzEgMCAxLjguOCAxLjggMS45djIyLjNjMCAxLS44IDEuOS0xLjggMS45SDEuOGMtMSAwLTEuOC0uOC0xLjgtMS45VjEuOUMwIC44LjggMCAxLjggMHoiIGZpbGw9IiNmNWY2ZjgiPjwvcGF0aD48cGF0aCBkPSJNMTkuNSA3LjdjMS4yLTEgMi43LTEuNiA0LjMtMS42IDMuOCAwIDYuOCAzIDYuOCA2LjhzLTMuMSA2LjgtNi44IDYuOGMtMS42IDAtMy4yLS42LTQuMy0xLjZDMjEgMTcgMjIgMTUuMSAyMiAxM3MtMS00LTIuNS01LjN6IiBmaWxsPSIjZjdhMjEzIj48L3BhdGg+PHBhdGggZD0iTTE5LjUgNy43Yy0xLjItMS0yLjctMS42LTQuMy0xLjYtMy44IDAtNi44IDMtNi44IDYuOHMzLjEgNi44IDYuOCA2LjhjMS42IDAgMy4yLS42IDQuMy0xLjZDMTggMTcgMTcgMTUuMSAxNyAxM3MxLTQgMi41LTUuM3oiIGZpbGw9IiNlYjE0MWMiPjwvcGF0aD48cGF0aCBkPSJNMTkuNSAxOC4zQzIxIDE3IDIyIDE1LjEgMjIgMTNzLTEtNC0yLjUtNS4zQzE4IDkgMTcgMTAuOSAxNyAxM3MxIDQgMi41IDUuM3oiIGZpbGw9IiNmZTY0MTIiPjwvcGF0aD48cGF0aCBkPSJNMzcuMi42Yy43IDAgMS4yLjUgMS4yIDEuMnYyMi4zYzAgLjctLjUgMS4yLTEuMiAxLjJIMS44Yy0uNyAwLTEuMi0uNS0xLjItMS4yVjEuOWMwLS43LjUtMS4yIDEuMi0xLjJoMzUuNG0wLS43SDEuOEMuOCAwIDAgLjggMCAxLjl2MjIuM2MwIDEgLjggMS45IDEuOCAxLjloMzUuNGMxIDAgMS44LS44IDEuOC0xLjlWMS45QzM5IC44IDM4LjIgMCAzNy4yIDB6IiBmaWxsPSIjZGNkZGRmIj48L3BhdGg+PC9zdmc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ob2xkZXIgaW5mb3BvcCIgdGl0bGU9IiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iQW1leCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjM5IiBoZWlnaHQ9IjI2IiB2aWV3Qm94PSIwIDAgMzkgMjYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEuOCAwaDM1LjRjMSAwIDEuOC44IDEuOCAxLjl2MjIuM2MwIDEtLjggMS45LTEuOCAxLjlIMS44Yy0xIDAtMS44LS44LTEuOC0xLjlWMS45QzAgLjguOCAwIDEuOCAweiIgZmlsbD0iIzAwODFjOSI+PC9wYXRoPjxwYXRoIGQ9Ik0zMSAxMi45bDIuOC0zLjJoLTQuMWwtLjcuOS0uNy0uOUgxNy41bC0uNyAxLjgtLjgtMS44aC0zLjV2Mi41bC0xLjItMi41SDguN2wtMy4yIDYuN0g5bC41LTEuMWgxbC41IDEuMWgxN2wuOS0xLjEuOSAxLjFIMzRsLTMtMy41em0tMTguMSAyLjVoLTEuNGwtLjUtMS4xSDguOGwtLjUgMS4xSDdsMi4zLTQuN2gxLjRsMi4yIDQuN3ptNy4xIDBoLTEuM1YxMmwtMS41IDMuNGgtMUwxNC43IDEydjMuM2gtMS4zdi00LjdoMS45bDEuNCAzLjMgMS4zLTMuM2gydjQuOHptNS44IDBoLTQuNnYtNC43aDQuNnYuOWgtMy4ydjFoMi45di44aC0yLjl2MS4yaDMuM3YuOHptMy4xLTEuN2wtMS40IDEuNkgyNmwyLjEtMi41LTItMi4zaDEuNmwxLjIgMS41IDEuMi0xLjVoMS41bC0yIDIuMyAyLjEgMi41aC0xLjZsLTEuMi0xLjZ6IiBmaWxsPSIjZmZmIj48L3BhdGg+PHBhdGggZmlsbD0iI2ZmZiIgZD0iTTkuOSAxMS44bC0uOCAxLjdoMS42bC0uNy0xLjd6Ij48L3BhdGg+PC9zdmc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ob2xkZXIgaW5mb3BvcCIgdGl0bGU9IiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iQXBwbGUgUGF5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjciIGhlaWdodD0iMTgiIHZpZXdCb3g9IjAgMCAzOSAyNiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMS44MiAwaDM1LjM2YzEgMCAxLjgyLjgzIDEuODIgMS44NXYyMi4zYzAgMS4wMi0uODIgMS44NS0xLjgyIDEuODVIMS44MkMuODIgMjYgMCAyNS4xNyAwIDI0LjE1VjEuODVDMCAuODMuODIgMCAxLjgyIDB6IiBmaWxsPSIjZjVmNmY4Ij48L3BhdGg+PHBhdGggZD0iTTM3LjE4LjY1Yy42NSAwIDEuMTguNTQgMS4xOCAxLjJ2MjIuM2MwIC42Ni0uNTMgMS4yLTEuMTggMS4ySDEuODJjLS42NSAwLTEuMTgtLjU0LTEuMTgtMS4yVjEuODVjMC0uNjYuNTMtMS4yIDEuMTgtMS4yaDM1LjM2bTAtLjY1SDEuODJDLjgyIDAgMCAuODMgMCAxLjg1djIyLjNDMCAyNS4xNy44MiAyNiAxLjgyIDI2aDM1LjM2YzEuMDEgMCAxLjgyLS44MyAxLjgyLTEuODVWMS44NUMzOSAuODMgMzguMTggMCAzNy4xOCAweiIgb3BhY2l0eT0iMC4xIj48L3BhdGg+PGc+PHBhdGggZD0iTTEwLjU3IDkuMWMuMzItLjQuNTQtLjkzLjQ4LTEuNDgtLjQ3LjAyLTEuMDQuMzEtMS4zNy43MS0uMy4zNC0uNTYuOS0uNDkgMS40Mi41My4wNSAxLjA1LS4yNiAxLjM4LS42NU0xMS4wNSA5Ljg2Yy0uNzYtLjA1LTEuNDEuNDMtMS43Ny40My0uMzYgMC0uOTItLjQxLTEuNTItLjQtLjc4LjAxLTEuNTEuNDUtMS45MSAxLjE2LS44MiAxLjQxLS4yMiAzLjUuNTggNC42NS4zOS41Ny44NSAxLjE5IDEuNDcgMS4xNy41OC0uMDIuODEtLjM4IDEuNTEtLjM4cy45MS4zOCAxLjUyLjM2Yy42NC0uMDEgMS4wMy0uNTcgMS40Mi0xLjE0LjQ0LS42NS42Mi0xLjI3LjY0LTEuMzEtLjAxLS4wMS0xLjIzLS40OC0xLjI0LTEuODgtLjAxLTEuMTcuOTUtMS43MyAxLTEuNzYtLjU2LS43OS0xLjQxLS44OC0xLjctLjkiPjwvcGF0aD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTE4LjY0IDguMjdjMS42NSAwIDIuODEgMS4xNCAyLjgxIDIuOCAwIDEuNjctMS4xOCAyLjgxLTIuODUgMi44MWgtMS44M3YyLjkxaC0xLjMyVjguMjdoMy4xOXptLTEuODggNC41aDEuNTJjMS4xNSAwIDEuODEtLjYyIDEuODEtMS43cy0uNjYtMS42OS0xLjgtMS42OWgtMS41MnYzLjM5ek0yMS43NyAxNS4wM2MwLTEuMDkuODMtMS43MiAyLjM3LTEuODFsMS42NS0uMXYtLjQ3YzAtLjY5LS40Ni0xLjA3LTEuMjYtMS4wNy0uNjcgMC0xLjE1LjM0LTEuMjUuODdoLTEuMTljLjA0LTEuMTEgMS4wOC0xLjkxIDIuNDgtMS45MSAxLjUxIDAgMi41Ljc5IDIuNSAyLjAydjQuMjRoLTEuMjJ2LTEuMDJoLS4wM2MtLjM1LjY3LTEuMTIgMS4wOS0xLjk1IDEuMDktMS4yNC0uMDEtMi4xLS43NC0yLjEtMS44NHptNC4wMi0uNTVWMTRsLTEuNDcuMDljLS44My4wNS0xLjI2LjM2LTEuMjYuOSAwIC41Mi40NS44NiAxLjE1Ljg2LjkgMCAxLjU4LS41NyAxLjU4LTEuMzd6TTI4LjE5IDE5LjA4di0xLjAyYy4wOC4wMS4yOC4wMi4zOS4wMi41OSAwIC45Mi0uMjUgMS4xMi0uODlsLjEyLS4zOC0yLjI0LTYuMjFoMS4zOGwxLjU2IDUuMDRoLjAzbDEuNTYtNS4wNGgxLjM1bC0yLjMyIDYuNTJjLS41MyAxLjUtMS4xNCAxLjk5LTIuNDMgMS45OS0uMTEuMDEtLjQzLS4wMS0uNTItLjAzeiI+PC9wYXRoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz48L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWhvbGRlciBpbmZvcG9wIiB0aXRsZT0iIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJHb29nbGUgUGF5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjciIGhlaWdodD0iMTgiIHZpZXdCb3g9IjAgMCAzOSAyNiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMS44MiAwaDM1LjM2YzEgMCAxLjgyLjgzIDEuODIgMS44NXYyMi4zYzAgMS4wMi0uODIgMS44NS0xLjgyIDEuODVIMS44MkMuODIgMjYgMCAyNS4xNyAwIDI0LjE1VjEuODVDMCAuODMuODIgMCAxLjgyIDB6IiBmaWxsPSIjZjVmNmY4Ij48L3BhdGg+PHBhdGggZD0iTTE4Ljc0IDkuNTh2Mi44M2gxLjczYy40MSAwIC43NS0uMTQgMS4wMi0uNDIuMjgtLjI4LjQyLS42MS40Mi0xIDAtLjM4LS4xNC0uNzEtLjQyLS45OWExLjMzIDEuMzMgMCAwIDAtMS4wMi0uNDNsLTEuNzMuMDF6bTAgMy44M3YzLjI4aC0xLjAzdi04LjFoMi43NGMuNyAwIDEuMjkuMjMgMS43OC43cy43NCAxLjA0Ljc0IDEuNzFjMCAuNjktLjI1IDEuMjYtLjc0IDEuNzItLjQ4LjQ2LTEuMDcuNjktMS43OC42OWgtMS43MXpNMjQuMDEgMTVjMCAuMjcuMTEuNS4zNC42OC4yMy4xOC41LjI3LjguMjcuNDMgMCAuODItLjE2IDEuMTYtLjQ5LjM0LS4zMi41MS0uNzEuNTEtMS4xNC0uMzItLjI2LS43Ny0uMzgtMS4zNS0uMzgtLjQyIDAtLjc3LjEtMS4wNS4zMS0uMjcuMTktLjQxLjQ0LS40MS43NW0xLjM0LTQuMDRjLjc2IDAgMS4zNy4yMSAxLjgxLjYyLjQ0LjQxLjY2Ljk4LjY2IDEuNjl2My40MmgtLjk5di0uNzdoLS4wNWMtLjQzLjYzLTEgLjk1LTEuNzEuOTUtLjYxIDAtMS4xMi0uMTgtMS41Mi0uNTQtLjQxLS4zNi0uNjEtLjgyLS42MS0xLjM2IDAtLjU3LjIyLTEuMDMuNjUtMS4zNy40My0uMzQgMS4wMS0uNTEgMS43My0uNTEuNjEgMCAxLjEyLjExIDEuNTIuMzR2LS4yM2MwLS4zNi0uMTQtLjY3LS40My0uOTItLjI3LS4yNS0uNjMtLjM4LTEtLjM4LS41OCAwLTEuMDMuMjUtMS4zNy43NGwtLjkxLS41OGMuNS0uNzMgMS4yNC0xLjEgMi4yMi0xLjFtOC4xNS4xOWwtMy40NSA4aC0xLjA3bDEuMjgtMi44LTIuMjctNS4yaDEuMTJsMS42NCAzLjk5aC4wMmwxLjYtMy45OWgxLjEzeiIgZmlsbD0iIzVmNjM2OCI+PC9wYXRoPjxwYXRoIGQ9Ik0xNC41NiAxMi43YzAgMS40Mi0uNSAyLjYyLTEuMzcgMy40M2wtMS40OS0xLjE3Yy40OC0uMzMuODItLjg0LjkzLTEuNDFoLTIuNXYtMS44aDQuMzZjLjA1LjMxLjA3LjYzLjA3Ljk1eiIgZmlsbD0iIzQyODVmNCI+PC9wYXRoPjxwYXRoIGQ9Ik0xMy4xOSAxNi4xM2MtLjc3LjcyLTEuODIgMS4xMy0zLjA3IDEuMTNhNC42MSA0LjYxIDAgMCAxLTQuMTMtMi41NmwxLjUzLTEuMjFjLjM2IDEuMTEgMS4zOSAxLjkzIDIuNiAxLjkzLjYyIDAgMS4xNi0uMTYgMS41OC0uNDVsMS40OSAxLjE2eiIgZmlsbD0iIzM0YTg1MyI+PC9wYXRoPjxwYXRoIGQ9Ik03LjUyIDEzLjQ5TDUuOTkgMTQuN2MtLjMxLS42NC0uNDgtMS4zNC0uNDgtMi4xLS4wMS0uNzIuMTYtMS40NC40OC0yLjA5bDEuNTMgMS4yMWMtLjE5LjU2LS4xOSAxLjE4IDAgMS43N3oiIGZpbGw9IiNmYWJiMDUiPjwvcGF0aD48cGF0aCBkPSJNMTMuMjIgOS4xNWwtMS4zMiAxLjMzYy0uNDgtLjQ2LTEuMDktLjY5LTEuNzgtLjY5LTEuMjEgMC0yLjI0LjgxLTIuNiAxLjkzTDUuOTkgMTAuNWE0LjYxIDQuNjEgMCAwIDEgNC4xMy0yLjU2YzEuMjUgMCAyLjI5LjQ2IDMuMSAxLjIxeiIgZmlsbD0iI2U5NDIzNSI+PC9wYXRoPjxwYXRoIGQ9Ik0zNy4xOC42NWMuNjUgMCAxLjE4LjU0IDEuMTggMS4ydjIyLjNjMCAuNjYtLjUzIDEuMi0xLjE4IDEuMkgxLjgyYy0uNjUgMC0xLjE4LS41NC0xLjE4LTEuMlYxLjg1YzAtLjY2LjUzLTEuMiAxLjE4LTEuMmgzNS4zNm0wLS42NUgxLjgyQy44MiAwIDAgLjgzIDAgMS44NXYyMi4zQzAgMjUuMTcuODIgMjYgMS44MiAyNmgzNS4zNmMxLjAxIDAgMS44Mi0uODMgMS44Mi0xLjg1VjEuODVDMzkgLjgzIDM4LjE4IDAgMzcuMTggMHoiIG9wYWNpdHk9IjAuMSI+PC9wYXRoPjwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctMTIgY29sLW1kLTEyIGNvbC1zbS0xMiBjb2wteHMtMTIgY29sIj4NCg0KDQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXItc29jaWFsIj4NCg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXJfX3NvY2lhbCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY29weXJpZ2h0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICDCqSBPdXRTYXZ2eSBMdGQsIEFsbCByaWdodHMgcmVzZXJ2ZWQNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyX19zb2NpYWwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmsgaXRlbXByb3A9InVybCIgaHJlZj0iaHR0cHM6Ly93d3cub3V0c2F2dnkuY29tIiByZWw9IiI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtbm93cmFwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vcmVmZXJlciwgLG5vb3BlbmVyIiB0aXRsZT0iT3V0U2F2dnkgb24gSW5zdGFncmFtIiBocmVmPSJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL291dHNhdnZ5LyIgYXJpYS1sYWJlbD0iT3V0U2F2dnkgb24gSW5zdGFncmFtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJzdmctaWNvbiIgdmlld0JveD0iMCAwIDIwIDIwIiBmaWxsPSIjMzMzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbD0iIzMzMyIgZD0iTTE0LjUyLDIuNDY5SDUuNDgyYy0xLjY2NCwwLTMuMDEzLDEuMzQ5LTMuMDEzLDMuMDEzdjkuMDM4YzAsMS42NjIsMS4zNDksMy4wMTIsMy4wMTMsMy4wMTJoOS4wMzhjMS42NjIsMCwzLjAxMi0xLjM1LDMuMDEyLTMuMDEyVjUuNDgyQzE3LjUzMSwzLjgxOCwxNi4xODIsMi40NjksMTQuNTIsMi40NjkgTTEzLjAxMiw0LjcyOWgyLjI2djIuMjU5aC0yLjI2VjQuNzI5eiBNMTAsNi45ODhjMS42NjQsMCwzLjAxMiwxLjM0OSwzLjAxMiwzLjAxMmMwLDEuNjY0LTEuMzQ4LDMuMDEzLTMuMDEyLDMuMDEzYy0xLjY2NCwwLTMuMDEyLTEuMzQ5LTMuMDEyLTMuMDEzQzYuOTg4LDguMzM2LDguMzM2LDYuOTg4LDEwLDYuOTg4IE0xNi4wMjUsMTQuNTJjMCwwLjgzMS0wLjY3NiwxLjUwNi0xLjUwNiwxLjUwNkg1LjQ4MmMtMC44MzEsMC0xLjUwNy0wLjY3NS0xLjUwNy0xLjUwNlY5LjI0N2gxLjU4M0M1LjUxNiw5LjQ5NCw1LjQ4Miw5Ljc0Myw1LjQ4MiwxMGMwLDIuNDk3LDIuMDIzLDQuNTIsNC41MTgsNC41MmMyLjQ5NCwwLDQuNTItMi4wMjIsNC41Mi00LjUyYzAtMC4yNTctMC4wMzUtMC41MDYtMC4wNzYtMC43NTNoMS41ODJWMTQuNTJ6Ij48L3BhdGg+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtbm93cmFwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vcmVmZXJlciwgLG5vb3BlbmVyIiB0aXRsZT0iT3V0U2F2dnkgb24gQmx1ZXNreSIgaHJlZj0iaHR0cHM6Ly9ic2t5LmFwcC9wcm9maWxlL291dHNhdnZ5LmJza3kuc29jaWFsIiBhcmlhLWxhYmVsPSJPdXRTYXZ2eSBvbiBCbHVlc2t5Ij4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9InN2Zy1pY29uIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAyNCAyNCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsPSIjMzMzIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD0iTTEyIDExLjM4OGMtLjkwNi0xLjc2MS0zLjM3Mi01LjA0NC01LjY2NS02LjY2MmMtMi4xOTctMS41NS0zLjAzNC0xLjI4My0zLjU4My0xLjAzM0MyLjExNiAzLjk3OCAyIDQuOTU1IDIgNS41MjhjMCAuNTc1LjMxNSA0LjcwOS41MiA1LjRjLjY4IDIuMjggMy4wOTQgMy4wNSA1LjMyIDIuODAzYy0zLjI2LjQ4My02LjE1NyAxLjY3LTIuMzYgNS44OThjNC4xNzggNC4zMjUgNS43MjYtLjkyNyA2LjUyLTMuNTljLjc5NCAyLjY2MyAxLjcwOCA3LjcyNiA2LjQ0NCAzLjU5YzMuNTU2LTMuNTkuOTc3LTUuNDE1LTIuMjgzLTUuODk4YzIuMjI1LjI0NyA0LjY0LS41MjMgNS4zMTktMi44MDNjLjIwNS0uNjkuNTItNC44MjUuNTItNS4zOTljMC0uNTc1LS4xMTYtMS41NS0uNzUyLTEuODM4Yy0uNTQ5LS4yNDgtMS4zODYtLjUxNy0zLjU4MyAxLjAzM2MtMi4yOTMgMS42MjEtNC43NiA0LjkwNC01LjY2NSA2LjY2NCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtbm93cmFwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGl0ZW1wcm9wPSJzYW1lQXMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vcmVmZXJlciwgLG5vb3BlbmVyIiB0aXRsZT0iT3V0U2F2dnkgb24gRmFjZWJvb2siIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9vdXRzYXZ2eXVrLyIgYXJpYS1sYWJlbD0iT3V0U2F2dnkgb24gRmFjZWJvb2siPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9InN2Zy1pY29uIiB2aWV3Qm94PSIwIDAgMjAgMjAiIGZpbGw9IiMzMzMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsPSIjMzMzIiBkPSJNMTEuMzQ0LDUuNzFjMC0wLjczLDAuMDc0LTEuMTIyLDEuMTk5LTEuMTIyaDEuNTAyVjEuODcxaC0yLjQwNGMtMi44ODYsMC0zLjkwMywxLjM2LTMuOTAzLDMuNjQ2djEuNzY1aC0xLjhWMTBoMS44djguMTI4aDMuNjAxVjEwaDIuNDAzbDAuMzItMi43MThoLTIuNzI0TDExLjM0NCw1LjcxeiI+PC9wYXRoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQoNCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgPC9kaXY+DQoNCg0KICAgIDwvZGl2Pg0KDQo8L2Rpdj4NCg0KPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9sZCtqc29uIj57IkBjb250ZXh0IjoiaHR0cDovL3NjaGVtYS5vcmciLCJAdHlwZSI6IkJyYW5kIiwibmFtZSI6Ik91dFNhdnZ5IiwiaW1hZ2UiOiJodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9vdXRzYXZ2eWxvZ28tbmV3LnBuZyIsImxvZ28iOiJodHRwczovL2Nkbi5vdXRzYXZ2eS5jb20vd2Vic2l0ZS9vdXRzYXZ2eWxvZ28tbmV3LnBuZyIsInVybCI6Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbSIsInNhbWVBcyI6WyJodHRwczovL2FwcHMuYXBwbGUuY29tL2diL2FwcC9vdXRzYXZ2eS9pZDcyMjM0NDI3NiIsImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2FwcHMvZGV0YWlscz9pZD1jb20ub3V0c2F2dnlhcHAiLCJodHRwczovL3d3dy5mYWNlYm9vay5jb20vb3V0c2F2dnl1ayIsImh0dHBzOi8vdHdpdHRlci5jb20vb3V0c2F2dnkiLCJodHRwczovL2luc3RhZ3JhbS5jb20vb3V0c2F2dnkvIl19PC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2xkK2pzb24iPnsiQGNvbnRleHQiOiJodHRwOi8vc2NoZW1hLm9yZyIsIkB0eXBlIjoiV2ViU2l0ZSIsInVybCI6Imh0dHBzOi8vd3d3Lm91dHNhdnZ5LmNvbSIsInBvdGVudGlhbEFjdGlvbiI6W3siQHR5cGUiOiJTZWFyY2hBY3Rpb24iLCJ0YXJnZXQiOiJodHRwczovL3d3dy5vdXRzYXZ2eS5jb20vZXZlbnRzP3Rlcm09e3NlYXJjaF90ZXJtX3N0cmluZ30iLCJxdWVyeS1pbnB1dCI6InJlcXVpcmVkIG5hbWU9c2VhcmNoX3Rlcm1fc3RyaW5nIn1dfTwvc2NyaXB0Pg0KDQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8ZGl2IGNsYXNzPSJtZW51X292ZXJsYXkiPg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXYtbW9iaWxlLXRvcC1iYXIiPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii8iPg0KICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvb3V0c2F2dnktbG9nby13aGl0ZS5wbmciIGNsYXNzPSJsb2dvIiBhbHQ9Ik91dFNhdnZ5IExvZ28iIC8+DQogICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ1dHRvbi13cmFwcGVyIj4NCiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoQnRuIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaC1uYXYtZHJvcC1idXR0b24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjgwMHB4IiBoZWlnaHQ9IjgwMHB4IiB2aWV3Qm94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIGNsYXNzPSJzdmctc2VhcmNoIiBvbmNsaWNrPSJvcGVuRXZlbnRTZWFyY2goKTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTExIDZDMTMuNzYxNCA2IDE2IDguMjM4NTggMTYgMTFNMTYuNjU4OCAxNi42NTQ5TDIxIDIxTTE5IDExQzE5IDE1LjQxODMgMTUuNDE4MyAxOSAxMSAxOUM2LjU4MTcyIDE5IDMgMTUuNDE4MyAzIDExQzMgNi41ODE3MiA2LjU4MTcyIDMgMTEgM0MxNS40MTgzIDMgMTkgNi41ODE3MiAxOSAxMVoiIHN0cm9rZT0iIzAwMDAwMCIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjwvcGF0aD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Im1lbnVCdG4iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoLW5hdi1kcm9wLWJ1dHRvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0ic3ZnLWNsb3NlIiBmaWxsPSIjMDAwMDAwIiB3aWR0aD0iODAwcHgiIGhlaWdodD0iODAwcHgiIHZpZXdCb3g9IjAgMCAxNiAxNiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMCAxNC41NDVMMS40NTUgMTYgOCA5LjQ1NSAxNC41NDUgMTYgMTYgMTQuNTQ1IDkuNDU1IDggMTYgMS40NTUgMTQuNTQ1IDAgOCA2LjU0NSAxLjQ1NSAwIDAgMS40NTUgNi41NDUgOHoiIGZpbGwtcnVsZT0iZXZlbm9kZCI+PC9wYXRoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51X3dyYXBwZXIiPg0KDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudV93cmFwcGVyX3BhZGRpbmciPg0KDQoNCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWNvbGwtbGlua3MiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZ3VpZGUiIGNsYXNzPSJuYXYtY29sbC1saW5rIj5HdWlkZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9ldmVudHMiIGNsYXNzPSJuYXYtY29sbC1saW5rIj5Ccm93c2U8L2E+DQoNCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LW1lbnUtbGlua3Mtd3JhcCI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1tZW51LWxpbmsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii90aGVhcHAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9ImhlYWRpbmctNCI+RG93bmxvYWQgVGhlIEFwcA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LW1lbnUtbGluayI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3N1cHBvcnQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9ImhlYWRpbmctNCI+U3VwcG9ydA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1tZW51LWxpbmsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGFydG5lcnMub3V0c2F2dnkuY29tIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJoZWFkaW5nLTQiPkFkZCBFdmVudA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1tZW51LWxpbmtzLXdyYXAiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJsb2NhdGlvbkJ0biI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9jYXRpb24tcG9wdXAiIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0OyBwYWRkaW5nLXRvcDogMTBweDsgcGFkZGluZy1ib3R0b206IDEwcHg7IG1hcmdpbjogMDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjgwMHB4IiBoZWlnaHQ9IjgwMHB4IiB2aWV3Qm94PSIwIDAgMTAyNCAxMDI0IiBmaWxsPSIjMDAwMDAwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik04MDAgNDE2YTI4OCAyODggMCAxIDAtNTc2IDBjMCAxMTguMTQ0IDk0LjUyOCAyNzIuMTI4IDI4OCA0NTYuNTc2QzcwNS40NzIgNjg4LjEyOCA4MDAgNTM0LjE0NCA4MDAgNDE2ek01MTIgOTYwQzI3Ny4zMTIgNzQ2LjY4OCAxNjAgNTY1LjMxMiAxNjAgNDE2YTM1MiAzNTIgMCAwIDEgNzA0IDBjMCAxNDkuMzEyLTExNy4zMTIgMzMwLjY4OC0zNTIgNTQ0eiI+PC9wYXRoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTUxMiA1MTJhOTYgOTYgMCAxIDAgMC0xOTIgOTYgOTYgMCAwIDAgMCAxOTJ6bTAgNjRhMTYwIDE2MCAwIDEgMSAwLTMyMCAxNjAgMTYwIDAgMCAxIDAgMzIweiI+PC9wYXRoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+U2lkY3VwPC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXYtbWVudS1saW5rIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNjb3VudGxvZ2luIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJoZWFkaW5nLTQiPkxvZ2luDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1tZW51LWxpbmsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9yZWdpc3RlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0iaGVhZGluZy00Ij5SZWdpc3Rlcg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIA0KDQo8ZGl2IGNsYXNzPSJuYXYtYWR2ZXJ0Ij4NCiAgICA8ZGl2IGlkPSJldmVudHNjb250ZW50IiBjbGFzcz0ibW9kdWxlLWJveCByb3ciPg0KDQogICAgICAgIDxkaXYgY2xhc3M9Im5ld3NwYW5lbCIgaWQ9InRhYi1hbGwiIHN0eWxlPSJkaXNwbGF5OiBibG9jazsiPg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgcm93LTE2Ij4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctMTIgY29sLW1kLTEyIGNvbC1zbS0xMiBjb2wteHMtMTIiPg0KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZXZlbnQvMjQ4MDUvcHJpZGUtaW4tc3VycmV5LTIwMjUiIGFyaWEtbGFiZWw9IlByaWRlIGluIFN1cnJleSAyMDI1Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJlbnRyeSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGh1bWItYmctaG9sZGVyIGVudHJ5X19iZy1pbWctaG9sZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmUtcHJpY2UiPlBheSBXaGF0IFlvdSBDYW48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImxhenkiIHNyYz0naHR0cHM6Ly9jZG4ub3V0c2F2dnkuY29tL3dlYnNpdGUvcHJlbG9hZGVyLmpwZycgZGF0YS1zcmM9Imh0dHBzOi8vY2RuLm91dHNhdnZ5LmNvbS9iYW5uZXJpbWFnZS8zMGUyOWMxOC05NTZhLTRkYjItYTQ5My1hYTQxNTExZDQ0OGMuanBnIiBhbHQ9IlByaWRlIGluIFN1cnJleSAyMDI1IiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJib3R0b20tZ3JhZGllbnQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRodW1iLXRleHQtaG9sZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJ0aHVtYi1lbnRyeS10aXRsZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQcmlkZSBpbiBTdXJyZXkgMjAyNQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmFubmVyLWVudHJ5LWxvY2F0aW9uIj5TdG9rZSBQYXJrIC0gU2F0dXJkYXkgNnRoIFNlcHRlbWJlciAyMDI1PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hcnRpY2xlPg0KICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgIDwvZGl2Pg0KDQogICAgPC9kaXY+DQo8L2Rpdj4NCg0KDQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51X2Zvb3Rlcl9idXR0b25zIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWNvbGwtbGlua3MiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJuYXYtY29sbC1saW5rIiBocmVmPSIvYWNjb3VudGxvZ2luIj5Mb2dpbjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJuYXYtY29sbC1saW5rIiBocmVmPSIvcmVnaXN0ZXIiPlJlZ2lzdGVyPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgPGZvb3RlciBjbGFzcz0ibWVudV9mb290ZXIiPg0KDQogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImZvb3Rlci1hcHBzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFjdGlvbnMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gdWktZ3JhZGllbnQtZ3JlZW4gYnRuLWFwcC1zdG9yZSBidG4tZG93bmxvYWQgc2hhZG93LWxnIiBocmVmPSJodHRwczovL2FwcHMuYXBwbGUuY29tL2diL2FwcC9vdXRzYXZ2eS9pZDcyMjM0NDI3NiIgdGFyZ2V0PSJfYmxhbmsiPjxzcGFuPkF2YWlsYWJsZSBvbiB0aGU8L3NwYW4+IDxzcGFuPkFwcCBTdG9yZTwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biB1aS1ncmFkaWVudC1ibHVlIGJ0bi1nb29nbGUtcGxheSBidG4tZG93bmxvYWQgc2hhZG93LWxnIiBocmVmPSJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9hcHBzL2RldGFpbHM/aWQ9Y29tLm91dHNhdnZ5YXBwIiB0YXJnZXQ9Il9ibGFuayI+PHNwYW4+QXZhaWxhYmxlIG9uIDwvc3Bhbj48c3Bhbj5Hb29nbGUgUGxheTwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudV9mb290ZXJfbGlua3MiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1lbnVfZm9vdGVyX2xpbmsiIGhyZWY9Ii9hYm91dHVzIj5BYm91dDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtZW51X2Zvb3Rlcl9saW5rIiBocmVmPSIvc3VwcG9ydCI+U3VwcG9ydDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtZW51X2Zvb3Rlcl9saW5rIiBocmVmPSIvcmVzZWxsIj5SZVNlbGw8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibWVudV9mb290ZXJfbGluayIgaHJlZj0iL2NvbnRhY3R1cyI+Q29udGFjdDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9mb290ZXI+DQoNCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCg0KICAgICAgICANCg0KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9jb21icmVzLmF4ZC9wYXJ0bmVyQ3NzLzU0YzgxYWUwNDQxNTRmYzFmN2I4OTRlZmI3ZmExMGM4ZjZkYTE0ZmU4NTkwMmY4YzQ1ODU2YzAzN2IyZGI5NTI3Y2JmNzIzNjVhZGE0NDRlNzQxOTI5YTI3ZTdlZGRjMzRiYTk0MzgyYjNmMjQzMjdhZmY0ZTFmYWQyMDExNGZhLyIvPg0KDQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL2NvbWJyZXMuYXhkL3BhcnRuZXJKcy9jNzZlMjA0OGEzNzUzMmZhZDE0YTc0MGNmODAyOTE0NDUyNTJmYjI2MGU3OTRiMGVhYjI1N2RiYmZkM2E5ZmU3MzhmZmM5ODA4MWM2NmEyZDYyN2YzNTc2ZDM5YmY3YzQ0ZmQ1MWI1MWJkNmQ1MjgwYzc1MDI3NDdlOWQ2MTJjMS8iPjwvc2NyaXB0Pg0KDQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KDQogICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIHZhciBpbWFnZTIgPSAkKCcuYXJlYS1tYWluLWZlYXR1cmUgaW1nJyk7DQogICAgICAgICAgICB2YXIgZGF0YXNyYyA9IGltYWdlMi5hdHRyKCdkYXRhLXNyYycpOw0KICAgICAgICAgICAgaW1hZ2UyLmF0dHIoJ3NyYycsIGRhdGFzcmMpOw0KICAgICAgICAgICAgaW1hZ2UyLnJlbW92ZUF0dHIoJ2RhdGEtc3JjJyk7DQogICAgICAgIH0pOw0KDQogICAgICAgICQoZnVuY3Rpb24gKCkgew0KDQogICAgICAgICAgICB2YXIgaXRlbXMgPSAkKCIjcGFzdGV2ZW50c2NvbnRlbnQgZGl2LmNvbC00LW1hciIpOw0KDQogICAgICAgICAgICB2YXIgbnVtSXRlbXMgPSBpdGVtcy5sZW5ndGg7DQogICAgICAgICAgICB2YXIgcGVyUGFnZSA9IDEwOw0KDQogICAgICAgICAgICAvLyBvbmx5IHNob3cgdGhlIGZpcnN0IDIgKG9yICJmaXJzdCBwZXJfcGFnZSIpIGl0ZW1zIGluaXRpYWxseQ0KICAgICAgICAgICAgaXRlbXMuc2xpY2UocGVyUGFnZSkuaGlkZSgpOw0KDQogICAgICAgICAgICAvLyBub3cgc2V0dXAgeW91ciBwYWdpbmF0aW9uDQogICAgICAgICAgICAkKCIjcGFnaW5hdGlvbiIpLnBhZ2luYXRpb24oew0KICAgICAgICAgICAgICAgIGl0ZW1zOiBudW1JdGVtcywNCiAgICAgICAgICAgICAgICBpdGVtc09uUGFnZTogcGVyUGFnZSwNCiAgICAgICAgICAgICAgICBjc3NTdHlsZTogImxpZ2h0LXRoZW1lIiwNCiAgICAgICAgICAgICAgICBvblBhZ2VDbGljazogZnVuY3Rpb24gKHBhZ2VOdW1iZXIpIHsgLy8gdGhpcyBpcyB3aGVyZSB0aGUgbWFnaWMgaGFwcGVucw0KDQogICAgICAgICAgICAgICAgICAgIC8vIHNvbWVvbmUgY2hhbmdlZCBwYWdlLCBsZXRzIGhpZGUvc2hvdyB0cnMgYXBwcm9wcmlhdGVseQ0KICAgICAgICAgICAgICAgICAgICB2YXIgc2hvd0Zyb20gPSBwZXJQYWdlICogKHBhZ2VOdW1iZXIgLSAxKTsNCiAgICAgICAgICAgICAgICAgICAgdmFyIHNob3dUbyA9IHNob3dGcm9tICsgcGVyUGFnZTsNCg0KICAgICAgICAgICAgICAgICAgICB2YXIgbmV3SXRlbXMgPSBpdGVtcy5zbGljZShzaG93RnJvbSwgc2hvd1RvKTsNCg0KICAgICAgICAgICAgICAgICAgICBpdGVtcy5oaWRlKCkgLy8gZmlyc3QgaGlkZSBldmVyeXRoaW5nLCB0aGVuIHNob3cgZm9yIHRoZSBuZXcgcGFnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgLnNsaWNlKHNob3dGcm9tLCBzaG93VG8pLnNob3coKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgdmFyIGNoZWNrRnJhZ21lbnQgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgLy8gaWYgdGhlcmUncyBubyBoYXNoLCBtYWtlIHN1cmUgd2UgZ28gdG8gcGFnZSAxDQogICAgICAgICAgICAgICAgdmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaCB8fCAiI3BhZ2UtMSI7DQoNCiAgICAgICAgICAgICAgICAvLyB3ZSdsbCB1c2UgcmVnZXggdG8gY2hlY2sgdGhlIGhhc2ggc3RyaW5nDQogICAgICAgICAgICAgICAgaGFzaCA9IGhhc2gubWF0Y2goL14jcGFnZS0oXGQrKSQvKTsNCg0KICAgICAgICAgICAgICAgIGlmIChoYXNoKQ0KICAgICAgICAgICAgICAgICAgICAvLyB0aGUgc2VsZWN0UGFnZSBmdW5jdGlvbiBpcyBkZXNjcmliZWQgaW4gdGhlIGRvY3VtZW50YXRpb24NCiAgICAgICAgICAgICAgICAgICAgLy8gd2UndmUgY2FwdHVyZWQgdGhlIHBhZ2UgbnVtYmVyIGluIGEgcmVnZXggZ3JvdXA6IChcZCspDQogICAgICAgICAgICAgICAgICAgICQoIiNwYWdpbmF0aW9uIikucGFnaW5hdGlvbigic2VsZWN0UGFnZSIsIHBhcnNlSW50KGhhc2hbMV0pKTsNCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIC8vIHdlJ2xsIGNhbGwgdGhpcyBmdW5jdGlvbiB3aGVuZXZlciB0aGUgYmFjay9mb3J3YXJkIGlzIHByZXNzZWQNCiAgICAgICAgICAgICQod2luZG93KS5iaW5kKCJwb3BzdGF0ZSIsIGNoZWNrRnJhZ21lbnQpOw0KDQogICAgICAgICAgICAvLyBhbmQgd2UnbGwgYWxzbyBjYWxsIGl0IHRvIGNoZWNrIHJpZ2h0IG5vdyENCiAgICAgICAgICAgIGNoZWNrRnJhZ21lbnQoKTsNCiAgICAgICAgfSk7DQoNCiAgICA8L3NjcmlwdD4NCg0KDQoNCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL2NvbWJyZXMuYXhkL2V4dHJhSnMvM2EwMTk1NTk1NjBjYzIzZTU0MzU2NzU4Y2Q0ZGUyYWY2YmZiOGJlZTBjMzRkNjViZmI4NzNhZjg0ZWM3MjA0ZWQ5ZGJkZThkOWQzNWIzN2M4MDk5NWUxYzc3YjE3NTVkY2MyYjI0ZDgzYzlmZmVjYTZmOTVkZWY3NmRjYzYxZmYvIj48L3NjcmlwdD4NCg0KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSIvY29tYnJlcy5heGQvZXh0cmFDc3MvYjFjMDFlZjUzNzE1NjlkNzc4YTBkNzJmZDVkN2EzZTZkZjE0YWI4NDg5ZDdiZDI0ZmQ1ZTcyMThiMjU1NjJhNjVlYTZkNDFkMTNmZjAzN2Y4YzU1MjhiYThmMjlmZjkyODBmMmMzMDMxNWFjNjViZGFmN2U2MzE5NWFlOGRjODgvIi8+DQoNCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KDQogICAgICAgICAgICBpZiAodHlwZW9mIChTeXMpICE9PSAndW5kZWZpbmVkJykgew0KDQogICAgICAgICAgICAgICAgdmFyIHBybSA9IFN5cy5XZWJGb3Jtcy5QYWdlUmVxdWVzdE1hbmFnZXIuZ2V0SW5zdGFuY2UoKTsNCg0KICAgICAgICAgICAgICAgIHBybS5hZGRfZW5kUmVxdWVzdChmdW5jdGlvbiAoKSB7DQoNCiAgICAgICAgICAgICAgICAgICAgJCgnW3RpdGxlXScpLnRvb2x0aXAoew0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkKHRoaXMpLmF0dHIoJ3RpdGxlJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgPC9zY3JpcHQ+DQoNCiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9hcGkubWFwYm94LmNvbS9tYXBib3gtZ2wtanMvdjIuNy4wL21hcGJveC1nbC5jc3MiIHJlbD0ic3R5bGVzaGVldCIgLz4NCiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYXBpLm1hcGJveC5jb20vbWFwYm94LWdsLWpzL3YyLjcuMC9tYXBib3gtZ2wuanMiPjwvc2NyaXB0Pg0KDQogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FwaS5tYXBib3guY29tL21hcGJveC1nbC1qcy9wbHVnaW5zL21hcGJveC1nbC1nZW9jb2Rlci92NS4wLjAvbWFwYm94LWdsLWdlb2NvZGVyLm1pbi5qcyI+PC9zY3JpcHQ+DQogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hcGkubWFwYm94LmNvbS9tYXBib3gtZ2wtanMvcGx1Z2lucy9tYXBib3gtZ2wtZ2VvY29kZXIvdjUuMC4wL21hcGJveC1nbC1nZW9jb2Rlci5jc3MiIHR5cGU9InRleHQvY3NzIiAvPg0KDQogICAgICAgIDxzY3JpcHQ+DQogICAgICAgICAgICBpZiAodHlwZW9mIG1hcGJveGdsICE9ICd1bmRlZmluZWQnKSB7DQogICAgICAgICAgICAgICAgbWFwYm94Z2wuYWNjZXNzVG9rZW4gPSAncGsuZXlKMUlqb2liM1YwYzJGMmRua2lMQ0poSWpvaVkycDNhbXMwY2pOc01EUTBORE41Y0dwbVpubG5ZVzEwTmlKOS5uYW9Kc1FjRFZOeGkyakVJZW9uQzF3JzsNCiAgICAgICAgICAgICAgICBjb25zdCBnZW9jb2RlciA9IG5ldyBNYXBib3hHZW9jb2Rlcih7DQogICAgICAgICAgICAgICAgICAgIGFjY2Vzc1Rva2VuOiBtYXBib3hnbC5hY2Nlc3NUb2tlbiwNCiAgICAgICAgICAgICAgICAgICAgdHlwZXM6ICdyZWdpb24scGxhY2UsbG9jYWxpdHksbmVpZ2hib3Job29kJywNCiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICdFdmVudHMgTmVhciBUby4uLicsDQogICAgICAgICAgICAgICAgICAgIGNvdW50cmllczogJ0dCJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgZ2VvY29kZXIuYWRkVG8oJyNnZW9jb2RlcicpOw0KDQogICAgICAgICAgICAgICAgJCgiLm1hcGJveGdsLWN0cmwtZ2VvY29kZXItLWlucHV0IikudmFsKCJTaWRjdXAiKTsNCg0KICAgICAgICAgICAgICAgIC8vIEFkZCBnZW9jb2RlciByZXN1bHQgdG8gY29udGFpbmVyLg0KICAgICAgICAgICAgICAgIGdlb2NvZGVyLm9uKCdyZXN1bHQnLCAoZSkgPT4gew0KDQogICAgICAgICAgICAgICAgICAgICQoIi5tYXBib3hnbC1jdHJsLWdlb2NvZGVyLS1pbnB1dCIpLnZhbChlLnJlc3VsdFsidGV4dCJdKTsNCg0KICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnSGlkZGVuTG9jYXRpb25UZXh0JykudmFsdWUgPSBlLnJlc3VsdFsidGV4dCJdOw0KICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnSGlkZGVuTGF0TG9uJykudmFsdWUgPSBlLnJlc3VsdFsiY2VudGVyIl07DQoNCiAgICAgICAgICAgICAgICAgICAgJCgiI0J1dHRvbkhpZGRlbiIpLmF0dHIoJ2Rpc2FibGVkJywgZmFsc2UpOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8gQ2xlYXIgcmVzdWx0cyBjb250YWluZXIgd2hlbiBzZWFyY2ggaXMgY2xlYXJlZC4NCiAgICAgICAgICAgICAgICBnZW9jb2Rlci5vbignY2xlYXInLCAoKSA9PiB7DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgPC9zY3JpcHQ+DQoNCiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUNhYmluOjQwMCw1MDAsNjAwLDcwMHxSdWJpazo1MDAsNzAwJmRpc3BsYXk9c3dhcCIgcmVsPSJzdHlsZXNoZWV0IiAvPg0KDQogICAgICAgIDwhLS0gaW50ZXJzZWN0aW9uIG9ic2VydmVyIHBvbHlmaWxsIC0tPg0KICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvcGxhaW4iIHNyYz0iaHR0cHM6Ly9wb2x5ZmlsbC1mYXN0bHkubmV0L3YzL3BvbHlmaWxsLm1pbi5qcyI+PC9zY3JpcHQ+DQoNCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KDQogICAgICAgICAgICAkKGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICAkKCdbdGl0bGVdJykudG9vbHRpcCh7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkKHRoaXMpLmF0dHIoJ3RpdGxlJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7DQoNCiAgICAgICAgICAgICAgICB2YXIgaW1hZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmxhenknKTsNCg0KICAgICAgICAgICAgICAgIHZhciBvcHRpb25zID0gew0KICAgICAgICAgICAgICAgICAgICAvLyBJZiB0aGUgaW1hZ2UgZ2V0cyB3aXRoaW4gNTBweCBpbiB0aGUgWSBheGlzLCBzdGFydCB0aGUgZG93bmxvYWQuDQogICAgICAgICAgICAgICAgICAgIHJvb3Q6IG51bGwsIC8vIFBhZ2UgYXMgcm9vdA0KICAgICAgICAgICAgICAgICAgICByb290TWFyZ2luOiAnMTAwcHggMTAwcHggMTAwcHggMTAwcHgnLA0KICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQ6IDANCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgdmFyIGZldGNoSW1hZ2UgPSAodXJsKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW1hZ2UgPSBuZXcgSW1hZ2UoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlLnNyYyA9IHVybDsNCiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlLm9ubG9hZCA9IHJlc29sdmU7DQogICAgICAgICAgICAgICAgICAgICAgICBpbWFnZS5vbmVycm9yID0gcmVqZWN0Ow0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB2YXIgbG9hZEltYWdlID0gKGltYWdlKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHZhciBzcmMgPSBpbWFnZS5kYXRhc2V0LnNyYzsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGZldGNoID0gZmV0Y2hJbWFnZShzcmMpOw0KICAgICAgICAgICAgICAgICAgICBmZXRjaEltYWdlKHNyYykudGhlbigoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBpbWFnZS5zcmMgPSBzcmM7DQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdmFyIGhhbmRsZUludGVyc2VjdGlvbiA9IChlbnRyaWVzLCBvYnNlcnZlcikgPT4gew0KICAgICAgICAgICAgICAgICAgICBlbnRyaWVzLmZvckVhY2goZW50cnkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVudHJ5LmludGVyc2VjdGlvblJhdGlvID4gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRJbWFnZShlbnRyeS50YXJnZXQpDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8gVGhlIG9ic2VydmVyIGZvciB0aGUgaW1hZ2VzIG9uIHRoZSBwYWdlDQogICAgICAgICAgICAgICAgdmFyIG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGhhbmRsZUludGVyc2VjdGlvbiwgb3B0aW9ucyk7DQoNCiAgICAgICAgICAgICAgICBpbWFnZXMuZm9yRWFjaChpbWcgPT4gew0KICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKGltZyk7DQogICAgICAgICAgICAgICAgfSkNCg0KICAgICAgICAgICAgICAgIHZhciBib29zdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucHJvbW90ZWQnKTsNCg0KICAgICAgICAgICAgICAgIHZhciBsb2FkQm9vc3QgPSAoYm9vc3QpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGlkID0gYm9vc3QuaWQucmVwbGFjZSgnYm9vc3QnLCAnJyk7DQogICAgICAgICAgICAgICAgICAgIHZhciBzb3VyY2UgPSBib29zdC5nZXRBdHRyaWJ1dGUoImRhdGEtdGl0bGUiKTsNCiAgICAgICAgICAgICAgICAgICAgc3BvbnNvcmVkdmlldyhpZCwgc291cmNlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB2YXIgaGFuZGxlSW50ZXJzZWN0aW9uMiA9IChlbnRyaWVzLCBvYnNlcnZlcjIpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgZW50cmllcy5mb3JFYWNoKGVudHJ5ID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbnRyeS5pbnRlcnNlY3Rpb25SYXRpbyA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkQm9vc3QoZW50cnkudGFyZ2V0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlcjIudW5vYnNlcnZlKGVudHJ5LnRhcmdldCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8gVGhlIG9ic2VydmVyIGZvciB0aGUgaW1hZ2VzIG9uIHRoZSBwYWdlDQogICAgICAgICAgICAgICAgdmFyIG9ic2VydmVyMiA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihoYW5kbGVJbnRlcnNlY3Rpb24yLCBvcHRpb25zKTsNCg0KICAgICAgICAgICAgICAgIGJvb3N0cy5mb3JFYWNoKGltZyA9PiB7DQogICAgICAgICAgICAgICAgICAgIG9ic2VydmVyMi5vYnNlcnZlKGltZyk7DQogICAgICAgICAgICAgICAgfSkNCg0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgPC9zY3JpcHQ+DQoNCiAgICAgICAgPCEtLSBHbG9iYWwgc2l0ZSB0YWcgKGd0YWcuanMpIC0gR29vZ2xlIEFuYWx5dGljcyAtLT4NCiAgICAgICAgPHNjcmlwdCBhc3luYyBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0YWcvanM/aWQ9Ry1ZWUg2TUNXSERGIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KICAgICAgICA8c2NyaXB0Pg0KICAgICAgICAgICAgd2luZG93LmRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107DQogICAgICAgICAgICBmdW5jdGlvbiBndGFnKCkgeyBkYXRhTGF5ZXIucHVzaChhcmd1bWVudHMpOyB9DQogICAgICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOw0KDQogICAgICAgICAgICBndGFnKCdjb25maWcnLCAnRy1ZWUg2TUNXSERGJyk7DQoNCiAgICAgICAgPC9zY3JpcHQ+DQoNCiAgICA8L2Zvcm0+DQo8L2JvZHk+DQo8L2h0bWw+DQo=
    recorded_at: Tue, 08 Nov 2022 00:00:00 GMT
recorded_with: VCR 6.1.0
